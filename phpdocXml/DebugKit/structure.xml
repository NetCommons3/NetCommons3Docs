<?xml version="1.0" encoding="utf-8"?>
<project title="API Documentation" version="2.8.5">
  <partials/>
  <file path="Controller/Component/AssetComponent.php" generated-path="Controller.Component.AssetComponent.html" hash="1cce370046187b9a5cff886cf5a12550" package="Default">
    <docblock line="0">
      <description>AssetComponent Component</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Takako Miyagawa" link="mailto:nekoget@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="13" package="Default">
      <extends>\Component</extends>
      <name>AssetComponent</name>
      <full_name>\AssetComponent</full_name>
      <docblock line="13">
        <description>Summary for AssetComponent Component</description>
        <long-description></long-description>
        <tag name="package" line="13" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="21" package="Default">
        <name>isThemeBootstrapMinCss</name>
        <full_name>\AssetComponent::isThemeBootstrapMinCss()</full_name>
        <docblock line="21">
          <description>cssの存在チェック</description>
          <long-description></long-description>
          <tag name="param" line="21" description="&lt;p&gt;controller object&lt;/p&gt;" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="21" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="Default">
        <name>getSiteTheme</name>
        <full_name>\AssetComponent::getSiteTheme()</full_name>
        <docblock line="35">
          <description>サイトテーマの取得</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;controller object&lt;/p&gt;" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="35" description="null or array" type="\mix">
            <type>\mix</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
    </class>
    <source>eJylks9u00AQxs/xU8whUpNIte+hhJZeKaqU3tHarO0l+0+7YzkR6qGxhLhxAw6oJyS4ACduiJdZ5T3YdWI3rapc8Gn8zcw3Mz/tyTNd6iiZTCKYwJm1FM+V0EpSidBHPhfSp6TCUhkAuCILslBwwVakIDWBE0kXqqB4WgjCeJwpMWsbOJMLCF+JqKdJUtd1LCn6vFDSxsoU8LKdGH7h0qg3NMNdZ0alpQc6k11JjEvcd3mxlb1LEnWHzSshiFlB7rc/cGQSZZxY+7CELpHK1/auFN72zpm17ubn5sfnzZfvrrlx62+uadz6V4dME0OE75RoFOfUwDC7i/dClfanG4qVkZAqxdudBrpK/a2QVzJDpiQwe1VSQZ8rhRYN0RdMnls7enzI2C87GAxzxuklwRKewpnW0ykGhyCM9mqPZ608hhiOapoaPyDxByZpNykWTMZeOXriPVkOI2ZfBeeRoYTr1q0bNB5vJw9256CpaOi6jnopJ9wG7bqn6da/3fqra9675p1r/rjmNsD98HHz99P/AxVsCbLiHPwjIMaQ1eN0/TOeM6Qt4sNMW1ge6D2CoXdOEZksjmf3vMYdtOGO8j6erfYAUNi25eMJ/QO+L0bH</source>
  </file>
  <file path="Controller/AppControllerOrig.php" generated-path="Controller.AppControllerOrig.html" hash="802bf078b6bf9c4ae670a159befea1d7" package="Default">
    <docblock line="0">
      <description>Application level Controller</description>
      <long-description>This file is application-wide controller file. You can put all
application-wide controller-related methods here.

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="CakePHP(tm) v 0.2.9"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="33" package="app.Controller">
      <extends>\Controller</extends>
      <name>AppController</name>
      <full_name>\AppController</full_name>
      <docblock line="33">
        <description>Application Controller</description>
        <long-description>Add your application-wide methods in the class below, your controllers
will inherit them.</long-description>
        <tag name="package" line="33" description="app.Controller"/>
        <tag name="link" line="33" description="http://book.cakephp.org/2.0/en/controllers.html#the-app-controller" link="http://book.cakephp.org/2.0/en/controllers.html#the-app-controller"/>
        <tag name="SuppressWarnings" line="33" description="(PHPMD.NumberOfChildren)"/>
      </docblock>
    </class>
    <source>eJytU1Fv2jAQfs+vOGkPBQRO1bfRSaOiRUNqO1SQpj4a50I8HNuyHdJq2n/fOQQIZdrT/BLl/N333X13/vLVFjZJB4MEBnBnrZKCB2k0KNyhgqnRwRml0NF9hKwK6SGXCoG+/IQf1TJDEEd4g2HwaioQXIOtAnClIsM/kkYOFQ+YQYmhMJmHAh2yVnnKt7j4tuiFsg9jeOFWZnAfizS2RB1g5niJtXFb6BUh2HGaCsqg7phxm37DYOy7k5siQE/0Gz5YmjzU3CHMTKWzpqghzLVgZyT58fLAFekepUDtqVq6pIZXBcLTfHUIR8TMkA+VUtTiQZnrDNQeAVLnxpWtqFXIKeYRIRDT43z68Lx8YOEtRKYXzKQPTq6riPZg8sZgD2XlAzgMXOomj6/NDjt62gRSO3g4OV3E8x8NgYmSegvHczmCswEunPmJomlt4qUWeEzsonZwzW7Y55Z+b9oZfV3XzFiKm8pRl6SStjifljKM2h9GJXyYTZoktO3jcUXQ3tVpza+G0P3r3yZ/exwXz+Iuy+Cdirjc7sMqt/MRinsPa9raerjPOK2/j0y1pH2RmjZfhphRHmdnudjyDUYJdlZA633rydqYLev4nt6w6xR12tFhRSjVJyIfEddInHMtK2sdev+DOy31xvdoGk/37Lkq1+i+59NCqsyh7jcm7tsha04FAb4F1NRxJ/Qr+Z38AaybeVo=</source>
  </file>
  <file path="Controller/AppControllerNC.php" generated-path="Controller.AppControllerNC.html" hash="90e78bc8dcc5c052e65dfd5b7ccaaff3" package="Default">
    <docblock line="0">
      <description>Application level Controller</description>
      <long-description>This file is application-wide controller file. You can put all
application-wide controller-related methods here.

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="CakePHP(tm) v 0.2.9"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="33" package="app.Controller">
      <extends>\NetCommonsAppController</extends>
      <name>AppController</name>
      <full_name>\AppController</full_name>
      <docblock line="33">
        <description>Application Controller for NetCommons</description>
        <long-description>Add your application-wide methods in the class below, your controllers
will inherit them.</long-description>
        <tag name="package" line="33" description="app.Controller"/>
        <tag name="link" line="33" description="http://book.cakephp.org/2.0/en/controllers.html#the-app-controller" link="http://book.cakephp.org/2.0/en/controllers.html#the-app-controller"/>
        <tag name="SuppressWarnings" line="33" description="(PHPMD.NumberOfChildren)"/>
        <tag name="inherited_from" description="\NetCommonsAppController" refers="\NetCommonsAppController" link="/classes/NetCommonsAppController.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="29" package="NetCommons\NetCommons\Controller">
        <name>$layout</name>
        <full_name>\NetCommonsAppController::layout</full_name>
        <default>'NetCommons.default'</default>
        <docblock line="29">
          <description>use layout</description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="36" package="NetCommons\NetCommons\Controller">
        <name>$theme</name>
        <full_name>\NetCommonsAppController::theme</full_name>
        <default>'default'</default>
        <docblock line="36">
          <description>use theme</description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Controller">
        <name>$components</name>
        <full_name>\NetCommonsAppController::components</full_name>
        <default>array('Asset', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; 'auth', 'controller' =&gt; 'auth', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index')), 'DebugKit.Toolbar', 'Flash', 'NetCommons.NetCommons', 'NetCommons.Permission' =&gt; array('allow' =&gt; array('index' =&gt; null, 'view' =&gt; null)), 'RequestHandler', 'Session', 'Workflow.Workflow')</default>
        <docblock line="43">
          <description>use components</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="82" package="NetCommons\NetCommons\Controller">
        <name>$uses</name>
        <full_name>\NetCommonsAppController::uses</full_name>
        <default>array('M17n.Language', 'NetCommons.SiteSetting')</default>
        <docblock line="82">
          <description>use model</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="92" package="NetCommons\NetCommons\Controller">
        <name>$helpers</name>
        <full_name>\NetCommonsAppController::helpers</full_name>
        <default>array('Html' =&gt; array('className' =&gt; 'NetCommons.SingletonViewBlockHtml'), 'NetCommons.BackTo', 'NetCommons.Button', 'NetCommons.Date', 'NetCommons.NetCommonsForm', 'NetCommons.NetCommonsHtml')</default>
        <docblock line="92">
          <description>use helpers</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="NetCommons\NetCommons\Controller">
        <name>__construct</name>
        <full_name>\NetCommonsAppController::__construct()</full_name>
        <docblock line="110">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="110" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="110" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="124" package="NetCommons\NetCommons\Controller">
        <name>beforeFilter</name>
        <full_name>\NetCommonsAppController::beforeFilter()</full_name>
        <docblock line="124">
          <description>beforeFilter</description>
          <long-description></long-description>
          <tag name="return" line="124" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="166" package="NetCommons\NetCommons\Controller">
        <name>beforeRender</name>
        <full_name>\NetCommonsAppController::beforeRender()</full_name>
        <docblock line="166">
          <description>beforeRender</description>
          <long-description></long-description>
          <tag name="return" line="166" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="192" package="NetCommons\NetCommons\Controller">
        <name>beforeRedirect</name>
        <full_name>\NetCommonsAppController::beforeRedirect()</full_name>
        <docblock line="192">
          <description>The beforeRedirect method is invoked when the controller's redirect method is called but before any
further action.</description>
          <long-description>If this method returns false the controller will not continue on to redirect the request.
The $url, $status and $exit variables have same meaning as for the controller's method. You can also
return a string which will be interpreted as the URL to redirect to or return associative array with
key 'url' and optionally 'status' and 'exit'.</long-description>
          <tag name="param" line="192" description="&lt;p&gt;A string or array-based URL pointing to another location within the app,&#10;or an absolute URL&lt;/p&gt;" type="string|array" variable="$url">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;Optional HTTP status code (eg: 404)&lt;/p&gt;" type="integer" variable="$status">
            <type>integer</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;If true, exit() will be called after the redirect&lt;/p&gt;" type="boolean" variable="$exit">
            <type>boolean</type>
          </tag>
          <tag name="return" line="192" description="false to stop redirection event,&#10;  string controllers a new redirection URL or&#10;  array with the keys url, status and exit to be used by the redirect method." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="192" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="link" line="192" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
          <tag name="SuppressWarnings" line="192" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exit</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="207" package="NetCommons\NetCommons\Controller">
        <name>ping</name>
        <full_name>\NetCommonsAppController::ping()</full_name>
        <docblock line="207">
          <description>Keep connection alive</description>
          <long-description></long-description>
          <tag name="author" line="207" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
          <tag name="return" line="207" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="218" package="NetCommons\NetCommons\Controller">
        <name>camelizeKeyRecursive</name>
        <full_name>\NetCommonsAppController::camelizeKeyRecursive()</full_name>
        <docblock line="218">
          <description>camelizeKeyRecursive</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;data to camelize&lt;/p&gt;" type="array" variable="$orig">
            <type>array</type>
          </tag>
          <tag name="return" line="218" description="camelized data" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orig</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="239" package="NetCommons\NetCommons\Controller">
        <name>throwBadRequest</name>
        <full_name>\NetCommonsAppController::throwBadRequest()</full_name>
        <docblock line="239">
          <description>throw bad request</description>
          <long-description></long-description>
          <tag name="return" line="239" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="239" description="" type="\BadRequestException">
            <type>\BadRequestException</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="256" package="NetCommons\NetCommons\Controller">
        <name>emptyRender</name>
        <full_name>\NetCommonsAppController::emptyRender()</full_name>
        <docblock line="256">
          <description>Empty render</description>
          <long-description></long-description>
          <tag name="return" line="256" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
    </class>
    <source>eJytU01v2kAQvftXjNRDIIJ1lFtppRI5QUVKKApIVY/Leoy37Jd21zhR1f/esTFgmran+oLYefNm5r2Zj59c6ZL0+jqBa7hzTknBo7QGFO5RQWZN9FYp9BRvIOtSBiikQqBffsaPa5kjiBO8xTD4ZisQ3ICrInClGoZ/JI09Kh4xB42xtHmAEj2yrnLGd7j8vBxEPYQJPHMnc7hvmrROo4kw81xjbf0OBmWMbpKmgjJoOmb9dtgyWPfq5baMMBDDlg9Wtog19wgzW5m8bWoEcyPYBUlxCh65GrpHKdAE6paCNPC6RHiar4/PDWJmSYdKKRrxWJmbHNQBAdIU1uuuqFPI6S0gQiSmx3n2sFg9sPgSG6ZnzGWIXm6qBh3AFq3AAXQVIniMXJo2j2/sHnv1jI1U7ajh9Bxovv8oCEyVNDs4fW8tuDBw6e13FO1o0yCNwFNiH7WHG3bL3nf0B9Eu6Ou6ZtbRu608TUlV0g4XUi3juPvDqIXfvEmThLZ9MqkIOrhaYMys1qQsPZ53/moEvRDrBYYfkj8dTdbbf/L+nNvpf5fn8Eq9vj2C48Z3NgrFQ4ANLXc9OmScr6Qhg1rSWklDByJjk6FPFjsudnyLTQl2cb6dRZ10G2t3rGdPestuUjRprw4ro1bviHxMXGNxybWqnPMYwlfujTTbMCDTnu7ZotIb9F+KrJQq92iGrdaHcS60BXyJaGjiv2gPP5KfyS9Y841d</source>
  </file>
  <file path="Controller/AppController.php" generated-path="Controller.AppController.html" hash="6fe398d9ae43b398d353a189727ad9be" package="Default">
    <docblock line="0">
      <description>Application level Controller</description>
      <long-description>This file is application-wide controller file. You can put all
application-wide controller-related methods here.

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="CakePHP(tm) v 0.2.9"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <source>eJytUk2P2jAQPTe/YqQe+NDirPZWWqkgWFSkLSDg0lNlnIG4OHZkO6Srqv+945AEKFVP60Mij9+8mXnzPn3O0zyK+/0I+jDOcyUF99JoUHhCBROjvTVKoaX3ANmm0sFeKgT68wt+UMoEQbTwCsPgmylAcA154YErFRj+kzSwqLjHBDL0qUkcpGiR1ZUn/IirL6uuz3owhDXPZQLT0KTJM9QeZpZnWBp7hG7qfT6MY0EZNB0z9tCrGEz+auUh9dAVvYoPNmbvS24RZqbQSdXUA8y1YDck+/ax4Qp0L1KgdtQtPdLA2xTh63zbhANiZkiHQikasanMdQLqjACp98ZmddFcIaeYQwRPTC/zyfNi88z8Tx+Y1phI563cFQHtwOwrgR1khfNg0XOpqzy+Mye8qqeNp2qNhqPLQzhvKAiMlNRHaM/9Cm4WuLLmB4pqtJGTWmCbeI06wSN7Yh9q+rNoN/RlWTKTU9wUlqakKnGNc3Em/aC+MGrhr93E0b9Mf2f3cZLAK5Hfu7axaK27UNw52JEby4dzxsXWLjCVknwgNTla+pCRtTvJuTjyA4YS7KaBWtN61p0xR3alZ/zEHmPU8VUdlvpMvSfyAXENxDVXHMk9dCtxVXGQejhUhieYdDsL9BOTZeSqTq8Hv6J3tA5V0ITr5XILDKYb+oxXq+/T+bq5di59dtoYCXkJLyZB9M7H6DegorW9Fe+S/NowR38AU5GMew==</source>
  </file>
  <file path="Model/AppModel.php" generated-path="Model.AppModel.html" hash="864839dfb98f27ce3bb14bf0f822ff71" package="Default">
    <docblock line="0">
      <description>Application model for CakePHP.</description>
      <long-description>This file is application-wide model file. You can put all
application-wide model-related methods here.

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="CakePHP(tm) v 0.2.9"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="author" line="0" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="35" package="app.Model">
      <extends>\NetCommonsAppModel</extends>
      <name>AppModel</name>
      <full_name>\AppModel</full_name>
      <docblock line="35">
        <description>Application model for Cake.</description>
        <long-description>Add your application-wide methods in the class below, your models
will inherit them.</long-description>
        <tag name="package" line="35" description="app.Model"/>
        <tag name="SuppressWarnings" line="35" description="(PHPMD.NumberOfChildren)"/>
        <tag name="codeCoverageIgnore" line="35" description=""/>
        <tag name="inherited_from" description="\NetCommonsAppModel" refers="\NetCommonsAppModel" link="/classes/NetCommonsAppModel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Model">
        <name>$actsAs</name>
        <full_name>\NetCommonsAppModel::actsAs</full_name>
        <default>array('NetCommons.DateTime', 'NetCommons.Trackable')</default>
        <docblock line="43">
          <description>use behaviors</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="53" package="NetCommons\NetCommons\Model">
        <name>$validate</name>
        <full_name>\NetCommonsAppModel::validate</full_name>
        <default>array()</default>
        <docblock line="53">
          <description>Validation rules</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="NetCommons\NetCommons\Model">
        <name>__construct</name>
        <full_name>\NetCommonsAppModel::__construct()</full_name>
        <docblock line="65">
          <description>Constructor. Binds the model's database table to the object.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;Set this ID for this model on startup,&#10;can also be an array of options, see above.&lt;/p&gt;" type="boolean|integer|string|array" variable="$id">
            <type>boolean</type>
            <type>integer</type>
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;Name of database table to use.&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;DataSource connection name.&lt;/p&gt;" type="string" variable="$ds">
            <type>string</type>
          </tag>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="SuppressWarnings" line="65" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>false</default>
          <type>boolean|integer|string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ds</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="146" package="NetCommons\NetCommons\Model">
        <name>setDataSource</name>
        <full_name>\NetCommonsAppModel::setDataSource()</full_name>
        <docblock line="146">
          <description>Sets the DataSource to which this model is bound.</description>
          <long-description></long-description>
          <tag name="param" line="146" description="&lt;p&gt;The name of the DataSource, as defined in app/Config/database.php&lt;/p&gt;" type="string" variable="$dataSource">
            <type>string</type>
          </tag>
          <tag name="return" line="146" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="146" description="" type="\MissingConnectionException">
            <type>\MissingConnectionException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dataSource</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="175" package="NetCommons\NetCommons\Model">
        <name>create</name>
        <full_name>\NetCommonsAppModel::create()</full_name>
        <docblock line="175">
          <description>Initializes the model for writing a new record, loading the default values
for those fields that are not defined in $data, and clearing previous validation errors.</description>
          <long-description>Especially helpful for saving data in loops.</long-description>
          <tag name="param" line="175" description="&lt;p&gt;Optional data array to assign to the model after it is created. If null or false,&#10;  schema data defaults are not merged.&lt;/p&gt;" type="boolean|array" variable="$data">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="param" line="175" description="&lt;p&gt;If true, overwrites any primary key input with an empty value&lt;/p&gt;" type="boolean" variable="$filterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="175" description="The current Model::data; after merging $data and/or defaults from database" type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="175" description="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array" link="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array"/>
          <tag name="SuppressWarnings" line="175" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>boolean|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="195" package="NetCommons\NetCommons\Model">
        <name>createAll</name>
        <full_name>\NetCommonsAppModel::createAll()</full_name>
        <docblock line="195">
          <description>Initializes the model for writing a new record, loading the default values
for those fields that are not defined in $data, and clearing previous validation errors.</description>
          <long-description>Especially helpful for saving data in loops.</long-description>
          <tag name="param" line="195" description="&lt;p&gt;Optional data array to assign to the model after it is created. If null or false,&#10;  schema data defaults are not merged.&lt;/p&gt;" type="boolean|array" variable="$data">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="param" line="195" description="&lt;p&gt;If true, overwrites any primary key input with an empty value&lt;/p&gt;" type="boolean" variable="$filterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="195" description="The current Model::data; after merging $data and/or defaults from database" type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="195" description="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array" link="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array"/>
          <tag name="SuppressWarnings" line="195" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>boolean|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="233" package="NetCommons\NetCommons\Model">
        <name>begin</name>
        <full_name>\NetCommonsAppModel::begin()</full_name>
        <docblock line="233">
          <description>transaction begin</description>
          <long-description></long-description>
          <tag name="return" line="233" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="246" package="NetCommons\NetCommons\Model">
        <name>commit</name>
        <full_name>\NetCommonsAppModel::commit()</full_name>
        <docblock line="246">
          <description>transaction commit</description>
          <long-description></long-description>
          <tag name="return" line="246" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="258" package="NetCommons\NetCommons\Model">
        <name>rollback</name>
        <full_name>\NetCommonsAppModel::rollback()</full_name>
        <docblock line="258">
          <description>transaction rollback</description>
          <long-description></long-description>
          <tag name="param" line="258" description="&lt;p&gt;Exception&lt;/p&gt;" type="mixed" variable="$ex">
            <type>mixed</type>
          </tag>
          <tag name="return" line="258" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="258" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ex</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="274" package="NetCommons\NetCommons\Model">
        <name>loadModels</name>
        <full_name>\NetCommonsAppModel::loadModels()</full_name>
        <docblock line="274">
          <description>Load models</description>
          <long-description></long-description>
          <tag name="param" line="274" description="&lt;p&gt;models to load&lt;/p&gt;" type="array" variable="$models">
            <type>array</type>
          </tag>
          <tag name="param" line="274" description="&lt;p&gt;data source&lt;/p&gt;" type="string" variable="$source">
            <type>string</type>
          </tag>
          <tag name="return" line="274" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$models</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$source</name>
          <default>'master'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="290" package="NetCommons\NetCommons\Model">
        <name>equalToField</name>
        <full_name>\NetCommonsAppModel::equalToField()</full_name>
        <docblock line="290">
          <description>Check field1 matches field2</description>
          <long-description></long-description>
          <tag name="param" line="290" description="&lt;p&gt;field1 parameters&lt;/p&gt;" type="array" variable="$field1">
            <type>array</type>
          </tag>
          <tag name="param" line="290" description="&lt;p&gt;field2 key&lt;/p&gt;" type="string" variable="$field2">
            <type>string</type>
          </tag>
          <tag name="return" line="290" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field1</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field2</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="301" package="NetCommons\NetCommons\Model">
        <name>_getDefaultValue</name>
        <full_name>\NetCommonsAppModel::_getDefaultValue()</full_name>
        <docblock line="301">
          <description>全カラムのデフォルト値をセットした配列を返す。</description>
          <long-description></long-description>
          <tag name="param" line="301" description="&lt;p&gt;デフォルトを上書きするカラム配列&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="301" description="デフォルト値をセットした配列" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="327" package="NetCommons\NetCommons\Model">
        <name>_getCurrentValue</name>
        <full_name>\NetCommonsAppModel::_getCurrentValue()</full_name>
        <docblock line="327">
          <description>Currentで取れる値を返す。</description>
          <long-description></long-description>
          <tag name="return" line="327" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
    </class>
    <source>eJytU01v2kAQvftXzC2AwhrlVhq1RCSoVIGiEKnqcVmP8Zb90u4aJ63y3zs2NoEmUi+1ZFmej/dm3sxcf3aFS9LBIIEB3DinpOBRWgPaZqggtx6mfIerLytGEXXQYyED5FIh0Je/ZgwrmWGXRm4GP2wJghtwZQSuVJ38fvzQo+IRM9AYC5sFKNBjx9fS96LuwxgeuJMZ3OIelXUaTYSZ5xor63fQK2J04zQVlEFdMeu3/QbBumcvt0WEnug3eLC2eay4R5jZ0mRNPZcwN4KdgeRHZ4dVw91LgSZQteRET3ogLOaPnbmOmJFqeakUiCMzNxmoQwRIQ7LqltQp5GQLiBAJ6X4+vVuu71h8ijXSA2YyRC83ZR0dwOaNtgF0GSJ4jFyaJo9v7B5P+IyNxNZpOHl11M9/FAQmSpodHJ+3Izgb4Mrbnyia1iZBGoHHxNOoPYzYFfvQwh9EO4OvqopZR3ZbeuqSWNI2LqRaxmH7w6iEv2cz4SXtmO9ov5YGljIUcscrDtfROv7raqJHZlS/TFj9ibLSJKHbGI9LIuhdLDFOrdY0DzIu6gW+uIQTKzvY+h+T5N+X1Y3oJsvgmdp550Tao2gnLRQPATa0/9XlIaMBDDVIJWnppKHzkbEO1scFcFzs+LaTkTgORTa+demcxxC+c2+k2YYezWFxy5al3qD/lk8LqTKPpt9uUoZT2jVPaPOtsR4bfQ5VdXoAPkU0VPNbqeB38pL8AV2tdT4=</source>
  </file>
  <file path="Model/DatabaseConfiguration.php" generated-path="Model.DatabaseConfiguration.html" hash="51d18f6afeb6c1b6db0e6a7529bbd44b" package="Default">
    <docblock line="0">
      <description>DatabaseConfiguration Model</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="15" package="Default">
      <extends>\AppModel</extends>
      <name>DatabaseConfiguration</name>
      <full_name>\DatabaseConfiguration</full_name>
      <docblock line="15">
        <description>Summary for DatabaseConfiguration Model</description>
        <long-description>Add your application-wide methods in the class below, your models
will inherit them.</long-description>
        <tag name="package" line="15" description="Default"/>
        <tag name="inherited_from" description="\AppModel" refers="\AppModel" link="/classes/AppModel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="22" package="Default">
        <name>$useTable</name>
        <full_name>\DatabaseConfiguration::useTable</full_name>
        <default>false</default>
        <docblock line="22">
          <description>useTable</description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="29" package="Default">
        <name>$validate</name>
        <full_name>\DatabaseConfiguration::validate</full_name>
        <default>array('datasource' =&gt; array('notEmpty' =&gt; array('rule' =&gt; array('notEmpty'), 'message' =&gt; 'Invalid value', 'required' =&gt; true), 'allowedChoice' =&gt; array('rule' =&gt; array('inList', array('Database/Mysql', 'Database/Postgres')))), 'persistent' =&gt; array('boolean' =&gt; array('rule' =&gt; array('boolean'), 'message' =&gt; 'Invalid value')), 'host' =&gt; array('regex' =&gt; array('rule' =&gt; array('custom', '/[\w\.]+/'), 'message' =&gt; 'Invalid value', 'required' =&gt; true)), 'port' =&gt; array('between' =&gt; array('rule' =&gt; array('between', 0, 65535), 'message' =&gt; 'Invalid value')), 'database' =&gt; array('custom' =&gt; array('rule' =&gt; array('custom', '/[\w]+/'), 'message' =&gt; 'Invalid value')), 'schema' =&gt; array('custom' =&gt; array('rule' =&gt; array('custom', '/[\w]+/'), 'message' =&gt; 'Invalid value', 'allowEmpty' =&gt; true)), 'prefix' =&gt; array('custom' =&gt; array('rule' =&gt; array('custom', '/[\w]+/'), 'message' =&gt; 'Invalid value', 'allowEmpty' =&gt; true)), 'login' =&gt; array('regex' =&gt; array('rule' =&gt; array('custom', '/[\w]+/'), 'message' =&gt; 'Invalid value', 'required' =&gt; true)), 'password' =&gt; array('regex' =&gt; array('rule' =&gt; array('custom', '/[\w]+/'), 'message' =&gt; 'Invalid value', 'allowEmpty' =&gt; true)))</default>
        <docblock line="29">
          <description>Validation rules</description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Model">
        <name>$actsAs</name>
        <full_name>\NetCommonsAppModel::actsAs</full_name>
        <default>array('NetCommons.DateTime', 'NetCommons.Trackable')</default>
        <docblock line="43">
          <description>use behaviors</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="53" package="NetCommons\NetCommons\Model">
        <name>$validate</name>
        <full_name>\NetCommonsAppModel::validate</full_name>
        <default>array()</default>
        <docblock line="53">
          <description>Validation rules</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="NetCommons\NetCommons\Model">
        <name>__construct</name>
        <full_name>\NetCommonsAppModel::__construct()</full_name>
        <docblock line="65">
          <description>Constructor. Binds the model's database table to the object.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;Set this ID for this model on startup,&#10;can also be an array of options, see above.&lt;/p&gt;" type="boolean|integer|string|array" variable="$id">
            <type>boolean</type>
            <type>integer</type>
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;Name of database table to use.&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;DataSource connection name.&lt;/p&gt;" type="string" variable="$ds">
            <type>string</type>
          </tag>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="SuppressWarnings" line="65" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>false</default>
          <type>boolean|integer|string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ds</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="146" package="NetCommons\NetCommons\Model">
        <name>setDataSource</name>
        <full_name>\NetCommonsAppModel::setDataSource()</full_name>
        <docblock line="146">
          <description>Sets the DataSource to which this model is bound.</description>
          <long-description></long-description>
          <tag name="param" line="146" description="&lt;p&gt;The name of the DataSource, as defined in app/Config/database.php&lt;/p&gt;" type="string" variable="$dataSource">
            <type>string</type>
          </tag>
          <tag name="return" line="146" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="146" description="" type="\MissingConnectionException">
            <type>\MissingConnectionException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dataSource</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="175" package="NetCommons\NetCommons\Model">
        <name>create</name>
        <full_name>\NetCommonsAppModel::create()</full_name>
        <docblock line="175">
          <description>Initializes the model for writing a new record, loading the default values
for those fields that are not defined in $data, and clearing previous validation errors.</description>
          <long-description>Especially helpful for saving data in loops.</long-description>
          <tag name="param" line="175" description="&lt;p&gt;Optional data array to assign to the model after it is created. If null or false,&#10;  schema data defaults are not merged.&lt;/p&gt;" type="boolean|array" variable="$data">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="param" line="175" description="&lt;p&gt;If true, overwrites any primary key input with an empty value&lt;/p&gt;" type="boolean" variable="$filterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="175" description="The current Model::data; after merging $data and/or defaults from database" type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="175" description="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array" link="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array"/>
          <tag name="SuppressWarnings" line="175" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>boolean|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="195" package="NetCommons\NetCommons\Model">
        <name>createAll</name>
        <full_name>\NetCommonsAppModel::createAll()</full_name>
        <docblock line="195">
          <description>Initializes the model for writing a new record, loading the default values
for those fields that are not defined in $data, and clearing previous validation errors.</description>
          <long-description>Especially helpful for saving data in loops.</long-description>
          <tag name="param" line="195" description="&lt;p&gt;Optional data array to assign to the model after it is created. If null or false,&#10;  schema data defaults are not merged.&lt;/p&gt;" type="boolean|array" variable="$data">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="param" line="195" description="&lt;p&gt;If true, overwrites any primary key input with an empty value&lt;/p&gt;" type="boolean" variable="$filterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="195" description="The current Model::data; after merging $data and/or defaults from database" type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="195" description="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array" link="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array"/>
          <tag name="SuppressWarnings" line="195" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>boolean|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="233" package="NetCommons\NetCommons\Model">
        <name>begin</name>
        <full_name>\NetCommonsAppModel::begin()</full_name>
        <docblock line="233">
          <description>transaction begin</description>
          <long-description></long-description>
          <tag name="return" line="233" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="246" package="NetCommons\NetCommons\Model">
        <name>commit</name>
        <full_name>\NetCommonsAppModel::commit()</full_name>
        <docblock line="246">
          <description>transaction commit</description>
          <long-description></long-description>
          <tag name="return" line="246" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="258" package="NetCommons\NetCommons\Model">
        <name>rollback</name>
        <full_name>\NetCommonsAppModel::rollback()</full_name>
        <docblock line="258">
          <description>transaction rollback</description>
          <long-description></long-description>
          <tag name="param" line="258" description="&lt;p&gt;Exception&lt;/p&gt;" type="mixed" variable="$ex">
            <type>mixed</type>
          </tag>
          <tag name="return" line="258" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="258" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ex</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="274" package="NetCommons\NetCommons\Model">
        <name>loadModels</name>
        <full_name>\NetCommonsAppModel::loadModels()</full_name>
        <docblock line="274">
          <description>Load models</description>
          <long-description></long-description>
          <tag name="param" line="274" description="&lt;p&gt;models to load&lt;/p&gt;" type="array" variable="$models">
            <type>array</type>
          </tag>
          <tag name="param" line="274" description="&lt;p&gt;data source&lt;/p&gt;" type="string" variable="$source">
            <type>string</type>
          </tag>
          <tag name="return" line="274" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$models</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$source</name>
          <default>'master'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="290" package="NetCommons\NetCommons\Model">
        <name>equalToField</name>
        <full_name>\NetCommonsAppModel::equalToField()</full_name>
        <docblock line="290">
          <description>Check field1 matches field2</description>
          <long-description></long-description>
          <tag name="param" line="290" description="&lt;p&gt;field1 parameters&lt;/p&gt;" type="array" variable="$field1">
            <type>array</type>
          </tag>
          <tag name="param" line="290" description="&lt;p&gt;field2 key&lt;/p&gt;" type="string" variable="$field2">
            <type>string</type>
          </tag>
          <tag name="return" line="290" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field1</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field2</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="301" package="NetCommons\NetCommons\Model">
        <name>_getDefaultValue</name>
        <full_name>\NetCommonsAppModel::_getDefaultValue()</full_name>
        <docblock line="301">
          <description>全カラムのデフォルト値をセットした配列を返す。</description>
          <long-description></long-description>
          <tag name="param" line="301" description="&lt;p&gt;デフォルトを上書きするカラム配列&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="301" description="デフォルト値をセットした配列" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="327" package="NetCommons\NetCommons\Model">
        <name>_getCurrentValue</name>
        <full_name>\NetCommonsAppModel::_getCurrentValue()</full_name>
        <docblock line="327">
          <description>Currentで取れる値を返す。</description>
          <long-description></long-description>
          <tag name="return" line="327" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
    </class>
    <source>eJztV9tu00AQfY6/Yh6QtglRNgKFh9KWosIDKK0qFSEhysPGnthL7V13L3FSxL+z9tq5ivQiEKlKpET2zpnbmZOxfPAmT/KAdjoBdOAdM2zENJ5IMeaxVcxwKeBURpg6c4k4ZtYkUgHARyvgjOuEX7GCwYGRObt5cZz1Rb/89kKZHVUOKRdXUH4SY/J9Soui6Ak0zp5JoXtSxXCG5sTfwrmS3zE0tWeIQuMWT1pDemZqlqMM/bGLQoPgbZ7v71uNeo+4y6oZ0gXiL9qvg6b5C5tlTM1g7NrbTgQNwpRp/RsUTg2KSEOTDH7MU7gqPrFRig2ZE6ZgJKWP2crtyPUDzxoUHMKYpRoXJX5mKY98FmVT1MtxmFJsthpo4uFloMq6F7RaxB0wLa0KkcDh0cLQIkKa91luZmvnLVLmWjpcANtdD8hQaxZ7DPkgqrzgfi0Sj6CUsDSVxSJ+1VntrvDacoVRZTDK4tzJ0WyW4EApXDilwWRBBBsbVGASritOGk8pfDWhQscAqVyHPONm2dfIOQDc1InNI3+dox+mLsP5Ln0DGJ0kkm9wt8kRF0Puau82941W6OlMX1cCnJ+cS21ihZq0az5pB7ZSWg3Z1RXUtRFXrnbZUJj1mZbqQiZuLbfB/ZmJOuNjmKknL5F6gzaFMU5vJS202sisnCX9ellc9r49p0/pL1FrT6pN1aEpEO+guhrXhX4XXg0GLwf3oW8F88WtNPADgdoACaoHyXXVtGuER/XeWCe9VuP9RHtfyT5RznWYYMZ2nvF1vlcWxyOiO1c45uv79z/df4vuVMZ8fVk/6BH4z7bJY3peujeHQqpo1/m+u7h3mG73evcz+AUvSE6f</source>
  </file>
  <file path="Test/Case/Model/SiteSettingTest.php" generated-path="Test.Case.Model.SiteSettingTest.html" hash="c9ae3d1f848729eed06056dc9926c499" package="Default">
    <docblock line="0">
      <description>SiteSetting Test Case</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="15" package="Default">
      <extends>\CakeTestCase</extends>
      <name>SiteSettingTest</name>
      <full_name>\SiteSettingTest</full_name>
      <docblock line="15">
        <description>Summary for SiteSetting Test Case</description>
        <long-description></long-description>
        <tag name="package" line="15" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="22" package="Default">
        <name>$fixtures</name>
        <full_name>\SiteSettingTest::fixtures</full_name>
        <default>array('plugin.net_commons.site_setting', 'plugin.users.user')</default>
        <docblock line="22">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="32" package="Default">
        <name>setUp</name>
        <full_name>\SiteSettingTest::setUp()</full_name>
        <docblock line="32">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="32" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="42" package="Default">
        <name>tearDown</name>
        <full_name>\SiteSettingTest::tearDown()</full_name>
        <docblock line="42">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="42" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="52" package="Default">
        <name>testGetSiteTheme</name>
        <full_name>\SiteSettingTest::testGetSiteTheme()</full_name>
        <docblock line="52">
          <description>getSiteTheme サイト用テーマ名の取得</description>
          <long-description></long-description>
          <tag name="return" line="52" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJyVk1tPE0EUx5+7n2IeSHZLpAs+LlAxeEmMEiPwRAhZd6ft2O3sOjNrqYaHbomCl0C8xkhQExI1MZqoPCn6YcYF/Rae2d2WbRAITWjKnMv8/79zZuxMUAs0c3BQQ4Nomgg8jYUgtIpmMBdo0uYYAio2YYei5jOE0KWQoinCa6RuN200JvzAvn16ojFMh9VfyfEb5aTAI7SO1KcmRGCZZrPZLFEsIN7wKS/5rIqmsJhM/0VXmX8DOyKrdDDl+IhKM0spiUWR73I5PYYupqadDQLLCjnmhp5zpp9C+n5F6YrvYk8vjmo9CGGjYbMWqoDZw4CYmuPZnOfjSRgvCkxdDml1rA5UOrrTa32BLIqQYd5FestmyGbMbiUtC0F4HWyhgUqWhsbTqKEVCnrghVVCFYaFLgcOty/wrqtcEnhmPPlWxzlvkDwboAaGSbpdEQzDZRTd8onbJ6MSUkcQn6ZFRhF8FAqBzTAVlpWdjcLRgKgRPlTOoxpHkwrPNVwlXLCWZRFKhJGnnp+H6rLUkyiwzc75TXpSld26TGgIWyCMg9oUjH0b+0WJhkxCFQtVMVPDDYxktC2jLdlZ2Xv6Xnbuys4P2dmM1x/J9qd47Xn888UJFHJxMdc6U2qasnNPtY1+yfZD2Y5k9CB+8y1eX1FwnTrQPGhjqFzt65QbBIDHTMzAKp6/GdoeLP8s0FfbmOTC+kPTpMA0/3z4Eu88ASuy81FGXxNzq/Hq/b8vtxDqF7a3/Fa2l1NhMnr8e2cDdB6psEKoa+gVwriAS3ubXNAdn7pEIeE6Gi9nkfwTLdVxKwnpIpFcVMtdTE069ZFD7oN3jAU2IGOu773Pz+nE1ef/w4iFSfpIRiN+tqYsKn/w45Vsv97bXt/d3Mhh+JxiUMTa72joeUBmd+X7cSiOGVY2KNWvNx14EUvaP3oNA+A=</source>
  </file>
  <file path="Test/Case/AllTest.php" generated-path="Test.Case.AllTest.html" hash="b580986c0f37b633fd5d8622c8bef8e8" package="Default">
    <docblock line="0">
      <description>All test suite</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="14" package="Default">
      <extends>\CakeTestSuite</extends>
      <name>AllTest</name>
      <full_name>\AllTest</full_name>
      <docblock line="14">
        <description>All test suite</description>
        <long-description></long-description>
        <tag name="copyright" line="14" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
        <tag name="link" line="14" description="CakePHP(tm) Project" link="http://cakephp.org"/>
        <tag name="since" line="14" description="CakePHP(tm) v 0.2.9"/>
        <tag name="license" line="14" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
        <tag name="package" line="14" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="22" package="Default">
        <name>suite</name>
        <full_name>\AllTest::suite()</full_name>
        <docblock line="22">
          <description>All test suite</description>
          <long-description></long-description>
          <tag name="author" line="22" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
          <tag name="return" line="22" description="" type="\CakeTestSuite">
            <type>\CakeTestSuite</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJyFUNFOwjAUfWZfcR9M2IhshDcVEYMaMWqI2w/UrrDKaJf2lomGf7ft5gIPxiZ9uOeee87JmdxURRUkg0EAA7gtS0CmEbThyCySBH+uHDijstorvi4Q3Jt3U0gjmJMNg1SusCaKwYM0IifIpTiHhaAxhAVidZkk1NJW3TKWah156ZKLDXTviGzzOpbXXz4uQ9xGsFTyg1H0h5oLyrrDY9YORvE4vmjlKROancrXdR3LyuLSKMqcS9LydLLlOGyH2EaAl0UGz83si6Il0drVlLmW2CcykWtv74DUtQbf/9RJDBZSwZMR8Mp1wTekJjBBWZGv8Ww7EiP3Yyq3U09XDI0Spx4+S68y7zYraLSlUlgZQV25jVkY2Ry93pkf4BoEq08lwv5vOt2PrjrqcEry3JHuuLJdS7V/Y9QozXcszO7TLIUY+nOiWXPUhmtuLXAIDsEPt43Cgw==</source>
  </file>
  <file path="Test/Case/Controller/Component/AssetComponentTest.php" generated-path="Test.Case.Controller.Component.AssetComponentTest.html" hash="0dbf8faa308734ab3faf30d19ef06fba" package="Default">
    <docblock line="0">
      <description>TestAssetComponentTest</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="18" package="Default">
      <extends>\Controller</extends>
      <name>TestAssetComponentTestController</name>
      <full_name>\TestAssetComponentTestController</full_name>
      <docblock line="18">
        <description>Class TestAssetComponentTestController
CompornentをテストするためのController Class</description>
        <long-description></long-description>
        <tag name="package" line="18" description="Default"/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="" line="25" package="Default">
      <extends>\Controller</extends>
      <name>TestAssetComponentTestControllerGetSiteTheme</name>
      <full_name>\TestAssetComponentTestControllerGetSiteTheme</full_name>
      <docblock line="25">
        <description>Class TestAssetComponentTestControllerGetSiteTheme
$this-&gt;getSiteTheme()をテストするためのclass</description>
        <long-description></long-description>
        <tag name="package" line="25" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="32" package="Default">
        <name>$uses</name>
        <full_name>\TestAssetComponentTestControllerGetSiteTheme::uses</full_name>
        <default>array("NetCommons.SiteSetting")</default>
        <docblock line="32">
          <description>uses model</description>
          <long-description></long-description>
          <tag name="var" line="32" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="" line="39" package="Default">
      <extends>\CakeTestCase</extends>
      <name>AssetComponentTest</name>
      <full_name>\AssetComponentTest</full_name>
      <docblock line="39">
        <description>テスト本体
Class AssetComponentTest</description>
        <long-description></long-description>
        <tag name="package" line="39" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="46" package="Default">
        <name>$fixtures</name>
        <full_name>\AssetComponentTest::fixtures</full_name>
        <default>array('plugin.net_commons.site_setting')</default>
        <docblock line="46">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="Default">
        <name>testIsThemeBootstrapMinCss</name>
        <full_name>\AssetComponentTest::testIsThemeBootstrapMinCss()</full_name>
        <docblock line="55">
          <description>isThemeBootstrapMinCss</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="70" package="Default">
        <name>testGetSiteTheme</name>
        <full_name>\AssetComponentTest::testGetSiteTheme()</full_name>
        <docblock line="70">
          <description>テーマを取得し設定する</description>
          <long-description></long-description>
          <tag name="return" line="70" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJy9VVtrE0EUfk5+xbAUsluabOljL7E1aFFsEVqfy7qZJGM2M+vMbFOVPmwiUmhBUbRWigqCFLF9EF/Ey58Z18u/cGay6e6atDUiBjawcy7ffOc75+zsOb/h5+3x8TwYB6uQ8QXGIK+Qlk8wxFydSIsyzjsBbxAKALgcYLCMWAM1nbYDZjnxndtT861JPKmekktaZR3gIdwE6tfg3J+27Xa7XcKQS3uLYFYitA6WNZZ6BVcpuQFdHke6EDN4SqQdu5T4Bk9nudI7llns/ILvT08HDDKzUCGYU+J5kBYmQPrNmsm6xbwryupyRPCp/tliZV3t5DwbtII4XIGcI1xXEcnlS0ukCj3l3Rek4jmMnSBLgqQ9lYkqm+g8FN17ovNBdLdEuCc62yJ8ITqhCI+SkF5mXSX3jzAA3OAQVxlIHd3Jb45400XIFfvVBmwpicAYbyBWLNdTx6Z1CgF3xFun8YYz6N9fSQNaqv79dl93KHAodW5pvJwfXJctB8a041zPYhop8VKyGlLCpDTHZL7tv/36+VFSraGj1qc2aEwIOE2oeTpyRBIKF9EGDyhkZxCoxW7HJPK5XMH3gjrCasbW+kPGJJ811u/TfC7VlgAxXdLzhHDGqeMvIVxhx8AUSgAM1gmqZqBrAdYjBbi8/KWhKUxLEsrlxuS4yPth2D5T4hnlnoxrHDVkkE1Lu2Zzxe7ZQzOVLw7y/WKZ6y6aA4bTgh5yDG3pNbAUDFJ+4WbgeMzkNIAT4DegYnl4zUyV2xqGgmWcMWPb0eHTaP9AhLsifCPCu6qbup9E9/kJ6DX59zfw2X7VCHIQo/tPoi8SeffHwWF09Kw3jiPpvJiZ7VHVTUf/D6Vt+/vex58770T4WHR2RPhaVbyzHb18Hz3YUkndpkw0UNzMAtMlHWiOVTm9sUTGNYw0T+1vSLHcZqoDUoukWJYLCXJoTg0mjJP1ZthSig8E1xCumoUaokx9m+KV5RJcRYowM8BcOT5Nf5RKqFpQlinLsk4uimpGuZhfyd38D6qzHHieGZdhU+3OX3TOGjI=</source>
  </file>
  <file path="View/Helper/AppHelper.php" generated-path="View.Helper.AppHelper.html" hash="4db3dfa0ce9335603c8e7aaefa283437" package="Default">
    <docblock line="0">
      <description>Application level View Helper</description>
      <long-description>This file is application-wide helper file. You can put all
application-wide helper-related methods here.

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="CakePHP(tm) v 0.2.9"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="29" package="Default">
      <extends>\Helper</extends>
      <name>AppHelper</name>
      <full_name>\AppHelper</full_name>
      <docblock line="29">
        <description>Application helper</description>
        <long-description>Add your application-wide methods in the class below, your helpers
will inherit them.</long-description>
        <tag name="package" line="29" description="Default"/>
      </docblock>
    </class>
    <source>eJytU01v2zAMvftX8JYPJPKw27IBS9E1aIBuCNqgwI6KTNdaZEmQ6LjFsP8+ynbSZN1u08Uw+fgeST19+uwrn+XTaQZTuPLeaCVJOwsGD2jgUWMLt2g8BgYkzLbSEUptEPgrXwvmrS4Qqg7a5QV8dw0oacE3BNKYVP2PgnlAIwkLqJEqV0QOBxSD4rXc4+Z2M6Z6Agu4l14X8CV153yNlmAVZI2tC3sYV0R+keeKK3gs4cLTpGNw/iXop4pgrCYdHzy4kloZEFausUXX0AzWVokLkvKUPHIlujut0EbulpM87LZC+LreHsMJsXK8g8YYUCdlaQswPQK0LV2oB1FvUHIsIgIx0936+ubbw42gZ0pM91joSEHvmoSO4MpuuRHqJhIEJKltVyd37oBnetYRqx13uHxNpPMfFwJLo+0eTuftFVxc4Ca4H6i60ZZRW4WnwnPUAd6J9+LDQN8v7YK+bVvhPMddE3hKVskHXMxrTfPhR3ALf9xNnmVs88WiYeh41Ft7NINRcvpo8jH721uozh/AVVHAC8u+9fLRvMONKCNjhB37tJ31FT1PTCytZndoyz7XlNC16Hrra1i7bwzwmdAy5fD7M/uV/Qaj5jaS</source>
  </file>
  <file path="Plugin/NetCommons/Error/YAExceptionRenderer.php" generated-path="Plugin.NetCommons.Error.YAExceptionRenderer.html" hash="03845db3c7219b083ede3ccc34cccffc" package="Default">
    <docblock line="0">
      <description>Exception Renderer</description>
      <long-description>Provides Exception rendering features. Which allow exceptions to be rendered
as HTML pages.

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="CakePHP(tm) v 2.0"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="54" package="NetCommons\NetCommons\Error">
      <extends>\ExceptionRenderer</extends>
      <name>YAExceptionRenderer</name>
      <full_name>\YAExceptionRenderer</full_name>
      <docblock line="54">
        <description>Exception Renderer.</description>
        <long-description>Captures and handles all unhandled exceptions. Displays helpful framework errors when debug &gt; 1.
When debug &lt; 1 a CakeException will render 404 or 500 errors. If an uncaught exception is thrown
and it is a type that ExceptionHandler does not know about it will be treated as a 500 error.

### Implementing application specific exception rendering

You can implement application specific exception handling in one of a few ways:

- Create a AppController::appError();
- Create a subclass of YAExceptionRenderer and configure it to be the `Exception.renderer`

#### Using AppController::appError();

This controller method is called instead of the default exception handling. It receives the
thrown exception as its only argument. You should implement your error handling in that method.

#### Using a subclass of YAExceptionRenderer

Using a subclass of YAExceptionRenderer gives you full control over how Exceptions are rendered, you
can configure your class in your core.php, with `Configure::write('Exception.renderer', 'MyClass');`
You should place any custom exception renderers in `app/Lib/Error`.</long-description>
        <tag name="package" line="54" description="NetCommons\NetCommons\Error"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="NetCommons\NetCommons\Error">
        <name>error400</name>
        <full_name>\YAExceptionRenderer::error400()</full_name>
        <docblock line="62">
          <description>Convenience method to display a 400 series page.</description>
          <long-description></long-description>
          <tag name="param" line="62" description="&lt;p&gt;Exception&lt;/p&gt;" type="\Exception" variable="$error">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="62" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$error</name>
          <default></default>
          <type>\Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="86" package="NetCommons\NetCommons\Error">
        <name>error500</name>
        <full_name>\YAExceptionRenderer::error500()</full_name>
        <docblock line="86">
          <description>Convenience method to display a 500 page.</description>
          <long-description></long-description>
          <tag name="param" line="86" description="&lt;p&gt;Exception&lt;/p&gt;" type="\Exception" variable="$error">
            <type>\Exception</type>
          </tag>
          <tag name="return" line="86" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$error</name>
          <default></default>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
    <source>eJztVttu20YQfba/YgoHERVYklM4fVATJYHiwAbs1HAcFAEK2CtyKW5N7TK7SylqkX/vmeVFVOQ0aZG+9UUid2bneuYMnz4vsmJ/9OjRPj2ik4+xLLwymq6kTqSVFqcsuLRmqRLpOho2aCg9p1QKX1rphvRrpuKMRJ6bFclG05E3NJP1BZmwPeHo9PrinAoxx73ayVTcycvTy8gv+jSmK1GohF7JpcxNsZDa02srFnJl7B1FmffFeDSKcQPhD42d94MFU6ytmmeeorgf7NFbk/qVsJJem1InggM6pDMdD7eMpK2wscXmzlUstZMJlRw5XWeSLs6um2PWeG0spWWeU9x6FjqhvNIgpVNjF7XTIpcCZ05K8rB0fjY9efP2ZOg/erZ0JRPlvFWzsqqZSSlVOSq+KJ1H7bxQOtwTM7OUHX/aeHhravhiI/iOxaAXudJ3tFv1rZ4BJL/LOGTzwikdyy3pkn4cHtW2qurU5lar1dAUODGlRSKwOqo13Gih/KB+GcLlZ+Uf7e+/LIrxuIRq1HsrtPLqD9k7pN47r3Ll173+z12NK1N6aVnOT4DuZ3IO90q6AvUPVt5Iz3D7XMtob02eV5Y6b9tqJ9aaoNGOTDNTrPjlidtMQxGmKgAqww+DAaMFMFZvSWfEhvRKuSIXa0eZzAtAktJ2WiRH4miVSU2JnJVzmtBjdoN5bY+e0mMSoWGbkFYK7qqxpeOjYwLYnxwd1faGdJYiNoQTi5JR1kZDCiOfWbPSYdQRvvJ8JsivCwa/8Ju8T0MulhKD9IBlutMgD4C89HwthADy8BYkg5QFm2mDaGp1cHBAZwsMGPMEU5IoCsAmYJhcIWOVqrgTYMtd9f33pqQYuajGxtcMhA6wIwyl0ZKnVYAHV7RCC8a11QFNQ9QQARcboIzHsB7gEQEJ24qunMW5cGH+37/cgU6oZmx0qubABheo4lYmhttWe1hTrb3d1OeA3jkO+G8jYd3rDK2KWxVaSJ+ZhPsXA31ogdLOS5FwhOw2kakoc39PcYAQZq5YqqVkRATGrIDR0UZHlUe+Ol+TsPOSyz8MHXGZKfOk05Q1GKJq/FYDAqCqMIe7CX+1pvWVb9SmecgGoTTEHypFIGVEBeiebPYeM22z9Q75CvthnG06GFKq/CGT6s3YQHaHAL/P6HbaKI/HK6u8jHq7jWaeuVhP2Q7Y5bbBdF1BEAPIWOg1xVgmZrEzCdIG97dAw+hczUYBErftTilEfIdFTQRCnJrFArn91nkM2oGOq0Tuq5r86PHY+X5oJX+2XIhEl1IryZujRh3QnVTEhs4cY+wdxhbl5++GTnigug6TPqgg0h4EJWzQ0mpaGpWEUPeKcoYJRxN1HG6FS3ARVdf7CGxv78FCOsepP6utDiZz6S+qQ56ZvT2VUvRDp0eY5CTqBVLt9enhwyYcHhuB1ACrLZatHHU93dzAAC/ZsINAiWFb94K3TxxUaXMOyGNSB5PNqA4mVn4opfODSYbSVuHdq1WtuMEEEfnSTU0io0564b3/pdtO+khYK9YRh92LodyjZxPaMXAY5BpbKMizqEmxltRv9wuRYiPAY30YPHScVac3jAmR8+ZnURVb5Rf1a7zgkW3iL0Tcx9WtFG+wcIqybW2vgUMo+6dvxiivpv8KnE++Mzi/gryXGp+G+F7SIqcw4nQKrv4ljksLPhv+Wzxy+aG9Czh8lXD12onpip5C9FOfnt8jGvOtf4R0juB/dAc81ej+tP8XxVSOzg==</source>
  </file>
  <file path="Plugin/NetCommons/Model/SiteSetting.php" generated-path="Plugin.NetCommons.Model.SiteSetting.html" hash="05d49f3f8730054d81ec20b9412cbc78" package="Default">
    <docblock line="0">
      <description>SiteSetting Model</description>
      <long-description></long-description>
      <tag name="property" line="0" description="" type="\CreatedUser" variable="$CreatedUser">
        <type>\CreatedUser</type>
      </tag>
      <tag name="property" line="0" description="" type="\ModifiedUser" variable="$ModifiedUser">
        <type>\ModifiedUser</type>
      </tag>
      <tag name="author" line="0" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="18" package="Default">
      <extends>\AppModel</extends>
      <name>SiteSetting</name>
      <full_name>\SiteSetting</full_name>
      <docblock line="18">
        <description>Summary for SiteSetting Model</description>
        <long-description>Add your application-wide methods in the class below, your models
will inherit them.</long-description>
        <tag name="package" line="18" description="Default"/>
        <tag name="inherited_from" description="\AppModel" refers="\AppModel" link="/classes/AppModel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Model">
        <name>$actsAs</name>
        <full_name>\NetCommonsAppModel::actsAs</full_name>
        <default>array('NetCommons.DateTime', 'NetCommons.Trackable')</default>
        <docblock line="43">
          <description>use behaviors</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="53" package="NetCommons\NetCommons\Model">
        <name>$validate</name>
        <full_name>\NetCommonsAppModel::validate</full_name>
        <default>array()</default>
        <docblock line="53">
          <description>Validation rules</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="30" package="Default">
        <name>__construct</name>
        <full_name>\SiteSetting::__construct()</full_name>
        <docblock line="30">
          <description>construct</description>
          <long-description></long-description>
          <tag name="param" line="30" description="&lt;p&gt;Set this ID for this model on startup, can also be an array of options, see above.&lt;/p&gt;" type="integer|string|array" variable="$id">
            <type>integer</type>
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="30" description="&lt;p&gt;Name of database table to use.&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="30" description="&lt;p&gt;DataSource connection name.&lt;/p&gt;" type="string" variable="$ds">
            <type>string</type>
          </tag>
          <tag name="return" line="30" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="since" line="30" description="v 3.0.0.0"/>
          <tag name="SuppressWarnings" line="30" description="(PHPMD)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>false</default>
          <type>integer|string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ds</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="40" package="Default">
        <name>getSiteTheme</name>
        <full_name>\SiteSetting::getSiteTheme()</full_name>
        <docblock line="40">
          <description>サイトに設定されているテーマを返す</description>
          <long-description></long-description>
          <tag name="author" line="40" description="Takako Miyagawa" link="mailto:nekoget@gmail.com"/>
          <tag name="return" line="40" description="or null" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="NetCommons\NetCommons\Model">
        <name>__construct</name>
        <full_name>\NetCommonsAppModel::__construct()</full_name>
        <docblock line="65">
          <description>Constructor. Binds the model's database table to the object.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;Set this ID for this model on startup,&#10;can also be an array of options, see above.&lt;/p&gt;" type="boolean|integer|string|array" variable="$id">
            <type>boolean</type>
            <type>integer</type>
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;Name of database table to use.&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;DataSource connection name.&lt;/p&gt;" type="string" variable="$ds">
            <type>string</type>
          </tag>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="SuppressWarnings" line="65" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>false</default>
          <type>boolean|integer|string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ds</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="146" package="NetCommons\NetCommons\Model">
        <name>setDataSource</name>
        <full_name>\NetCommonsAppModel::setDataSource()</full_name>
        <docblock line="146">
          <description>Sets the DataSource to which this model is bound.</description>
          <long-description></long-description>
          <tag name="param" line="146" description="&lt;p&gt;The name of the DataSource, as defined in app/Config/database.php&lt;/p&gt;" type="string" variable="$dataSource">
            <type>string</type>
          </tag>
          <tag name="return" line="146" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="146" description="" type="\MissingConnectionException">
            <type>\MissingConnectionException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dataSource</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="175" package="NetCommons\NetCommons\Model">
        <name>create</name>
        <full_name>\NetCommonsAppModel::create()</full_name>
        <docblock line="175">
          <description>Initializes the model for writing a new record, loading the default values
for those fields that are not defined in $data, and clearing previous validation errors.</description>
          <long-description>Especially helpful for saving data in loops.</long-description>
          <tag name="param" line="175" description="&lt;p&gt;Optional data array to assign to the model after it is created. If null or false,&#10;  schema data defaults are not merged.&lt;/p&gt;" type="boolean|array" variable="$data">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="param" line="175" description="&lt;p&gt;If true, overwrites any primary key input with an empty value&lt;/p&gt;" type="boolean" variable="$filterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="175" description="The current Model::data; after merging $data and/or defaults from database" type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="175" description="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array" link="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array"/>
          <tag name="SuppressWarnings" line="175" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>boolean|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="195" package="NetCommons\NetCommons\Model">
        <name>createAll</name>
        <full_name>\NetCommonsAppModel::createAll()</full_name>
        <docblock line="195">
          <description>Initializes the model for writing a new record, loading the default values
for those fields that are not defined in $data, and clearing previous validation errors.</description>
          <long-description>Especially helpful for saving data in loops.</long-description>
          <tag name="param" line="195" description="&lt;p&gt;Optional data array to assign to the model after it is created. If null or false,&#10;  schema data defaults are not merged.&lt;/p&gt;" type="boolean|array" variable="$data">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="param" line="195" description="&lt;p&gt;If true, overwrites any primary key input with an empty value&lt;/p&gt;" type="boolean" variable="$filterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="195" description="The current Model::data; after merging $data and/or defaults from database" type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="195" description="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array" link="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array"/>
          <tag name="SuppressWarnings" line="195" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>boolean|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="233" package="NetCommons\NetCommons\Model">
        <name>begin</name>
        <full_name>\NetCommonsAppModel::begin()</full_name>
        <docblock line="233">
          <description>transaction begin</description>
          <long-description></long-description>
          <tag name="return" line="233" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="246" package="NetCommons\NetCommons\Model">
        <name>commit</name>
        <full_name>\NetCommonsAppModel::commit()</full_name>
        <docblock line="246">
          <description>transaction commit</description>
          <long-description></long-description>
          <tag name="return" line="246" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="258" package="NetCommons\NetCommons\Model">
        <name>rollback</name>
        <full_name>\NetCommonsAppModel::rollback()</full_name>
        <docblock line="258">
          <description>transaction rollback</description>
          <long-description></long-description>
          <tag name="param" line="258" description="&lt;p&gt;Exception&lt;/p&gt;" type="mixed" variable="$ex">
            <type>mixed</type>
          </tag>
          <tag name="return" line="258" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="258" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ex</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="274" package="NetCommons\NetCommons\Model">
        <name>loadModels</name>
        <full_name>\NetCommonsAppModel::loadModels()</full_name>
        <docblock line="274">
          <description>Load models</description>
          <long-description></long-description>
          <tag name="param" line="274" description="&lt;p&gt;models to load&lt;/p&gt;" type="array" variable="$models">
            <type>array</type>
          </tag>
          <tag name="param" line="274" description="&lt;p&gt;data source&lt;/p&gt;" type="string" variable="$source">
            <type>string</type>
          </tag>
          <tag name="return" line="274" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$models</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$source</name>
          <default>'master'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="290" package="NetCommons\NetCommons\Model">
        <name>equalToField</name>
        <full_name>\NetCommonsAppModel::equalToField()</full_name>
        <docblock line="290">
          <description>Check field1 matches field2</description>
          <long-description></long-description>
          <tag name="param" line="290" description="&lt;p&gt;field1 parameters&lt;/p&gt;" type="array" variable="$field1">
            <type>array</type>
          </tag>
          <tag name="param" line="290" description="&lt;p&gt;field2 key&lt;/p&gt;" type="string" variable="$field2">
            <type>string</type>
          </tag>
          <tag name="return" line="290" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field1</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field2</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="301" package="NetCommons\NetCommons\Model">
        <name>_getDefaultValue</name>
        <full_name>\NetCommonsAppModel::_getDefaultValue()</full_name>
        <docblock line="301">
          <description>全カラムのデフォルト値をセットした配列を返す。</description>
          <long-description></long-description>
          <tag name="param" line="301" description="&lt;p&gt;デフォルトを上書きするカラム配列&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="301" description="デフォルト値をセットした配列" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="327" package="NetCommons\NetCommons\Model">
        <name>_getCurrentValue</name>
        <full_name>\NetCommonsAppModel::_getCurrentValue()</full_name>
        <docblock line="327">
          <description>Currentで取れる値を返す。</description>
          <long-description></long-description>
          <tag name="return" line="327" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
    </class>
    <source>eJx9U0FrE0EUPie/4h1CNykxKXqLba20BxVbCql4KFIm2bfJmN2ZZeZt09T2kERE0JPoQQ+eRATRmzfBH7MI/Rm+mU1iWkqzBGbevO97833vzfq9tJ+Wm6urZViFtiRsI5FUPdjVIcYcdPGt1OgUDY1g26AgDJ9YNFBZ2lzOYqyM5DxteTcnFBn1tQGAR5mCPWn7ciCGAtZJp+L09layptbcv9HVyaYHxFINwP36RGmr2RwOhw2FxOeJVrahTQ/2kLaLLewb/Ry7NEN2UVm8AdmcpTTohJZZHhdhZmmWy/fTtNXKLNpqwEvvTlCHoFjU7pYXHmZJIswIIpZ3nZ/NcjcW1l46wxNCFVqYE8OLBV2XL0Im81oKk4URCUhFZxxn8JkwRoygIkNgOqC+tPBwx5f368QTagWWhKEsrUNXKBCx1dBBcEuP1xHolCRXq4NFPujoY2wsVSyqQYVEJ0bYEwk6TCh4L9jdIkwa2KLrYKxuh3PbOjNddKoU94fLgWKmAmCQMqMAjrUMfcBKxbkcgDuNNff5aDtLU4PWPhVGMbWt7j/Y392peWtLadbhZkKUqYL96GhhYNVZtAERS8f6XMcGqCyO6/5+xbrG5pdKfHlU1Gpdwc9xHsBNL50vGpVPfuWTL/n0dT7+fvHtx9+fn/Lxh3zyNh9/zccv88mbfPoqn/7Op5/zybuLP+/z8ccrj+FADMRAw64ciZ5/DAoHuoe01UuEjP8/hZlPM2cZ6K59vXxGuzk76GOC1UJZxeghS6244bi1GUkVVoNIGks8zX4UqpxUClh2KP08BLCxOTsJloa2McCRPwrIsQe1OuNqzpOSjKDqy6ysgLQWye8Ol9HBs5orc1PCYXAs4gw5s7h4aab7plRX/by8SHXG+CZxm/4BQDGlAQ==</source>
  </file>
  <file path="Plugin/NetCommons/Model/Behavior/DateTimeBehavior.php" generated-path="Plugin.NetCommons.Model.Behavior.DateTimeBehavior.html" hash="c558a89a3cccf927df47addbc425fd62" package="Default">
    <docblock line="0">
      <description>DateTime Behavior</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="NetCommons\NetCommons\Model\Befavior">
      <extends>\ModelBehavior</extends>
      <name>DateTimeBehavior</name>
      <full_name>\DateTimeBehavior</full_name>
      <docblock line="20">
        <description>DateTime Behavior</description>
        <long-description></long-description>
        <tag name="package" line="20" description="NetCommons\NetCommons\Model\Befavior"/>
        <tag name="author" line="20" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="29" package="NetCommons\NetCommons\Model\Befavior">
        <name>getNowTime</name>
        <full_name>\DateTimeBehavior::getNowTime()</full_name>
        <docblock line="29">
          <description>現時刻を取得</description>
          <long-description></long-description>
          <tag name="param" line="29" description="&lt;p&gt;Model using this behavior&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="29" description="&lt;p&gt;Type&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="29" description="now()" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'datetime'</default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJydUrFu2zAQna2vuMGAZMOR2qKT67hO0rE1CsRbEhg0fZZoS6RAUrWNIkumbAE6tMi3BMjPFG5/oyfRslWgRYEu5PEd37t3Rw7e5knuRd2uB114xyxORIZwjgn7JJQmsMRHrLCJ0jBWWqwUnGkmYMBoHUkhQsbDZT5s3rtMVIICxmzFliJjMJD7yCSqoMwozphIQ64yR0uFXEFibd6PovV6HUq0lMuUNKHSMYzRXrgjfNRqidzuWRylwb8To/2N0G5sU+S9gysRrvKtFnFi4eIQvXrx8nXvz1UjzzvL836/MGgC/4OaY1rPyu+BA/zOG++fE80ZX7EYoVHmuhFWQtfnuKhJ/znbyOMpM+bgo7YBuLEo5wZ+awE+H4z/fHj+8Xi3u3/6fvdl9/B19/zt6FyzzPGgnVWbOxRGyBhsIgzMjt3WBGN1mW7bbY4woaXKabSFlnVSqnXQqVy38mJGrweLQnIrlIQY7VityxaCZuneXvAU/Dm1aCnvd6iNVqs9nxHaLu2cDIlNE2CXqtAcg/J96AJX6cRxmdZsO81QxxhUceAvlM6Ytah9OB06cb9D1eazkyERi0yaq6r0DamRWFmZlMotqBCxAKc1XeF2ihthrKll6avU1TvO7UGAszSd0u/S07L1oL521TB0c2TXsO9c3JZ97UdaCRJI2K33C6d0TYk=</source>
  </file>
  <file path="Plugin/NetCommons/Model/Behavior/OriginalKeyBehavior.php" generated-path="Plugin.NetCommons.Model.Behavior.OriginalKeyBehavior.html" hash="155723f983c108b23e27d4991e2301f7" package="Default">
    <docblock line="0">
      <description>OriginalKey Behavior</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="NetCommons\NetCommons\Model\Befavior">
      <extends>\ModelBehavior</extends>
      <name>OriginalKeyBehavior</name>
      <full_name>\OriginalKeyBehavior</full_name>
      <docblock line="20">
        <description>OriginalKey Behavior</description>
        <long-description></long-description>
        <tag name="package" line="20" description="NetCommons\NetCommons\Model\Befavior"/>
        <tag name="author" line="20" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="31" package="NetCommons\NetCommons\Model\Befavior">
        <name>beforeSave</name>
        <full_name>\OriginalKeyBehavior::beforeSave()</full_name>
        <docblock line="31">
          <description>beforeSave is called before a model is saved. Returning false from a beforeSave callback
will abort the save operation.</description>
          <long-description></long-description>
          <tag name="param" line="31" description="&lt;p&gt;Model using this behavior&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="31" description="&lt;p&gt;Options passed from Model::save().&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="31" description="False if the operation should abort. Any other result will continue." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="see" line="31" description="" link="\Model::save()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="NetCommons\NetCommons\Model\Befavior">
        <name>afterSave</name>
        <full_name>\OriginalKeyBehavior::afterSave()</full_name>
        <docblock line="55">
          <description>afterSave is called after a model is saved.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="&lt;p&gt;Model using this behavior&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;True if this save created a new record&lt;/p&gt;" type="boolean" variable="$created">
            <type>boolean</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;Options passed from Model::save().&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="55" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="see" line="55" description="" link="\Model::save()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$created</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="77" package="NetCommons\NetCommons\Model\Befavior">
        <name>generateKey</name>
        <full_name>\OriginalKeyBehavior::generateKey()</full_name>
        <docblock line="77">
          <description>Generate key</description>
          <long-description></long-description>
          <tag name="param" line="77" description="&lt;p&gt;Plugin name&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="param" line="77" description="&lt;p&gt;The name of the DataSource, as defined in app/Config/database.php&lt;/p&gt;" type="string" variable="$dataSource">
            <type>string</type>
          </tag>
          <tag name="return" line="77" description="Hash key" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataSource</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJytVs9vG0UUPtt/xasUde3IrEMFFycOSRMVJGioSG9tVY13n70T786sZmfrWDQS6yABKhw4II4ckABxgAM3fvw1S/8P3uzM2uumTQLlkHh33q/vffO+md15J43Sdn9zsw2b8KHiEy5Y/D7O4TZG7AmXitaNaY/lOpIKjqTiUwn7inHYYfR/T3Dus8A/SXebfseRjJDDEZuyE54w2BHuKYtkTpa9ScJ47AcysWExF1OItE4H/f5sNvMFarIlUmS+VBM4Qn1gX+GekicYaBcVoMjw1YF95+HrU91M8oFdrpIEMp1T45GGg+XTra033+q9vGq/3d5P08EgzzDreHdliHHNldcDu+B1t9vXITVlwZRNEBqVHjYeq1wPb+O4DvqP9PbbQcyyrAmlRgJ4qlGEGaw1Ah8v4Y9wLBUesycIPIOAxTGGbhEYJCbKGDJyCH34CHWuBBcTGLOYNmasZEJujSQmw4jaNrlnPI6BjaTSoCOscoBMUTHNpfBXJCmWWHywYQvalzwzhXRE5UcrYusAphSbw4ZMTTLq3f2mRAR1UAGr0gwGpm6n61exqmoAEn5KTneqHvi4QrcEBobjOLTAfdgXc5DkoEBhlsfadhVIobnI0WbNENeLVZvSSvMRzSeMcxFUiVc0dZrt9lZdDG1bnW6XtqjVImidG87rjd2IZXc4xmHHm+Lccy4t15FWOW7T+xn99fvQ3JKy+DVPQ6ZxP47L4sdysXj+9Z9l8dvzz34vi2/KxZfl4ln5ycLV48Sf7tQ1KYw9qF8ES/DRA4+H3qMu3LwJV3rBLmzVOAmURVEWv5TFT2XxFeH6+y+qvyiLb8vi57L49BX9WBquBmZoIWRPn8KVXjAcDsHzHLZruEOG8XgwmKAwY4IksU7TsbcsSefG4ehAijGfdOsG1ns6W4qPjTWqF7RXrV2U3muqZSQl+QcKCXsI9wmInXuXH2oLA4EzmvRAqvD/Epup/W9ksmTlRZU4kJfrZdkkDehF5cjqiHxMw1nP5fVmfhVXjb4JbLU6XOjuNaOqgdtyNY0YljbSJynwj/L8vDz/3Amy+KESxLOy+L4svisXX9AUDnlI6rUaqpJsmHM2Tw+pMBHRxLFt7e7AWtkM6xeI6F2qFoO951j26sM982C4a6+AbtcVa+QwFVfYLtovpQkc7Euc6PK1JL5mXxb6mRXpSpXvOo0Dkb4uu0wrI7KNNM6pCNyzPybjS5xM1WOZqwDhPt0vxgukvWsOlyaiNoMQx1zQxFIulqZ9e3j0TfyI0beN+YJryMnlf4++BRzClYYyTVdYQ0prx5VF3Wsia8imAfeGORs1Ztpbv2OOMcgV1/PBgAQV1QnBh0Q/VkyEna555oGSmickb/pcSsK3PXsMAprL9up0a0HVtpy1/wGtmp1S</source>
  </file>
  <file path="Plugin/NetCommons/Model/Behavior/TrackableBehavior.php" generated-path="Plugin.NetCommons.Model.Behavior.TrackableBehavior.html" hash="feb3af2365a8e51d1e8a152c3e589fd1" package="Default">
    <docblock line="0">
      <description>Trackable Behavior</description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="24" package="Croogo.Croogo.Model.Behavior">
      <extends>\ModelBehavior</extends>
      <name>TrackableBehavior</name>
      <full_name>\TrackableBehavior</full_name>
      <docblock line="24">
        <description>Trackable Behavior</description>
        <long-description>Populate `created_by` and `updated_by` fields from session data.

It customize for NetCommons
  mainly customization is for phpmd</long-description>
        <tag name="package" line="24" description="Croogo.Croogo.Model.Behavior"/>
        <tag name="since" line="24" description="1.6"/>
        <tag name="author" line="24" description="Rachman Chavik" link="mailto:rchavik@gmail.com"/>
        <tag name="license" line="24" description="The MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
        <tag name="link" line="24" description="http://www.croogo.org" link="http://www.croogo.org"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="36" package="Croogo.Croogo.Model.Behavior">
        <name>$_defaults</name>
        <full_name>\TrackableBehavior::_defaults</full_name>
        <default>array('userModel' =&gt; 'Users.User', 'fields' =&gt; array('created_by' =&gt; 'created_user', 'updated_by' =&gt; 'modified_user'))</default>
        <docblock line="36">
          <description>Default settings</description>
          <long-description>Change values for NetCommons
created_by to created_user,updated_by to modified_user</long-description>
          <tag name="author" line="36" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
          <tag name="link" line="36" description="NetCommons Project" link="http://www.netcommons.org"/>
          <tag name="license" line="36" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Croogo.Croogo.Model.Behavior">
        <name>setup</name>
        <full_name>\TrackableBehavior::setup()</full_name>
        <docblock line="51">
          <description>Setup</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;instance of model&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="51" description="&lt;p&gt;array of configuration settings.&lt;/p&gt;" type="array" variable="$config">
            <type>array</type>
          </tag>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="64" package="Croogo.Croogo.Model.Behavior">
        <name>_hasTrackableFields</name>
        <full_name>\TrackableBehavior::_hasTrackableFields()</full_name>
        <docblock line="64">
          <description>Checks wether model has the required fields</description>
          <long-description></long-description>
          <tag name="param" line="64" description="&lt;p&gt;instance of model&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="return" line="64" description="True if $model has the required fields" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="77" package="Croogo.Croogo.Model.Behavior">
        <name>_setupBelongsTo</name>
        <full_name>\TrackableBehavior::_setupBelongsTo()</full_name>
        <docblock line="77">
          <description>Bind relationship on the fly</description>
          <long-description></long-description>
          <tag name="param" line="77" description="&lt;p&gt;instance of model&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="return" line="77" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="123" package="Croogo.Croogo.Model.Behavior">
        <name>beforeSave</name>
        <full_name>\TrackableBehavior::beforeSave()</full_name>
        <docblock line="123">
          <description>Fill the created_by and updated_by fields</description>
          <long-description>Note: Since shells do not have Sessions, created_by/updated_by fields
will not be populated. If a shell needs to populate these fields, you
can simulate a logged in user by setting `Trackable.Auth` config:

  Configure::write('Trackable.User', array('id' =&gt; 1));

Note that value stored in this variable overrides session data.</long-description>
          <tag name="param" line="123" description="&lt;p&gt;instance of model&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="123" description="&lt;p&gt;Options passed from Model::save().&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="123" description="True if the operation should continue, false if it should abort" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="160" package="Croogo.Croogo.Model.Behavior">
        <name>__getUserId</name>
        <full_name>\TrackableBehavior::__getUserId()</full_name>
        <docblock line="160">
          <description>Get userId</description>
          <long-description></long-description>
          <tag name="param" line="160" description="&lt;p&gt;instance of model&lt;/p&gt;" type="\Model" variable="$model">
            <type>\Model</type>
          </tag>
          <tag name="return" line="160" description="login userId" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>\Model</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/NetCommons/Model/NetCommonsAppModel.php" generated-path="Plugin.NetCommons.Model.NetCommonsAppModel.html" hash="5a6ce79912e15524c2c5693f77734ebf" package="Default">
    <docblock line="0">
      <description>NetCommonsApp Model</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
      <tag name="author" line="0" description="Takako Miyagawa" link="mailto:nekoget@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="NetCommons\NetCommons\Model">
      <extends>\Model</extends>
      <name>NetCommonsAppModel</name>
      <full_name>\NetCommonsAppModel</full_name>
      <docblock line="22">
        <description>NetCommonsApp Model</description>
        <long-description></long-description>
        <tag name="author" line="22" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
        <tag name="author" line="22" description="Takako Miyagawa" link="mailto:nekoget@gmail.com"/>
        <tag name="package" line="22" description="NetCommons\NetCommons\Model"/>
        <tag name="SuppressWarnings" line="22" description="(PHPMD.NumberOfChildren)"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Model">
        <name>$actsAs</name>
        <full_name>\NetCommonsAppModel::actsAs</full_name>
        <default>array('NetCommons.DateTime', 'NetCommons.Trackable')</default>
        <docblock line="43">
          <description>use behaviors</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="53" package="NetCommons\NetCommons\Model">
        <name>$validate</name>
        <full_name>\NetCommonsAppModel::validate</full_name>
        <default>array()</default>
        <docblock line="53">
          <description>Validation rules</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="NetCommons\NetCommons\Model">
        <name>__construct</name>
        <full_name>\NetCommonsAppModel::__construct()</full_name>
        <docblock line="65">
          <description>Constructor. Binds the model's database table to the object.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;Set this ID for this model on startup,&#10;can also be an array of options, see above.&lt;/p&gt;" type="boolean|integer|string|array" variable="$id">
            <type>boolean</type>
            <type>integer</type>
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;Name of database table to use.&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;DataSource connection name.&lt;/p&gt;" type="string" variable="$ds">
            <type>string</type>
          </tag>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="SuppressWarnings" line="65" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>false</default>
          <type>boolean|integer|string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ds</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="146" package="NetCommons\NetCommons\Model">
        <name>setDataSource</name>
        <full_name>\NetCommonsAppModel::setDataSource()</full_name>
        <docblock line="146">
          <description>Sets the DataSource to which this model is bound.</description>
          <long-description></long-description>
          <tag name="param" line="146" description="&lt;p&gt;The name of the DataSource, as defined in app/Config/database.php&lt;/p&gt;" type="string" variable="$dataSource">
            <type>string</type>
          </tag>
          <tag name="return" line="146" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="146" description="" type="\MissingConnectionException">
            <type>\MissingConnectionException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dataSource</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="175" package="NetCommons\NetCommons\Model">
        <name>create</name>
        <full_name>\NetCommonsAppModel::create()</full_name>
        <docblock line="175">
          <description>Initializes the model for writing a new record, loading the default values
for those fields that are not defined in $data, and clearing previous validation errors.</description>
          <long-description>Especially helpful for saving data in loops.</long-description>
          <tag name="param" line="175" description="&lt;p&gt;Optional data array to assign to the model after it is created. If null or false,&#10;  schema data defaults are not merged.&lt;/p&gt;" type="boolean|array" variable="$data">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="param" line="175" description="&lt;p&gt;If true, overwrites any primary key input with an empty value&lt;/p&gt;" type="boolean" variable="$filterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="175" description="The current Model::data; after merging $data and/or defaults from database" type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="175" description="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array" link="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array"/>
          <tag name="SuppressWarnings" line="175" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>boolean|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="195" package="NetCommons\NetCommons\Model">
        <name>createAll</name>
        <full_name>\NetCommonsAppModel::createAll()</full_name>
        <docblock line="195">
          <description>Initializes the model for writing a new record, loading the default values
for those fields that are not defined in $data, and clearing previous validation errors.</description>
          <long-description>Especially helpful for saving data in loops.</long-description>
          <tag name="param" line="195" description="&lt;p&gt;Optional data array to assign to the model after it is created. If null or false,&#10;  schema data defaults are not merged.&lt;/p&gt;" type="boolean|array" variable="$data">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="param" line="195" description="&lt;p&gt;If true, overwrites any primary key input with an empty value&lt;/p&gt;" type="boolean" variable="$filterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="195" description="The current Model::data; after merging $data and/or defaults from database" type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="195" description="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array" link="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array"/>
          <tag name="SuppressWarnings" line="195" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>boolean|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="233" package="NetCommons\NetCommons\Model">
        <name>begin</name>
        <full_name>\NetCommonsAppModel::begin()</full_name>
        <docblock line="233">
          <description>transaction begin</description>
          <long-description></long-description>
          <tag name="return" line="233" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="246" package="NetCommons\NetCommons\Model">
        <name>commit</name>
        <full_name>\NetCommonsAppModel::commit()</full_name>
        <docblock line="246">
          <description>transaction commit</description>
          <long-description></long-description>
          <tag name="return" line="246" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="258" package="NetCommons\NetCommons\Model">
        <name>rollback</name>
        <full_name>\NetCommonsAppModel::rollback()</full_name>
        <docblock line="258">
          <description>transaction rollback</description>
          <long-description></long-description>
          <tag name="param" line="258" description="&lt;p&gt;Exception&lt;/p&gt;" type="mixed" variable="$ex">
            <type>mixed</type>
          </tag>
          <tag name="return" line="258" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="258" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ex</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="274" package="NetCommons\NetCommons\Model">
        <name>loadModels</name>
        <full_name>\NetCommonsAppModel::loadModels()</full_name>
        <docblock line="274">
          <description>Load models</description>
          <long-description></long-description>
          <tag name="param" line="274" description="&lt;p&gt;models to load&lt;/p&gt;" type="array" variable="$models">
            <type>array</type>
          </tag>
          <tag name="param" line="274" description="&lt;p&gt;data source&lt;/p&gt;" type="string" variable="$source">
            <type>string</type>
          </tag>
          <tag name="return" line="274" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$models</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$source</name>
          <default>'master'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="290" package="NetCommons\NetCommons\Model">
        <name>equalToField</name>
        <full_name>\NetCommonsAppModel::equalToField()</full_name>
        <docblock line="290">
          <description>Check field1 matches field2</description>
          <long-description></long-description>
          <tag name="param" line="290" description="&lt;p&gt;field1 parameters&lt;/p&gt;" type="array" variable="$field1">
            <type>array</type>
          </tag>
          <tag name="param" line="290" description="&lt;p&gt;field2 key&lt;/p&gt;" type="string" variable="$field2">
            <type>string</type>
          </tag>
          <tag name="return" line="290" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field1</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field2</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="301" package="NetCommons\NetCommons\Model">
        <name>_getDefaultValue</name>
        <full_name>\NetCommonsAppModel::_getDefaultValue()</full_name>
        <docblock line="301">
          <description>全カラムのデフォルト値をセットした配列を返す。</description>
          <long-description></long-description>
          <tag name="param" line="301" description="&lt;p&gt;デフォルトを上書きするカラム配列&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="301" description="デフォルト値をセットした配列" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="327" package="NetCommons\NetCommons\Model">
        <name>_getCurrentValue</name>
        <full_name>\NetCommonsAppModel::_getCurrentValue()</full_name>
        <docblock line="327">
          <description>Currentで取れる値を返す。</description>
          <long-description></long-description>
          <tag name="return" line="327" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/NetCommons/Controller/NetCommonsController.php" generated-path="Plugin.NetCommons.Controller.NetCommonsController.html" hash="d67636b697c946868885e9df05323428" package="Default">
    <docblock line="0">
      <description>NetCommons Controller</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="Default">
      <extends>\NetCommonsAppController</extends>
      <name>NetCommonsController</name>
      <full_name>\NetCommonsController</full_name>
      <docblock line="21">
        <description>NetCommons Controller</description>
        <long-description></long-description>
        <tag name="copyright" line="21" description="Copyright 2014, NetCommons Project"/>
        <tag name="author" line="21" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
        <tag name="link" line="21" description="NetCommons Project" link="http://www.netcommons.org"/>
        <tag name="license" line="21" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
        <tag name="package" line="21" description="Default"/>
        <tag name="inherited_from" description="\NetCommonsAppController" refers="\NetCommonsAppController" link="/classes/NetCommonsAppController.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="29" package="NetCommons\NetCommons\Controller">
        <name>$layout</name>
        <full_name>\NetCommonsAppController::layout</full_name>
        <default>'NetCommons.default'</default>
        <docblock line="29">
          <description>use layout</description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="36" package="NetCommons\NetCommons\Controller">
        <name>$theme</name>
        <full_name>\NetCommonsAppController::theme</full_name>
        <default>'default'</default>
        <docblock line="36">
          <description>use theme</description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Controller">
        <name>$components</name>
        <full_name>\NetCommonsAppController::components</full_name>
        <default>array('Asset', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; 'auth', 'controller' =&gt; 'auth', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index')), 'DebugKit.Toolbar', 'Flash', 'NetCommons.NetCommons', 'NetCommons.Permission' =&gt; array('allow' =&gt; array('index' =&gt; null, 'view' =&gt; null)), 'RequestHandler', 'Session', 'Workflow.Workflow')</default>
        <docblock line="43">
          <description>use components</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="82" package="NetCommons\NetCommons\Controller">
        <name>$uses</name>
        <full_name>\NetCommonsAppController::uses</full_name>
        <default>array('M17n.Language', 'NetCommons.SiteSetting')</default>
        <docblock line="82">
          <description>use model</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="92" package="NetCommons\NetCommons\Controller">
        <name>$helpers</name>
        <full_name>\NetCommonsAppController::helpers</full_name>
        <default>array('Html' =&gt; array('className' =&gt; 'NetCommons.SingletonViewBlockHtml'), 'NetCommons.BackTo', 'NetCommons.Button', 'NetCommons.Date', 'NetCommons.NetCommonsForm', 'NetCommons.NetCommonsHtml')</default>
        <docblock line="92">
          <description>use helpers</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="Default">
        <name>beforeFilter</name>
        <full_name>\NetCommonsController::beforeFilter()</full_name>
        <docblock line="28">
          <description>beforeFilter</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\NetCommonsAppController::beforeFilter()" refers="\NetCommonsAppController::beforeFilter()" link="/classes/NetCommonsAppController.html#method_beforeFilter"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="38" package="Default">
        <name>csrfToken</name>
        <full_name>\NetCommonsController::csrfToken()</full_name>
        <docblock line="38">
          <description>csrfToken method</description>
          <long-description></long-description>
          <tag name="return" line="38" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="NetCommons\NetCommons\Controller">
        <name>__construct</name>
        <full_name>\NetCommonsAppController::__construct()</full_name>
        <docblock line="110">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="110" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="110" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="124" package="NetCommons\NetCommons\Controller">
        <name>beforeFilter</name>
        <full_name>\NetCommonsAppController::beforeFilter()</full_name>
        <docblock line="124">
          <description>beforeFilter</description>
          <long-description></long-description>
          <tag name="return" line="124" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="166" package="NetCommons\NetCommons\Controller">
        <name>beforeRender</name>
        <full_name>\NetCommonsAppController::beforeRender()</full_name>
        <docblock line="166">
          <description>beforeRender</description>
          <long-description></long-description>
          <tag name="return" line="166" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="192" package="NetCommons\NetCommons\Controller">
        <name>beforeRedirect</name>
        <full_name>\NetCommonsAppController::beforeRedirect()</full_name>
        <docblock line="192">
          <description>The beforeRedirect method is invoked when the controller's redirect method is called but before any
further action.</description>
          <long-description>If this method returns false the controller will not continue on to redirect the request.
The $url, $status and $exit variables have same meaning as for the controller's method. You can also
return a string which will be interpreted as the URL to redirect to or return associative array with
key 'url' and optionally 'status' and 'exit'.</long-description>
          <tag name="param" line="192" description="&lt;p&gt;A string or array-based URL pointing to another location within the app,&#10;or an absolute URL&lt;/p&gt;" type="string|array" variable="$url">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;Optional HTTP status code (eg: 404)&lt;/p&gt;" type="integer" variable="$status">
            <type>integer</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;If true, exit() will be called after the redirect&lt;/p&gt;" type="boolean" variable="$exit">
            <type>boolean</type>
          </tag>
          <tag name="return" line="192" description="false to stop redirection event,&#10;  string controllers a new redirection URL or&#10;  array with the keys url, status and exit to be used by the redirect method." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="192" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="link" line="192" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
          <tag name="SuppressWarnings" line="192" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exit</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="207" package="NetCommons\NetCommons\Controller">
        <name>ping</name>
        <full_name>\NetCommonsAppController::ping()</full_name>
        <docblock line="207">
          <description>Keep connection alive</description>
          <long-description></long-description>
          <tag name="author" line="207" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
          <tag name="return" line="207" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="218" package="NetCommons\NetCommons\Controller">
        <name>camelizeKeyRecursive</name>
        <full_name>\NetCommonsAppController::camelizeKeyRecursive()</full_name>
        <docblock line="218">
          <description>camelizeKeyRecursive</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;data to camelize&lt;/p&gt;" type="array" variable="$orig">
            <type>array</type>
          </tag>
          <tag name="return" line="218" description="camelized data" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orig</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="239" package="NetCommons\NetCommons\Controller">
        <name>throwBadRequest</name>
        <full_name>\NetCommonsAppController::throwBadRequest()</full_name>
        <docblock line="239">
          <description>throw bad request</description>
          <long-description></long-description>
          <tag name="return" line="239" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="239" description="" type="\BadRequestException">
            <type>\BadRequestException</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="256" package="NetCommons\NetCommons\Controller">
        <name>emptyRender</name>
        <full_name>\NetCommonsAppController::emptyRender()</full_name>
        <docblock line="256">
          <description>Empty render</description>
          <long-description></long-description>
          <tag name="return" line="256" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
    </class>
    <source>eJzFk09r20AQxc/Sp9hDYGUTS23pSXFUh0AvLaGQ3EIIm9VY2ni1q+6O6rjF372jP5ZlaCE55SKWefNmnn4rLb/UZR0m83nI5uwG8NpWlTWeXVuDzmoNjoRWW4kGS+vYbWlLUOxGbMSzqgRbmuHkS9uQsioqoXQsbZV1Nq3MhpWIdZok2+02NoCy3xFbV0xX/nD2GSQOLgnGw/+NydAR4wtOh3zvy90QaeudU0WJ9DaH06cPHz+f/3trEoZXdZ2mjQcf8WMLFY80+DmbSPFEmF2Er+L4xlQj+G8d9ztwomhkqdhyg4fzagBDiFo27ww+CaUW3k/EIwQGLwgmn4oneNmfEeITrK2Dr0rjkZ0DbJxhv6zKu0VB3TxRHrZujERlzYkpmtG0IKiFA4NpeipdkHKGpfKL7Ir4LjKhtd1GXHq3vrMbMO19BvsxzVhnFdB15K9ONBqHOGceZOMU7tglGwIQiNoaCklnbUUe8duhh/c5D5ZFVoChS0foJw5+Bz8b8Nh+gNScCxQ0WzgndhEVAv7YvxC7zCbVgG9g19VOpywyAiYqf3+wPdx3nQ+taUaPYU1v8oARfRy1kBjxdjOfTdG2Mn/04JTQ6jfQz9MHmLTuw334FwlPfPc=</source>
  </file>
  <file path="Plugin/NetCommons/Controller/Component/NetCommonsComponent.php" generated-path="Plugin.NetCommons.Controller.Component.NetCommonsComponent.html" hash="2bf30a128dadc17d19c6f72fcdf1ce29" package="Default">
    <docblock line="0">
      <description>NetCommons Component</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="NetCommons\NetCommons\Controller\Component">
      <extends>\Component</extends>
      <name>NetCommonsComponent</name>
      <full_name>\NetCommonsComponent</full_name>
      <docblock line="20">
        <description>NetCommons Component</description>
        <long-description></long-description>
        <tag name="author" line="20" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="20" description="NetCommons\NetCommons\Controller\Component"/>
      </docblock>
      <constant namespace="" line="27" package="NetCommons\NetCommons\Controller\Component">
        <name>ALERT_SUCCESS_INTERVAL</name>
        <full_name>\NetCommonsComponent::ALERT_SUCCESS_INTERVAL</full_name>
        <value>1500</value>
        <docblock line="27">
          <description>alert</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="" line="28" package="NetCommons\NetCommons\Controller\Component">
        <name>ALERT_VALIDATE_ERROR_INTERVAL</name>
        <full_name>\NetCommonsComponent::ALERT_VALIDATE_ERROR_INTERVAL</full_name>
        <value>4000</value>
        <docblock line="28">
          <description>alert</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="NetCommons\NetCommons\Controller\Component">
        <name>initialize</name>
        <full_name>\NetCommonsComponent::initialize()</full_name>
        <docblock line="36">
          <description>Called before the Controller::beforeFilter().</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;Instantiating controller&lt;/p&gt;" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="36" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="NetCommons\NetCommons\Controller\Component">
        <name>renderJson</name>
        <full_name>\NetCommonsComponent::renderJson()</full_name>
        <docblock line="48">
          <description>render json</description>
          <long-description></long-description>
          <tag name="param" line="48" description="&lt;p&gt;results data&lt;/p&gt;" type="array" variable="$results">
            <type>array</type>
          </tag>
          <tag name="param" line="48" description="&lt;p&gt;message&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="48" description="&lt;p&gt;status code&lt;/p&gt;" type="integer" variable="$status">
            <type>integer</type>
          </tag>
          <tag name="return" line="48" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$results</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>'OK'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>200</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="NetCommons\NetCommons\Controller\Component">
        <name>handleValidationError</name>
        <full_name>\NetCommonsComponent::handleValidationError()</full_name>
        <docblock line="68">
          <description>Handle validation error</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;validation errors&lt;/p&gt;" type="array" variable="$errors">
            <type>array</type>
          </tag>
          <tag name="return" line="68" description="true on success, false on error" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="SuppressWarnings" line="68" description="(PHPMD.DevelopmentCodeFragment)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$errors</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="98" package="NetCommons\NetCommons\Controller\Component">
        <name>setFlashNotification</name>
        <full_name>\NetCommonsComponent::setFlashNotification()</full_name>
        <docblock line="98">
          <description>Used to set a session variable that can be used to output messages in the view.</description>
          <long-description></long-description>
          <tag name="param" line="98" description="&lt;p&gt;message&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="98" description="&lt;p&gt;Parameters to be sent to layout as view variables&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="param" line="98" description="&lt;p&gt;status code&lt;/p&gt;" type="integer" variable="$status">
            <type>integer</type>
          </tag>
          <tag name="return" line="98" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>200</default>
          <type>integer</type>
        </argument>
      </method>
    </class>
    <source>eJytVm1P20gQ/pz8iqmEageFJD31vhjCgdIguHIUBdr7QFG0OJN4ibPr7q4D3Kn//WZ3HdsJgTukkxB2duflmZlnZnzwW5Zkze7ubhN24QLNQC4WUmigZyYFCkPn9uqI5SaRCi6k4nMJx4pxOGD0/0hw3mFx5z47rMtdJTJBDhdszu75gsGBKN50InO6OZotGE87sVx4tZSLOSTGZFG3+/Dw0BFoYg+lI9WsjuxSyXuMTaEVo9D4smK3kOiYR1M3cu6PnZFYZk+KzxJDQa/eful9+Nje7rXbbB5nWRTlGnUYlHkK2kA/hFEyTVEFrf3mG7L61mxlLJ6zGdZMf6+9VjC+1x12m3HKtK4plbeAjwbFpAYQ/i7xMzJUAl4yBdooLmbOYiMmMwaOz4ej6/HV18FgeHU1Pru4Ho6+HZ9DHz782uu1m42GF6Czs0/H18PxcDT6MqrLfez1elXGBozAT+AOp1IhmAShCimK/PEJTw2qsNVZIcuIjYuaIOzE1fsZoWTCcGYIOVQXTlOhyZWApeQTH1SW3xFvYJqL2HApgAtOqin/C8Pt9luUrkZjxyRc7x3W3PbrQvvNxs8yREXpJoF7LcV6AEwp9gQ7CnWeGg2r54QZVpPyJYAdwRYIC9Sa2FC75lTAHYrY5BqKRywn+N+i9dB+J2RhCaMPN7ftwl0fgi+fie4rB33qlt4LGdg7XHJ8GDjekZ41GuxvF0zZk8wNSU1ZqvEFIcJD/NS4d+idDyiqsADScjoVYpfJ8QLVDMMbumoEFn4A/UMfSNud2bz4M2/FntpQCzubRqvmoSFQZ2VMFi1DPuPTCONcab7EcN3K83A0mpCamtrZhEEhG7Rekw7GGpXnop04pc4auU6ZmKQISxIj3tiaolJSbSWau9HPZHWdK3dSpmBUjkDXOo9jIlzb1wlqxuHoKs8ygqT/ZEoQP3V4eXr5x6fOJ1xiKrMFzRVbsBPFZva9tZ1/iUP/rQQ0tObDAqjnGZ9C+A7WjhoFVgvT5o+ysZ2P63ZtTQs7+06jaCY6Ho8nYUDrZFzsE5vvExrDNJkI5bOEdeAyRUYZiROM525qcZERo23rdlyFGgM2x3M5iyIupjIMbjaC1LcQQAe28v5HjtrsHSaoMPQMsUkgBk75LFcYRQoZ4Z3gXT4jCvmcrPvLaGaYcZnKtsuVt9Xodl+Q9VhK/zaYumI9zcTPE+r05EIaPuWxiytcJbTtCRf6prMDwXVdMGFiRvvSNyP5REWZdVca02kUvbo5vJYLx6ncBJvl9a3tA74l6Vbb7hoHvSDMatxU7fNVU4mNJAAGGP3XmruCU9/dpXYfMQMxo7ZAyAtRmly21EWsmirvCGCH38aCWk3uFc+eD++iMd0P+vCwD6S0aOuHXGq7nem1mJdMOy8lPP1/rYF/qeYKXzFnw9bWhWA5yvXYBx0WOit2bpqo0WIlWVLMG7ITsLi6CTBFO0WC29JecWJb+pmQY3kuXrDg/ADagbZpKvDtP3afQUHF+RL8KSUpivyeeSvHRZ6m/jhL8xkXXr5aMk6n1a7lo8hFGUNp7hb6/b4zCO/fVwnwMG7hHV2ugKznf93GWtttftGtleO1McXp05jds8dyEpVzpPq28N7bUONUbZGvVeO5pyvfldXQqVOzKF57g0b097P5D8OrKwM=</source>
  </file>
  <file path="Plugin/NetCommons/Controller/Component/NetCommonsVisualCaptchaComponent.php" generated-path="Plugin.NetCommons.Controller.Component.NetCommonsVisualCaptchaComponent.html" hash="178cd333546d8429ff199ace6bc9b786" package="Default">
    <docblock line="0">
      <description>NetCommonsBlock Component</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Captcha">\visualCaptcha\Captcha</namespace-alias>
    <namespace-alias name="Session">\visualCaptcha\Session</namespace-alias>
    <class final="false" abstract="false" namespace="" line="30" package="NetCommons\NetCommons\Controller\Component">
      <extends>\Component</extends>
      <name>NetCommonsVisualCaptchaComponent</name>
      <full_name>\NetCommonsVisualCaptchaComponent</full_name>
      <docblock line="30">
        <description>NetCommonsVisualCaptcha Component</description>
        <long-description></long-description>
        <tag name="author" line="30" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="30" description="NetCommons\NetCommons\Controller\Component"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="37" package="NetCommons\NetCommons\Controller\Component">
        <name>$controller</name>
        <full_name>\NetCommonsVisualCaptchaComponent::controller</full_name>
        <default>null</default>
        <docblock line="37">
          <description>call controller w/ associations</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="NetCommons\NetCommons\Controller\Component">
        <name>$assetPath</name>
        <full_name>\NetCommonsVisualCaptchaComponent::assetPath</full_name>
        <default>null</default>
        <docblock line="44">
          <description>assetPath /r associations</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="51" package="NetCommons\NetCommons\Controller\Component">
        <name>$imageField</name>
        <full_name>\NetCommonsVisualCaptchaComponent::imageField</full_name>
        <default>null</default>
        <docblock line="51">
          <description>imageField Answer /r associations</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="58" package="NetCommons\NetCommons\Controller\Component">
        <name>$audioField</name>
        <full_name>\NetCommonsVisualCaptchaComponent::audioField</full_name>
        <default>null</default>
        <docblock line="58">
          <description>audioField Answer /r associations</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="66" package="NetCommons\NetCommons\Controller\Component">
        <name>initialize</name>
        <full_name>\NetCommonsVisualCaptchaComponent::initialize()</full_name>
        <docblock line="66">
          <description>Called before the Controller::beforeFilter().</description>
          <long-description></long-description>
          <tag name="param" line="66" description="&lt;p&gt;Instantiating controller&lt;/p&gt;" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="66" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="89" package="NetCommons\NetCommons\Controller\Component">
        <name>startup</name>
        <full_name>\NetCommonsVisualCaptchaComponent::startup()</full_name>
        <docblock line="89">
          <description>Called after the Controller::beforeFilter() and before the controller action</description>
          <long-description></long-description>
          <tag name="param" line="89" description="&lt;p&gt;Controller with components to startup&lt;/p&gt;" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="89" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="89" description="" type="\ForbiddenException">
            <type>\ForbiddenException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="100" package="NetCommons\NetCommons\Controller\Component">
        <name>generate</name>
        <full_name>\NetCommonsVisualCaptchaComponent::generate()</full_name>
        <docblock line="100">
          <description>generate visual captcha data and return it</description>
          <long-description></long-description>
          <tag name="param" line="100" description="&lt;p&gt;display image count&lt;/p&gt;" type="integer" variable="$count">
            <type>integer</type>
          </tag>
          <tag name="return" line="100" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$count</name>
          <default>5</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="116" package="NetCommons\NetCommons\Controller\Component">
        <name>image</name>
        <full_name>\NetCommonsVisualCaptchaComponent::image()</full_name>
        <docblock line="116">
          <description>generate visual captcha image data and return it</description>
          <long-description></long-description>
          <tag name="param" line="116" description="&lt;p&gt;display image index&lt;/p&gt;" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="116" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="127" package="NetCommons\NetCommons\Controller\Component">
        <name>audio</name>
        <full_name>\NetCommonsVisualCaptchaComponent::audio()</full_name>
        <docblock line="127">
          <description>generate audio captcha data and return it</description>
          <long-description></long-description>
          <tag name="return" line="127" description="data" type="\streaming">
            <type>\streaming</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="138" package="NetCommons\NetCommons\Controller\Component">
        <name>check</name>
        <full_name>\NetCommonsVisualCaptchaComponent::check()</full_name>
        <docblock line="138">
          <description>check input response</description>
          <long-description></long-description>
          <tag name="return" line="138" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="158" package="NetCommons\NetCommons\Controller\Component">
        <name>__utilReadJSON</name>
        <full_name>\NetCommonsVisualCaptchaComponent::__utilReadJSON()</full_name>
        <docblock line="158">
          <description>Read input file as JSON</description>
          <long-description></long-description>
          <tag name="param" line="158" description="&lt;p&gt;json file path&lt;/p&gt;" type="string" variable="$filePath">
            <type>string</type>
          </tag>
          <tag name="return" line="158" description="" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filePath</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJy9V1lv4zYQfo5+xRQIVnLgSLs9XuzETZoD2EXhXWyAvDSFwUi0xVgmVZKKkxb57x0esiQfObptH+JI5Mw31zdD6ujnMi+D5OAggAMYU30mFgvB1S+FSOeAL6XglGvcNPsnpNK5kDAWks0FnErC4Ijg7wlnLCZpfFeO2nJXucgpgzGZkzu2IHDE/ZPKRYU7J7MFYUWcioVTKxifQ651OUiS5XIZc6pT508s5KzlHnyR4o6m2mullCu6WzHxErF+0G2QX92yBUlF+SjZLNcYdP30/fsPP/a3W02CoEKT90xVpDgjpU5zcuP/D7dsXVGlmODDIDgty8EABVQUrtIb9gFfuJaiKKgMe7UYw32po/Ca8kxIK+Xw8JFISR6jYC+csoKGcDyC0JlMvQjEcH6FP6GSafPScatZ9gsxkiEMeujADvs+jn/dvsdt7G9S8rqtuZOab6VcSdI5mdGWnZvWY1OUm7bBJEgLotQu51aiQB80pk413sJfq8hSUhSQrgzAMgHEFCkjGjOh6rjuiQRxu6LdXlndIp1hv6V5DLwqiiZnCEP1F6JzSOROTKUl47MuZqO4DokJnNFLRosMTrlaotE3QrcANtytMia+BbsFsI59hkmmGdzSqZAUdE6hKelg4JYvWaGpjHpxbafEkbZoCXaS/ZErTbg2rvFZq35WU1JdSQ73gmUdF6cVT00owDhD1YL9SaPt+D1kyN7evs6ZOhx1atwSGqJIkgCbwhVNK8n0IzpSM4wpwPGSoQjuR7ZNJ3P6OKEPTGmcOrUK9vCGGfPscVTPuVL70ingFkXfwYcjSUkWdWdBPJUoiZ1wTjSJG6QxWVAz7RornVJ+k5UGqbZizJiUbAb07h1s2PfRb5bCOOEyeDiquDknaWY1FLpcT8W9bYnrd9YbU3bZpeEpsH9P6wQmU6ToC/wFwjtMb7GHWPa9it+t5SXDSdAQArTA9iNSV+UWssOJzqVYKrgU8pZlGeUXDyktvd0treChnu2DJHEzSfmhdH0xPv/81Z4YdCEMTCFEuX66/KMTyNkJh033taehPQ7LopoxblaisBn9Yc+o+yNyzcqkdmXYrumMciqJru8I4IUgQ97aIvrMMt2tGMPuxhRV+C9jqizIo5vLYNfaNdkyJVd5r61HHuoYfvJDR7nmMkOULsG3WmSJuV8QnHbHhh1TNqskHQxcB7qF2GxX6IrrZjftPynBffo2MurT5GDrnFktFd+hnquDbZE3w1itNkydXxeXr3xUh9vfgF2tTCaVZsVXDPTT1edx1A2rt1Os43av1/bhcLSWfrvrq2Y8nlCeiszsNgr60gy2CzfYIgv4MpkcM15FKcYz+rBGKbv2WkpZlcjhvIJLb61HO0dNXtAhShYfrWk3dk1FrA99eL8jSbY0r2i4Jmi0YQ56I7o9eAsZ/c9hn1qjq7DDRflD2A05zSl+wTFeVhrDUzjD7ZdOO7pbIYrtMVnlOiZJ/zDE234g42ZFlT4cmQQN/4MU+HsMM0tR7ctvG2fr7/V1ZSNh93jdQueoY8pzCMbFJ6CForstNqf2yxZdkZ5DsBaDpsxTgsY7ZTRTxVfRfGjhvRjMkOl2setN2DcSdi6aSeLkS3xt17zzKSHZvWmKVdnXB1mN5wI1SfnOLNVXyWa/mwl3BXeXmfZoy6gdbRYCp9oktde1DlAftKyoY/JT8Dfqy2d7</source>
  </file>
  <file path="Plugin/NetCommons/Controller/Component/PermissionComponent.php" generated-path="Plugin.NetCommons.Controller.Component.PermissionComponent.html" hash="cea42871b50def2ee094660391409e8b" package="Default">
    <docblock line="0">
      <description>Permission Component</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="NetCommons\NetCommons\Controller\Component">
      <extends>\Component</extends>
      <name>PermissionComponent</name>
      <full_name>\PermissionComponent</full_name>
      <docblock line="20">
        <description>Permission Component</description>
        <long-description></long-description>
        <tag name="author" line="20" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="20" description="NetCommons\NetCommons\Controller\Component"/>
      </docblock>
      <constant namespace="" line="27" package="NetCommons\NetCommons\Controller\Component">
        <name>READABLE_PERMISSION</name>
        <full_name>\PermissionComponent::READABLE_PERMISSION</full_name>
        <value>'content_readable'</value>
        <docblock line="27">
          <description>redable permission</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </constant>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Controller\Component">
        <name>$allow</name>
        <full_name>\PermissionComponent::allow</full_name>
        <default>array('index,view' =&gt; null)</default>
        <docblock line="43">
          <description>Controller actions for which user validation is required.</description>
          <long-description>####
  array('action1' =&gt; 'permission', 'action2' =&gt; 'permission', 'action3' =&gt; 'permission' ...)
    or
  array('action1,action2,action3 ...' =&gt; 'permission')
    or
  array('*' =&gt; 'permission')

  Null, it without a login</long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="NetCommons\NetCommons\Controller\Component">
        <name>initialize</name>
        <full_name>\PermissionComponent::initialize()</full_name>
        <docblock line="51">
          <description>Called before the Controller::beforeFilter().</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;Instantiating controller&lt;/p&gt;" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="99" package="NetCommons\NetCommons\Controller\Component">
        <name>startup</name>
        <full_name>\PermissionComponent::startup()</full_name>
        <docblock line="99">
          <description>Called after the Controller::beforeFilter() and before the controller action</description>
          <long-description></long-description>
          <tag name="param" line="99" description="&lt;p&gt;Controller with components to startup&lt;/p&gt;" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="99" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="99" description="" type="\ForbiddenException">
            <type>\ForbiddenException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
    </class>
    <source>eJytVm1v2zYQ/mz/ihtqVLLhSn3ZJyX24mUpGqzzguZjWhi0RFuMJVIlqTjp4P++k6gX2pE7F12A2BTv7rmHzx1PPv8ti7O+Pxr1YQQ3VKZMKSY4XIo0E5xyjfuF6YLkOhYS5kKyjYCZJAzOCX5ecMY8Enr32dT2u41FTBnMyYbcs5TAOa9WKhY5Wi7WKWGJF4rUhCWMbyDWOgt8f7vdepxqtKWCK0/INcypvjSPcCPFPQ11FRVSrujxQL/y8PSjtkE+mu0SJBTZk2TrWOOh69Xb129+HXdn9fv9WZYFQa6ocp1GJ2cM+MC1FElCpTM86/+Aqj+qVkbCDVlTi+Bna9nS+Gwn9PthQpSy+DRWoI+a8ki1BOGfhr+kEVkmFLImrmb/QCQoLRlfl/C9ELNr+HQ1+2P2+8erxc3Vp7+ub2+v/57DBBw0Yg69kJSUeE6rUEsYSKhZofcKVdnGLIwBdZbwQBIWkcIETCGjrzlDWl5F5AX+Fd8AREry5DoG5Y0Dkyk4Le+iRsb09rjp3TMTeJ43NPgAQnZlGlew1fe7IuQZzjGMUaencZnnSTIGpmHLsFNyDQQSsWZ7JShhTAWyfIkdDwOSJGKLqlcZGI/o4/iB0W2ZiiOo1aCX6E0jWFIUnYKOqVWQIDDb71miqXSHteTYgpKkduUGYbu+xj4gXDOsGF9DaygjJdW55PAgWLRHepXz0FSYMwxN2DfqduMPsTt7vYGOmXo1tdJObCc8X69XUCfYRG7lbHQhqlFoCoNWd4PbYytwcYNqd8/28iX8gt23MJrapiquZ+012tt+Z4XXrl/nqDlM8HaMnAakrh1Ls0RE1HXG2JzPDvtqmlLsiEjZqIP6+kzwRtvRJabxbCWpnUs5ynXNoWBXnPVQg9pekZwZgLsq+ktRgNb7zLguMd3GrA3JffROoBMSGXWHNfB3fT/gHA2ClMo1PZJwDPt1aniGIudHWZale30qV0WTVRB0TEf7EMVH8e/7Ntqf9EnVOIsNPuwzKgF836rsQehhhX3/9CKgb1tDfNi18SeLU2D8lDpN3l178et7sgeMzrvDwUZWOLr+Y64B4XsTMDx8JZ0096ztYl4jSvU6VaAFviqJ1HnWMQThQsdSbBW8F3LJoojyq8eQZlXejhFZQX13Pu5V2JLsrmOWlKdSd9XrzPnS3EDD86xfXd4C8zKXEo8UBO2N+d/wSxmA022HEu5iEbkO/r5bVD/wine29eMKfRmNnOGw7IFd/1+FeXJv</source>
  </file>
  <file path="Plugin/NetCommons/Controller/NetCommonsAppController.php" generated-path="Plugin.NetCommons.Controller.NetCommonsAppController.html" hash="1c6208ad3640269d69cd4e27d0437276" package="Default">
    <docblock line="0">
      <description>NetCommonsApp Controller</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="NetCommons\NetCommons\Controller">
      <extends>\Controller</extends>
      <name>NetCommonsAppController</name>
      <full_name>\NetCommonsAppController</full_name>
      <docblock line="22">
        <description>NetCommonsApp Controller</description>
        <long-description></long-description>
        <tag name="author" line="22" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="22" description="NetCommons\NetCommons\Controller"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="29" package="NetCommons\NetCommons\Controller">
        <name>$layout</name>
        <full_name>\NetCommonsAppController::layout</full_name>
        <default>'NetCommons.default'</default>
        <docblock line="29">
          <description>use layout</description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="36" package="NetCommons\NetCommons\Controller">
        <name>$theme</name>
        <full_name>\NetCommonsAppController::theme</full_name>
        <default>'default'</default>
        <docblock line="36">
          <description>use theme</description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Controller">
        <name>$components</name>
        <full_name>\NetCommonsAppController::components</full_name>
        <default>array('Asset', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; 'auth', 'controller' =&gt; 'auth', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index')), 'DebugKit.Toolbar', 'Flash', 'NetCommons.NetCommons', 'NetCommons.Permission' =&gt; array('allow' =&gt; array('index' =&gt; null, 'view' =&gt; null)), 'RequestHandler', 'Session', 'Workflow.Workflow')</default>
        <docblock line="43">
          <description>use components</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="82" package="NetCommons\NetCommons\Controller">
        <name>$uses</name>
        <full_name>\NetCommonsAppController::uses</full_name>
        <default>array('M17n.Language', 'NetCommons.SiteSetting')</default>
        <docblock line="82">
          <description>use model</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="92" package="NetCommons\NetCommons\Controller">
        <name>$helpers</name>
        <full_name>\NetCommonsAppController::helpers</full_name>
        <default>array('Html' =&gt; array('className' =&gt; 'NetCommons.SingletonViewBlockHtml'), 'NetCommons.BackTo', 'NetCommons.Button', 'NetCommons.Date', 'NetCommons.NetCommonsForm', 'NetCommons.NetCommonsHtml')</default>
        <docblock line="92">
          <description>use helpers</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="NetCommons\NetCommons\Controller">
        <name>__construct</name>
        <full_name>\NetCommonsAppController::__construct()</full_name>
        <docblock line="110">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="110" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="110" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="124" package="NetCommons\NetCommons\Controller">
        <name>beforeFilter</name>
        <full_name>\NetCommonsAppController::beforeFilter()</full_name>
        <docblock line="124">
          <description>beforeFilter</description>
          <long-description></long-description>
          <tag name="return" line="124" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="166" package="NetCommons\NetCommons\Controller">
        <name>beforeRender</name>
        <full_name>\NetCommonsAppController::beforeRender()</full_name>
        <docblock line="166">
          <description>beforeRender</description>
          <long-description></long-description>
          <tag name="return" line="166" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="192" package="NetCommons\NetCommons\Controller">
        <name>beforeRedirect</name>
        <full_name>\NetCommonsAppController::beforeRedirect()</full_name>
        <docblock line="192">
          <description>The beforeRedirect method is invoked when the controller's redirect method is called but before any
further action.</description>
          <long-description>If this method returns false the controller will not continue on to redirect the request.
The $url, $status and $exit variables have same meaning as for the controller's method. You can also
return a string which will be interpreted as the URL to redirect to or return associative array with
key 'url' and optionally 'status' and 'exit'.</long-description>
          <tag name="param" line="192" description="&lt;p&gt;A string or array-based URL pointing to another location within the app,&#10;or an absolute URL&lt;/p&gt;" type="string|array" variable="$url">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;Optional HTTP status code (eg: 404)&lt;/p&gt;" type="integer" variable="$status">
            <type>integer</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;If true, exit() will be called after the redirect&lt;/p&gt;" type="boolean" variable="$exit">
            <type>boolean</type>
          </tag>
          <tag name="return" line="192" description="false to stop redirection event,&#10;  string controllers a new redirection URL or&#10;  array with the keys url, status and exit to be used by the redirect method." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="192" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="link" line="192" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
          <tag name="SuppressWarnings" line="192" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exit</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="207" package="NetCommons\NetCommons\Controller">
        <name>ping</name>
        <full_name>\NetCommonsAppController::ping()</full_name>
        <docblock line="207">
          <description>Keep connection alive</description>
          <long-description></long-description>
          <tag name="author" line="207" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
          <tag name="return" line="207" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="218" package="NetCommons\NetCommons\Controller">
        <name>camelizeKeyRecursive</name>
        <full_name>\NetCommonsAppController::camelizeKeyRecursive()</full_name>
        <docblock line="218">
          <description>camelizeKeyRecursive</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;data to camelize&lt;/p&gt;" type="array" variable="$orig">
            <type>array</type>
          </tag>
          <tag name="return" line="218" description="camelized data" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orig</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="239" package="NetCommons\NetCommons\Controller">
        <name>throwBadRequest</name>
        <full_name>\NetCommonsAppController::throwBadRequest()</full_name>
        <docblock line="239">
          <description>throw bad request</description>
          <long-description></long-description>
          <tag name="return" line="239" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="239" description="" type="\BadRequestException">
            <type>\BadRequestException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="256" package="NetCommons\NetCommons\Controller">
        <name>emptyRender</name>
        <full_name>\NetCommonsAppController::emptyRender()</full_name>
        <docblock line="256">
          <description>Empty render</description>
          <long-description></long-description>
          <tag name="return" line="256" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/NetCommons/TestSuite/NetCommonsTestSuite.php" generated-path="Plugin.NetCommons.TestSuite.NetCommonsTestSuite.html" hash="bb6541c30c83ecadcd6e02282ceb53cb" package="Default">
    <docblock line="0">
      <description>NetCommonsTestSuite</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="18" package="NetCommons\NetCommons\TestSuite">
      <extends>\CakeTestSuite</extends>
      <name>NetCommonsTestSuite</name>
      <full_name>\NetCommonsTestSuite</full_name>
      <docblock line="18">
        <description>NetCommonsTestSuite</description>
        <long-description></long-description>
        <tag name="author" line="18" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="18" description="NetCommons\NetCommons\TestSuite"/>
        <tag name="codeCoverageIgnore" line="18" description=""/>
      </docblock>
      <property static="true" visibility="public" namespace="" line="25" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsTestSuite::plugin</full_name>
        <default></default>
        <docblock line="25">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="33" package="NetCommons\NetCommons\TestSuite">
        <name>addTestDirectoryRecursive</name>
        <full_name>\NetCommonsTestSuite::addTestDirectoryRecursive()</full_name>
        <docblock line="33">
          <description>Recursively adds all the files in a directory to the test suite.</description>
          <long-description></long-description>
          <tag name="param" line="33" description="&lt;p&gt;The directory subtree to add tests from.&lt;/p&gt;" type="string" variable="$directory">
            <type>string</type>
          </tag>
          <tag name="return" line="33" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$directory</name>
          <default>'.'</default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJy1U0tr20AQPku/Yg4GP7DltvRQmtgNuAQKJYQkx142q5G08WpX7M7aMcX/vaOVIquQHnsQmp39XjNC19+aqknXi0UKC7hD2tm6tsY/oafHoAi53d7ciECVdfBY2QoV3Im9eFG1gGvTV76ygW9uyloonUlbbyNNK7OHiqj5ul4fj8fMIMnOIbOuHBnCvbMvKKlnSTQe/01c94iMXmks8rNrRxFpm5NTZUWwG6pPHz5+Xr7vuk7/3xYaIfeixJHyr1E5dmlj57izB3RM+FEa6zCGk1p4/140wFdCk3vYiT1eur+Hce51KJUBI+phjINw4MkpU0btpAnPvFBuCeLXpImMq0HhAWVwXh1Qn0DkbCW0BqoQCqXRA4sLyJXjPVp3ArLxjjgK+DZL9mbbCCfq3hgmF8YTwy8nH57JIbY6bBZ1PBTO1lkUcUjBGThYlf8VvghGkrKmJbVr+P4mOKSfjSw3MM2mc95Skkxurc7RccvgEbrDCDq/ajHdpBvowattG3FmgtZLIBdwCdMImTKc8QV/NiErmPVE4SFWnWOiCpjxmLyJDrCE1Zc5bDacqo2e8S/Zh2NrqpRfbfupbhndcWKu5JzG55ym5/QPwME+BA==</source>
  </file>
  <file path="Plugin/NetCommons/TestSuite/NetCommonsModelTestCase.php" generated-path="Plugin.NetCommons.TestSuite.NetCommonsModelTestCase.html" hash="be032802dbfaddf1cfae69a3403ca382" package="Default">
    <docblock line="0">
      <description>NetCommonsModelTestCase class</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="NetCommons\NetCommons\TestSuite">
      <extends>\NetCommonsCakeTestCase</extends>
      <name>NetCommonsModelTestCase</name>
      <full_name>\NetCommonsModelTestCase</full_name>
      <docblock line="20">
        <description>NetCommonsModelTestCase class</description>
        <long-description></long-description>
        <tag name="package" line="20" description="NetCommons\NetCommons\TestSuite"/>
        <tag name="codeCoverageIgnore" line="20" description=""/>
        <tag name="inherited_from" description="\NetCommonsCakeTestCase" refers="\NetCommonsCakeTestCase" link="/classes/NetCommonsCakeTestCase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="31" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsCakeTestCase::plugin</full_name>
        <default></default>
        <docblock line="31">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="38" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsCakeTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="38">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="45" package="NetCommons\NetCommons\TestSuite">
        <name>$_defaultFixtures</name>
        <full_name>\NetCommonsCakeTestCase::_defaultFixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.rooms.roles_room', 'plugin.rooms.room', 'plugin.users.user')</default>
        <docblock line="45">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="27" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsModelTestCase::setUp()</full_name>
        <docblock line="27">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\NetCommonsCakeTestCase::setUp()" refers="\NetCommonsCakeTestCase::setUp()" link="/classes/NetCommonsCakeTestCase.html#method_setUp"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="44" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsModelTestCase::tearDown()</full_name>
        <docblock line="44">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="44" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\NetCommonsCakeTestCase::tearDown()" refers="\NetCommonsCakeTestCase::tearDown()" link="/classes/NetCommonsCakeTestCase.html#method_tearDown"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="57" package="NetCommons\NetCommons\TestSuite">
        <name>_mockForReturnFalse</name>
        <full_name>\NetCommonsModelTestCase::_mockForReturnFalse()</full_name>
        <docblock line="57">
          <description>ExceptionErrorのMockセット</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;モデル名&lt;/p&gt;" type="string" variable="$model">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;Mockのモデル&lt;/p&gt;" type="string" variable="$mockModel">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;Mockのメソッド&lt;/p&gt;" type="string" variable="$mockMethod">
            <type>string</type>
          </tag>
          <tag name="return" line="57" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockModel</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockMethod</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsCakeTestCase::__construct()</full_name>
        <docblock line="76">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="76" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;The data parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="76" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsCakeTestCase::setUp()</full_name>
        <docblock line="91">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsCakeTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
    </class>
    <source>eJy1U8FOGzEQPSdf4QPSblDYtKinhKTQFKRKBaECvVCEnN3JrsnGXtleElRxIDm0VKpUqZf2WMStEj9Q9WtWHPoX9dqbxGmTAwekKJmM3zy/eTPeeJ5ESbm2ulpGq2gPZJv1+4yKXRZAfAhCtrEA5MdYCAXIMZs4lRHjaI9x0mNoi2OCNrD63qSEeNj3zpKWjTuIWAQE7eEePiN9jDZoEYmIpepkM+xjEns+65uymNAeiqRM6rXaYDDwKEjfaPIYDy2JaJ+zM/BlUeUDVUqXFtYKhCeH0iZ5bdKaxGfJBSdhJFF7Gq0/efqsuvjWWrm8lST1eipAuM4M0sY9mFjnVJF14uXpg5RIcCqN8oNcT7DfwyFY4HdWOOUt+gigzc6Bq4JXIWUctFrNt/Q2GEqggX1u94HeT+UKkEcJ6oOabjBRx0GmnKJzRgJ9VSlJO8pw1E2pLwmjpsitKJpSKcEcqKzXi1xDpdopN7kV30THzmtMw1Q14JwcOyRwTlATOeuOcq1UWunnyoXKYM7xxWkPLoS7IiMi1lrmSJN2VePYj5A7wWOBTGh0lGq1Q4593IkhG3/Nxt+y0W0ejG6yq7v7609/vt/mqILYVK61XkCEzwnjKpXSmOHAnRswz+ekGB0t4d/ilHYIDbTxrtbuOh2IGQ3FIXNQs4WK5JSmrVqQjOdrNM0dJQGWwJ1KpYq6OBagr7osq89kRhIwf8kG9KFjmtQVk/pvLMpymsZxw5rirKRhK9ge+pDknNucM64M3WV+Lxv9ysbjbPxxttUc95GQnNCwmA3KxjfZ+EM2/nn/5fNCkN/TBiLNeHU3xS8Dawtm6B/Z6LdWcb3EE86keuAQzGw5zXl2GH+jsTu558VSVS1BVfs+Y2BMhHR1dj9OQ0JteEWZmejsQRKTAmZOcn9JF1kp1Gw255d3brMUVfE/BLlrxJotsy5HHnI8R33bks3C2cIXLi4ME+XJ9JUx6oNbqeTAknpzunCOpDgZkDie1Bij3+I4BdesrdlbpJ4mLOhJ/07bf+T+ZiWP2qt+IZflv52tgrE=</source>
  </file>
  <file path="Plugin/NetCommons/TestSuite/NetCommonsDeleteTest.php" generated-path="Plugin.NetCommons.TestSuite.NetCommonsDeleteTest.html" hash="f55f9670511df3683637818058b9f569" package="Default">
    <docblock line="0">
      <description>NetCommonsDeleteTest</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="NetCommons\NetCommons\TestSuite">
      <extends>\NetCommonsModelTestCase</extends>
      <name>NetCommonsDeleteTest</name>
      <full_name>\NetCommonsDeleteTest</full_name>
      <docblock line="19">
        <description>NetCommonsDeleteTest</description>
        <long-description></long-description>
        <tag name="author" line="19" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="19" description="NetCommons\NetCommons\TestSuite"/>
        <tag name="inherited_from" description="\NetCommonsModelTestCase" refers="\NetCommonsModelTestCase" link="/classes/NetCommonsModelTestCase.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="26" package="NetCommons\NetCommons\TestSuite">
        <name>$_modelName</name>
        <full_name>\NetCommonsDeleteTest::_modelName</full_name>
        <default>''</default>
        <docblock line="26">
          <description>Model name</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="33" package="NetCommons\NetCommons\TestSuite">
        <name>$_methodName</name>
        <full_name>\NetCommonsDeleteTest::_methodName</full_name>
        <default>''</default>
        <docblock line="33">
          <description>Method name</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsCakeTestCase::plugin</full_name>
        <default></default>
        <docblock line="31">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="38" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsCakeTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="38">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="45" package="NetCommons\NetCommons\TestSuite">
        <name>$_defaultFixtures</name>
        <full_name>\NetCommonsCakeTestCase::_defaultFixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.rooms.roles_room', 'plugin.rooms.room', 'plugin.users.user')</default>
        <docblock line="45">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\TestSuite">
        <name>testDelete</name>
        <full_name>\NetCommonsDeleteTest::testDelete()</full_name>
        <docblock line="43">
          <description>Deleteのテスト</description>
          <long-description></long-description>
          <tag name="param" line="43" description="&lt;p&gt;削除データ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="43" description="&lt;p&gt;削除確認の関連モデル array(model =&gt; conditions)&lt;/p&gt;" type="array" variable="$associationModels">
            <type>array</type>
          </tag>
          <tag name="dataProvider" line="43" description="dataProviderDelete"/>
          <tag name="return" line="43" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$associationModels</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="95" package="NetCommons\NetCommons\TestSuite">
        <name>testDeleteOnExceptionError</name>
        <full_name>\NetCommonsDeleteTest::testDeleteOnExceptionError()</full_name>
        <docblock line="95">
          <description>DeleteのExceptionErrorテスト</description>
          <long-description></long-description>
          <tag name="param" line="95" description="&lt;p&gt;登録データ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="95" description="&lt;p&gt;Mockのモデル&lt;/p&gt;" type="string" variable="$mockModel">
            <type>string</type>
          </tag>
          <tag name="param" line="95" description="&lt;p&gt;Mockのメソッド&lt;/p&gt;" type="string" variable="$mockMethod">
            <type>string</type>
          </tag>
          <tag name="dataProvider" line="95" description="dataProviderDeleteOnExceptionError"/>
          <tag name="return" line="95" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockModel</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockMethod</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsCakeTestCase::setUp()</full_name>
        <docblock line="91">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsCakeTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="57" package="NetCommons\NetCommons\TestSuite">
        <name>_mockForReturnFalse</name>
        <full_name>\NetCommonsModelTestCase::_mockForReturnFalse()</full_name>
        <docblock line="57">
          <description>ExceptionErrorのMockセット</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;モデル名&lt;/p&gt;" type="string" variable="$model">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;Mockのモデル&lt;/p&gt;" type="string" variable="$mockModel">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;Mockのメソッド&lt;/p&gt;" type="string" variable="$mockMethod">
            <type>string</type>
          </tag>
          <tag name="return" line="57" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockModel</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockMethod</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsModelTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsCakeTestCase::__construct()</full_name>
        <docblock line="76">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="76" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;The data parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="76" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
    </class>
    <source>eJzlVU1rE0EYPie/Yg6BzZY0acVTP2KlpiCYKLa3WmTcnWSn2Z1ZZ2bTFCnYLKiV9ir0JK2CoFDBm1/4Y5bS5l84O7PdbJtEIuhBPARm33nej+d533mzcMN3/HxlaioPpkADiWXqeZTwW8hFAq0hLqQ9vlqCgXAoA6sOdRAGDdiGm9iDYIEkJ+7QQN4stTyI3bJFvapyczFpA0cIf65S2draKhMkLJ2iTFkrkxHcY3QTWSLxshDhaLxjJUGURVdkg9zRZhXEov42wy1HgOX0dG1m9nppdNZKPn/T9+fmAo540RhA6tRGbqzEMuTIKIHMVTk2rwZYIMOcz/9FFX1otWELZUI/yBzTKhQLy4WcjywCoK5AxM5eXiIHnqQclB0Q6KGLyjuQAcgY3FZJcj6jQuqGbFB46MXghsSCRWAYAyHqSJK1J46i0CPCaALR7kkUPot6n6PwxUU0HzLo6XigYEMBweney/7h2yh8HoXfot6PYZTUhloYCkyJ4sgTl7PjL+fvD2SS/qvj/tM3UXisgnzQfkVFESxWgUWJjWNvbqrgcVY5Qx1sIwayH7pqhWFIBIyADsV2Qjt4JOcXNANixaGAkA3Q+KKiURpV5yIggeuaskm5XCGpBxSEg/l0ddCCeXWrhc9cp9pKWXO5SiWV8vTk9fnR/unegdJ3N+q9i8Iw6n2Mw1g0IGIQRSedrjYxsYuGupTPQesj4TmDIStgHHeQESs1PVtS1oFiyqzxRhttq0/Fd/1KBuhiyDfWFWjDjMOYpiKmYVIbxESDitrjALq8OCP1UuWYih1uguKwflq4XJMyBC1nFAJAnuhev+h2IdNu7T+sysBjvDTjxBmWJ5NRIzTzibhL1E4+/o1qcSwfQzxwR3Q0GRg9fMNKr7FADqZ2NtMB+pdm5b8dlF9NSTwoV1dsrWshPw5aY4yyCRbu2eHX/v6nUQuXC4ZJC8g+WW2tU12e1JpJdus4sN5eKfoo6n2PBy3cm2Tj3iWXOfzuBr7qn27klEcpW+Yf2ccDL6u9Qtl9Ve2KbJx8dl425XD6rD9Hotb11f9pyqFo3CYCMQJdxSa1G9lHMnYPyAnZyf8EE21xFQ==</source>
  </file>
  <file path="Plugin/NetCommons/TestSuite/YACakeTestCase.php" generated-path="Plugin.NetCommons.TestSuite.YACakeTestCase.html" hash="9f05322a63d2e4e7a42e9436eeded634" package="Default">
    <docblock line="0">
      <description>YACakeTestCase file</description>
      <long-description>CakePHP(tm) Tests &lt;http://book.cakephp.org/2.0/en/development/testing.html&gt;
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
For full copyright and license information, please see the LICENSE.txt
Redistributions of files must retain the above copyright notice</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Tests" link="http://book.cakephp.org/2.0/en/development/testing.html"/>
      <tag name="since" line="0" description="CakePHP(tm) v 1.2.0.4667"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="28" package="NetCommons\TestSuite">
      <extends>\CakeTestCase</extends>
      <name>YACakeTestCase</name>
      <full_name>\YACakeTestCase</full_name>
      <docblock line="28">
        <description>YACakeTestCase class</description>
        <long-description></long-description>
        <tag name="package" line="28" description="NetCommons\TestSuite"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="35" package="NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\YACakeTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="35">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="35" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="42" package="NetCommons\TestSuite">
        <name>$_fixtures</name>
        <full_name>\YACakeTestCase::_fixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.plugin_manager.plugins_role', 'plugin.roles.default_role_permission', 'plugin.roles.role', 'plugin.rooms.roles_room', 'plugin.rooms.roles_rooms_user', 'plugin.rooms.room', 'plugin.rooms.room_role', 'plugin.rooms.room_role_permission', 'plugin.users.user')</default>
        <docblock line="42">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\YACakeTestCase::__construct()</full_name>
        <docblock line="73">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="73" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="73" description="&lt;p&gt;The date parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="73" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="88" package="NetCommons\TestSuite">
        <name>loadTestPlugin</name>
        <full_name>\YACakeTestCase::loadTestPlugin()</full_name>
        <docblock line="88">
          <description>Load TestPlugin</description>
          <long-description></long-description>
          <tag name="param" line="88" description="&lt;p&gt;CakeTestCase&lt;/p&gt;" type="\CakeTestCase" variable="$test">
            <type>\CakeTestCase</type>
          </tag>
          <tag name="param" line="88" description="&lt;p&gt;Plugin name&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="param" line="88" description="&lt;p&gt;Test plugin name&lt;/p&gt;" type="string" variable="$testPlugin">
            <type>string</type>
          </tag>
          <tag name="return" line="88" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default></default>
          <type>\CakeTestCase</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$testPlugin</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJytVm1v2zYQ/mz/ihvgQVLgSOswtIDSZA28Bg2QBsGSYRgwQKAlyiZMkQRJxcnW/vcdqRdLttMOWw3Dlu7luUd3xzu9/Vmt1TQ5OZnCCfxxuSAb+kCNXRBDoWScothpnPzuw11oqwic3sDbtbUqTZKllJs4RzXixFKvkh/jHxIqkoI+Ui5VRYVNLHowsYrXtuIXHk6qZ81WawthHnlwuJel3RJN4UrWoiCWSTGHa5HHELaRXJCyV7pYUcvuhuVUGFoAKqmGhzWFj9cPndhZXEkNZc055H1kIgrgjQUwUUpdtUEVp+7pDaVgEenmevH+9v59bJ+sQ/qVFsxYzZa1szYgS58nA1VtLGhqCRPejyzlIx3EE9JitJbxu53cfb5hPuAdZ2ID/ec/lumw4h7bMJHTHnto8wivYsSMf3r9+k1Lo8ntiMZ2u42lQrmsdU49kdbOJBWzp+1NjCz3SphMpy7cjVylaaGlCgNjC1nbIDo7oqBaO8WlUmlaI3gYeK68XjERzCFYSE33DH6XelNyuV3ISkmB+XB2nTBeSGG15JzqZGeAAC8cnZwTY7paK5JvyIrCLbXoW2HX/OkM72tmmyfz1vsQ9MlSURgYCf/uA16xJ1tje1RUr/queiQaiNbk2cNOlJaW5hYPxixjpvX46BwKOAera3q2j2f+BVTZmiKGtwink0mgfG7jJZf5xjR/wfwFRYaZpJmiumLGYO+ODeUTNe73uJSaTGEyR8oci4PHjmqzu/yqwRGcUpMKo/i/kaJ69UbEnIhVve/iMEx8gNT8ZRURqNHt7dctjM/MyM4JTFzQktTcfjFxjeURAFk1Yocuqy8qTYaHQR81ecFTVsc4j3QvEXahTNwHTJJDhcmGWY8O2xW4JMXuoGHlwE1nsYKZwCr6XeAvvI5aXA9SAA6t3wSz2ZWTbfGMZ90JS9MswxZBjDq3YTSA9a0OMMNxSzwsXnwD2I6tg73tGPc3/wMeV1GtBTxKVrRHuF7ieMU1KHK3MGDo0iTrHATuyHn7qM2Tdmc8mg84nkMQRDiMJhMkiJNwHN+DteYDL6zeZMJKCGd2zczpxf5IagAnrXZ/yGR+0IV7WoRvwTqJj/J5it+uVW6wQ/wKa8b/uFlG03XmNuBIdKRQTY9CA+Z764iR7cP5yKD2rF8qjrG4zAc1ct29ox4esp13hObDoE0qW80dsWvM4m4BpqlCUXgtSo4jXeo0zZEXZ39hehuXqK8VrZR9DgdIEXz6BN/5d56MPuGrkBlp+yIil9OLiuiN43tp7jdMKVqERmGCbIn7WNa8cC9FCIVvYt8bfAnr0uTomaB/tAbYMZo0eWtKjD9+fS9rxouw30SToF3zcH7R9u4wETEEjlGAF7/cuzvHNCNK7SSdv7uPELGJPcyfK0s4zPeZa7jP038Atvu4mQ==</source>
  </file>
  <file path="Plugin/NetCommons/TestSuite/NetCommonsControllerTestCase.php" generated-path="Plugin.NetCommons.TestSuite.NetCommonsControllerTestCase.html" hash="e3e800c86d9cf31797b66ddb70a21b43" package="Default">
    <docblock line="0">
      <description>NetCommonsControllerTestCase</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="28" package="NetCommons\NetCommons\TestSuite">
      <extends>\ControllerTestCase</extends>
      <name>NetCommonsControllerTestCase</name>
      <full_name>\NetCommonsControllerTestCase</full_name>
      <docblock line="28">
        <description>NetCommonsControllerTestCase</description>
        <long-description></long-description>
        <tag name="author" line="28" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="28" description="NetCommons\NetCommons\TestSuite"/>
        <tag name="codeCoverageIgnore" line="28" description=""/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="35" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsControllerTestCase::plugin</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="NetCommons\NetCommons\TestSuite">
        <name>$data</name>
        <full_name>\NetCommonsControllerTestCase::data</full_name>
        <default>null</default>
        <docblock line="42">
          <description>Post data</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="49" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsControllerTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="49">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="NetCommons\NetCommons\TestSuite">
        <name>$_fixtures</name>
        <full_name>\NetCommonsControllerTestCase::_fixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.net_commons.site_setting', 'plugin.pages.languages_page', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.plugin_manager.plugins_role', 'plugin.plugin_manager.plugins_room', 'plugin.roles.default_role_permission', 'plugin.roles.role', 'plugin.rooms.roles_room', 'plugin.rooms.roles_rooms_user', 'plugin.rooms.room', 'plugin.rooms.room_role_permission', 'plugin.rooms.space', 'plugin.users.user')</default>
        <docblock line="56">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsControllerTestCase::__construct()</full_name>
        <docblock line="91">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="91" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The date parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="107" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsControllerTestCase::setUp()</full_name>
        <docblock line="107">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="107" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsControllerTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="138" package="NetCommons\NetCommons\TestSuite">
        <name>loadTestPlugin</name>
        <full_name>\NetCommonsControllerTestCase::loadTestPlugin()</full_name>
        <docblock line="138">
          <description>Load TestPlugin</description>
          <long-description></long-description>
          <tag name="param" line="138" description="&lt;p&gt;CakeTestCase&lt;/p&gt;" type="\CakeTestCase" variable="$test">
            <type>\CakeTestCase</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Plugin name&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Test plugin name&lt;/p&gt;" type="string" variable="$testPlugin">
            <type>string</type>
          </tag>
          <tag name="return" line="138" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default></default>
          <type>\CakeTestCase</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$testPlugin</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="173" package="NetCommons\NetCommons\TestSuite">
        <name>_testAction</name>
        <full_name>\NetCommonsControllerTestCase::_testAction()</full_name>
        <docblock line="173">
          <description>Lets you do functional tests of a controller action.</description>
          <long-description>### Options:

- `data` Will be used as the request data. If the `method` is GET,
  data will be used a GET params. If the `method` is POST, it will be used
  as POST data. By setting `$options['data']` to a string, you can simulate XML or JSON
  payloads to your controllers allowing you to test REST webservices.
- `method` POST or GET. Defaults to POST.
- `return` Specify the return type you want. Choose from:
    - `vars` Get the set view variables.
    - `view` Get the rendered view, without a layout.
    - `contents` Get the rendered view including the layout.
    - `result` Get the return value of the controller action. Useful
      for testing requestAction methods.
- `type` json or html, Defaults to html.</long-description>
          <tag name="param" line="173" description="&lt;p&gt;The url to test&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="&lt;p&gt;See options&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="173" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="196" package="NetCommons\NetCommons\TestSuite">
        <name>_testNcAction</name>
        <full_name>\NetCommonsControllerTestCase::_testNcAction()</full_name>
        <docblock line="196">
          <description>Assert input tag</description>
          <long-description>### $returnについて
 - viewFile: viewファイル名を戻す
 - json: JSONをでコードした配列を戻す
 - 上記以外: $this-&gt;testActionのreturnで指定した内容を戻す</long-description>
          <tag name="param" line="196" description="&lt;p&gt;URL配列&lt;/p&gt;" type="array" variable="$url">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;リクエストパラメータオプション&lt;/p&gt;" type="array" variable="$paramsOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="196" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramsOptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="244" package="NetCommons\NetCommons\TestSuite">
        <name>_testGetAction</name>
        <full_name>\NetCommonsControllerTestCase::_testGetAction()</full_name>
        <docblock line="244">
          <description>viewアクションのテスト</description>
          <long-description></long-description>
          <tag name="param" line="244" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;テストの期待値&lt;/p&gt;" type="array" variable="$assert">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="244" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$assert</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="273" package="NetCommons\NetCommons\TestSuite">
        <name>_testPostAction</name>
        <full_name>\NetCommonsControllerTestCase::_testPostAction()</full_name>
        <docblock line="273">
          <description>addアクションのPOSTテスト</description>
          <long-description></long-description>
          <tag name="param" line="273" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="273" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="293" package="NetCommons\NetCommons\TestSuite">
        <name>_testActionOnValidationError</name>
        <full_name>\NetCommonsControllerTestCase::_testActionOnValidationError()</full_name>
        <docblock line="293">
          <description>addアクションのValidateionErrorテスト</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;ValidationError&lt;/p&gt;" type="string|null" variable="$validationError">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="293" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$validationError</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="335" package="NetCommons\NetCommons\TestSuite">
        <name>generateNc</name>
        <full_name>\NetCommonsControllerTestCase::generateNc()</full_name>
        <docblock line="335">
          <description>Generates a mocked controller and mocks any classes passed to `$mocks`. By
default, `_stop()` is stubbed as is sending the response headers, so to not
interfere with testing.</description>
          <long-description>### Mocks:

- `methods` Methods to mock on the controller. `_stop()` is mocked by default
- `models` Models to mock. Models are added to the ClassRegistry so any
  time they are instantiated the mock will be created. Pass as key value pairs
  with the value being specific methods on the model to mock. If `true` or
  no value is passed, the entire model will be mocked.
- `components` Components to mock. Components are only mocked on this controller
  and not within each other (i.e., components on components)</long-description>
          <tag name="param" line="335" description="&lt;p&gt;Controller name&lt;/p&gt;" type="string" variable="$controller">
            <type>string</type>
          </tag>
          <tag name="param" line="335" description="&lt;p&gt;List of classes and methods to mock&lt;/p&gt;" type="array" variable="$mocks">
            <type>array</type>
          </tag>
          <tag name="return" line="335" description="Mocked controller" type="\Controller">
            <type>\Controller</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mocks</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="357" package="NetCommons\NetCommons\TestSuite">
        <name>asserts</name>
        <full_name>\NetCommonsControllerTestCase::asserts()</full_name>
        <docblock line="357">
          <description>Asserts</description>
          <long-description></long-description>
          <tag name="param" line="357" description="&lt;p&gt;テストAssert&lt;/p&gt;" type="array" variable="$asserts">
            <type>array</type>
          </tag>
          <tag name="param" line="357" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="return" line="357" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$asserts</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="395" package="NetCommons\NetCommons\TestSuite">
        <name>assertInput</name>
        <full_name>\NetCommonsControllerTestCase::assertInput()</full_name>
        <docblock line="395">
          <description>Assert input tag</description>
          <long-description></long-description>
          <tag name="param" line="395" description="&lt;p&gt;タグタイプ(input or textearea or button)&lt;/p&gt;" type="string" variable="$tagType">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのname属性&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのvalue値&lt;/p&gt;" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="395" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tagType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="431" package="NetCommons\NetCommons\TestSuite">
        <name>assertActionLink</name>
        <full_name>\NetCommonsControllerTestCase::assertActionLink()</full_name>
        <docblock line="431">
          <description>Assert アクションリンク</description>
          <long-description></long-description>
          <tag name="param" line="431" description="&lt;p&gt;アクション&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;リンクの有無&lt;/p&gt;" type="boolean" variable="$linkExist">
            <type>boolean</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="431" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$linkExist</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/NetCommons/TestSuite/NetCommonsCakeTestCase.php" generated-path="Plugin.NetCommons.TestSuite.NetCommonsCakeTestCase.html" hash="4ee1d768eada43c1e7eba788486fa6ed" package="Default">
    <docblock line="0">
      <description>NetCommonsCakeTestCase</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="24" package="NetCommons\NetCommons\TestSuite">
      <extends>\CakeTestCase</extends>
      <name>NetCommonsCakeTestCase</name>
      <full_name>\NetCommonsCakeTestCase</full_name>
      <docblock line="24">
        <description>NetCommonsCakeTestCase class</description>
        <long-description></long-description>
        <tag name="package" line="24" description="NetCommons\NetCommons\TestSuite"/>
        <tag name="codeCoverageIgnore" line="24" description=""/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="31" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsCakeTestCase::plugin</full_name>
        <default></default>
        <docblock line="31">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="38" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsCakeTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="38">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="45" package="NetCommons\NetCommons\TestSuite">
        <name>$_defaultFixtures</name>
        <full_name>\NetCommonsCakeTestCase::_defaultFixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.rooms.roles_room', 'plugin.rooms.room', 'plugin.users.user')</default>
        <docblock line="45">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsCakeTestCase::__construct()</full_name>
        <docblock line="76">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="76" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;The data parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="76" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsCakeTestCase::setUp()</full_name>
        <docblock line="91">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsCakeTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJylVVlv2zgQfpZ/xRQwKjtI5WZRoIBybAovii3QBsGmeeoWAivRMmOJFEgqTrrNf9/hYV2Wm130RcfMN98M5+LZ79W6miyOjiZwBFdUL0VZCq6WZEM/U6WXRFHUGOUlqfVaSLgSkm0EvJOEwRnB5yVnLCJpdFdddHE3a7GmDK7IhtyxksAZ919qLWrUXOYlYUWUitKZFYxvYK11FS8W2+024lSnLphIyLwTG1xLcUdT7a1SyhU9bLjwiEg/6C7JRye2JKmoHiXL1xqWzddvr0/eHI97XUwmJj8fRR7HmRTVLFQ6E7UO56cjCiqlUUzeVVUc14qqWbispaRch8cQtg6iW80Kph8NuINtAaYeNzXTdGDXyo2bn5YS0oIotStoRdINyWkH+3fns6H1KcroUtxTiQYfci4ktYmwfIec0QdNeaagJ/ynCfG6qHPGgZOyabF7IkFpyXhu2YOq/oblg2lloe3p3rMHXUsKJZV5z5hISR69rRQa60UzmCZMeYtPxiCDc9Cypnt86j9QZXRF6kLvLJDKAmeTIAhdmNG3QqQb5V7h8QFFIkVBk4rKkinFBO8DxQNV5jkupSqpsA49ZSq4JoxTqdrPZwEjPCuJ9VDu1VOUJ295VBCe10MTw6GiPSb3SkrCUSP9r0UsFj/FKJubAdKIVOSzP5q8IbYhacWidGLjQZR7Vn21SnAC5SjDQVtRjsfe0x6qunGnosZpa98qVNKtwHy/g6EQJGsHHKvoBwqmZtDg85raiQOro5pKEByu/7y+5Uwn741sK+Qm2c1rHCcJtgty1KmezTu0tu0BphnRxNLaj1+m3UVr2K52ETc/v0AvKSaIw71gWW+5rGqeaiwFdE1css6B10Vx7I/qTrqb9/lxJ8ZzCMM5rrYgwABxs/f9WzIP71hh9YKArWA21WumXl0Mt5QjDLx2NVg4id19s4EW6T3ZYE9ZZ099h667vJuReyaO/eJFnz0Tz/XUdJ+i+rbCbYwXf9N8z+bbGs36afMy7OsgWAq+YjkGH8dbieF078IIt4QmRUEzvAzNLncmK7yXSLqGYVqAKJj6n11aVYW3LZ7MHenG/M0ajDmhTdULwEGlqLHwL6+/zuHHDxhIT5x0D/nypWlnLQqxpbKreHGOHeMXoo8nMEuZcXMrBa5SQcEU0jkYFrbEK7iYDyNuIrB2bcE+8FWBd5aQcZxisxXsO91xeajlO4R0zmxSg6m95T95+NL8/EVzDE4+xjHjrAkSIgijEJ/OvKmMz2WHZ3foJoiO7tWFmZdTp3d1tCj1xaG/GviowyZ1T2PN4EhsK3ivF95tf9KamEZP6gz2JkBTIv8QW/5/h2Bn5+fguZh9pDW3ndaN14fUmaWW+tRG+jT5F0b03NM=</source>
  </file>
  <file path="Plugin/NetCommons/TestSuite/YAControllerTestCase.php" generated-path="Plugin.NetCommons.TestSuite.YAControllerTestCase.html" hash="84e7f06e45253ccb86b57f55b1eeb7db" package="Default">
    <docblock line="0">
      <description>YAControllerTestCase</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="23" package="NetCommons\TestSuite">
      <extends>\ControllerTestCase</extends>
      <name>YAControllerTestCase</name>
      <full_name>\YAControllerTestCase</full_name>
      <docblock line="23">
        <description>YAControllerTestCase</description>
        <long-description></long-description>
        <tag name="author" line="23" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="23" description="NetCommons\TestSuite"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="30" package="NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\YAControllerTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="30">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="37" package="NetCommons\TestSuite">
        <name>$_fixtures</name>
        <full_name>\YAControllerTestCase::_fixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.net_commons.site_setting', 'plugin.pages.languages_page', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.plugin_manager.plugins_role', 'plugin.plugin_manager.plugins_room', 'plugin.roles.default_role_permission', 'plugin.roles.role', 'plugin.rooms.roles_room', 'plugin.rooms.roles_rooms_user', 'plugin.rooms.room', 'plugin.rooms.room_role', 'plugin.rooms.room_role_permission', 'plugin.rooms.space', 'plugin.users.user')</default>
        <docblock line="37">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="72" package="NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\YAControllerTestCase::__construct()</full_name>
        <docblock line="72">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="72" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="72" description="&lt;p&gt;The date parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="72" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="72" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="84" package="NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\YAControllerTestCase::setUp()</full_name>
        <docblock line="84">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="84" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="94" package="NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\YAControllerTestCase::tearDown()</full_name>
        <docblock line="94">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="94" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="121" package="NetCommons\TestSuite">
        <name>_testAction</name>
        <full_name>\YAControllerTestCase::_testAction()</full_name>
        <docblock line="121">
          <description>Lets you do functional tests of a controller action.</description>
          <long-description>### Options:

- `data` Will be used as the request data. If the `method` is GET,
  data will be used a GET params. If the `method` is POST, it will be used
  as POST data. By setting `$options['data']` to a string, you can simulate XML or JSON
  payloads to your controllers allowing you to test REST webservices.
- `method` POST or GET. Defaults to POST.
- `return` Specify the return type you want. Choose from:
    - `vars` Get the set view variables.
    - `view` Get the rendered view, without a layout.
    - `contents` Get the rendered view including the layout.
    - `result` Get the return value of the controller action. Useful
      for testing requestAction methods.
- `type` json or html, Defaults to html.</long-description>
          <tag name="param" line="121" description="&lt;p&gt;The url to test&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="121" description="&lt;p&gt;See options&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="121" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJytV21v2zYQ/mz/igNiQE7gymsxYIAbZ8lct+mQJlnsrB2yQGZk2mZMkRpJxTGG/vcdSUmWX7Ik2IDAou7luePDu6Ny+HM6S+vtg4M6HMAfJz0pjJKcUzWk2vSIpii3qmOSmZlUcC4Vm0s4UYTBIcHfY8FYSOLwPj2q2g1mckYZnJM5uWcJgUORr/RMZqg5niaE8TCWiXfjTMxhZkzaabcXi0UoqEFdIoUOpZrCOTU9/wqXSt7T2OReMRWaPu3Yzi1C82iqIGde7EBimS4Vm84M9MrVux/e/tjaHbVdr/fInJ7JaaczVjJtBtqMZWaC/fc7FFQpqzhJ004n01Q3AyQZrQp6gxYEqzChFQ8yZuiGUy9TigqzYX1tGGdmaW1fcYSvPZqUxHMypRU2/izTdHzEnGi9MzLQR0PFWMMO1d9lzh/Zo8kUhYSqaZnsA1FAlCJLF6KWKmmQfzqGRsR07vHFOoyhC0Zl9P0mnn4B1CQ3RQxn0azXakHKsykT4R2X8Vz7R9B6QhHhrmiUUpUwrZkU64bykWr7u1tKdZQisWvKGIkiTFClV8tnDXbgTBRJMIp7rCmStz+JkBMxzTZdsHOionU0nm2kqTFMTNeMbCBd+u8I7A22xe4RJUSgRuWvz1tox+/L7GSyZmcddTimE5Jx86/H5C23AllEL96Jvq7UETaq2mnyhKdMtve2oXs6YWumsTHX3W0KOiwTabe3FTqqnv3+dtMAl2RcdE6KEz4BbRSWATQE1hIMZxTcwumooQqkgMvTy2vBTPTRyhZSzaOizzudCKtKIEYWm+Z+BdY1HEBjTAxxsLj4H2CLbC3seZFx+fIf4BVFggQ8SDbOB0l2h9cLTDIRGzwiqLp4srogMs5b+Vb9TotJs9+q5NiFINjHkVirYYI46NfjO7DcvOKFp1ersQk0G2bG9JujzcHoAWu5dnPURW7cNje0CJ+DFRIX5Xsd/4pSwblwneK0xtukrJRnyXFOzfU95jIbAC+ICZtivE5noXD44JXnJJVRBcE9sVddJRNDifogF+K1yRR+eT4vCW4P0mVaJL/CWEvpjBoNS5nBWJbxCMeIGuVyAgTi8i4E4tRhnvfe3h5cpFaiO7noDYzsaY/gK+Mc7ihgD4+BaDBY1Ir+lSGsK+4QPk+ccOSpGAHT8Kk/bFkUcCawWMOwWt8Oeqfz5cVg2AJm1tw8GvHaPPAvS8hvChg1pM//JrC64HYERmIo35Mtx0tMsBhYknHb7d++nAF+kvw6uDj30ClZ2gGkrR9aqwpbGgjncmHjWBw0sKTCVR8zWdA7HG4P+FWnw5y3YisuU4yB2w3hg78OHLxVFMa+YkYwSGnMJsucXldFZplSF3BBhAmhN5MSv14mSiYdnzJYAPzG0CP4RI1zRT7ggdEFoJiRO55nVdiiZmWL1YRfiXgiVtxCtjHtzCBpnGBUU3W0XGDt6SecgYmYZ2NLkNVt+2M34+ar3r5PCM+orU0r265OuNZ0kvECB2CCbFrqbaC8Bk98X3nOyyOw1I3gXqMGXWYmwVFYPQErCXffNZnibnDbZ37SW1dHUWwwoJi+X1f7P2GPtBgA5TffalqbMu+mC2dncGsF2oWbWz8eKqLq5LwJ7P4C6B5BYHcS3K68V6O5bAhnfAvdLsaxlATFeI4G/avf+1c3welweBl9i676v11jTfc/RF8/D0+tCwTYJ6f4P86VZzvIR3KtgTtFdXlnbGxpI5+cFuvkRtb3+j83+JtK</source>
  </file>
  <file path="Plugin/NetCommons/TestSuite/NetCommonsGetTest.php" generated-path="Plugin.NetCommons.TestSuite.NetCommonsGetTest.html" hash="a2b4de549666393ad6efde2822964699" package="Default">
    <docblock line="0">
      <description>NetCommonsGetTest</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="NetCommons\NetCommons\TestSuite">
      <extends>\NetCommonsModelTestCase</extends>
      <name>NetCommonsGetTest</name>
      <full_name>\NetCommonsGetTest</full_name>
      <docblock line="19">
        <description>NetCommonsGetTest</description>
        <long-description></long-description>
        <tag name="author" line="19" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="19" description="NetCommons\NetCommons\TestSuite"/>
        <tag name="inherited_from" description="\NetCommonsModelTestCase" refers="\NetCommonsModelTestCase" link="/classes/NetCommonsModelTestCase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="31" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsCakeTestCase::plugin</full_name>
        <default></default>
        <docblock line="31">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="38" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsCakeTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="38">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="45" package="NetCommons\NetCommons\TestSuite">
        <name>$_defaultFixtures</name>
        <full_name>\NetCommonsCakeTestCase::_defaultFixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.rooms.roles_room', 'plugin.rooms.room', 'plugin.users.user')</default>
        <docblock line="45">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsCakeTestCase::setUp()</full_name>
        <docblock line="91">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsCakeTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="57" package="NetCommons\NetCommons\TestSuite">
        <name>_mockForReturnFalse</name>
        <full_name>\NetCommonsModelTestCase::_mockForReturnFalse()</full_name>
        <docblock line="57">
          <description>ExceptionErrorのMockセット</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;モデル名&lt;/p&gt;" type="string" variable="$model">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;Mockのモデル&lt;/p&gt;" type="string" variable="$mockModel">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;Mockのメソッド&lt;/p&gt;" type="string" variable="$mockMethod">
            <type>string</type>
          </tag>
          <tag name="return" line="57" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockModel</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockMethod</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsModelTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsCakeTestCase::__construct()</full_name>
        <docblock line="76">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="76" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;The data parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="76" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
    </class>
    <source>eJy1ULFOwzAQ3f0VtwWiygbEFCooysACFVIZWSz3FLtJfFZ8UYoQ/06TRsUIGNme3rv37t0t74INQuW5gBzWyCW1Lfn4gPyCkQ/kyK90z5Y62Fiy6GCta71zrYaln1G01B+UVdVq10hD7e1ka5yvwTKHQqlhGKRHNsd8SV2VrIPnjnZoeHYZ9BH/Nqp5QvKe05DHIz2FGApvnassQ3lCVxeX14vftyoh7kMoij5iPMu+Rp5oi834iVJHzBaQSHKkN71jzM5vxH+9MGhT6wqT3NcEnipMJ5hGx/izAeCe0W9T5dtZ8C7Eh/gECxSzNg==</source>
  </file>
  <file path="Plugin/NetCommons/TestSuite/NetCommonsSaveTest.php" generated-path="Plugin.NetCommons.TestSuite.NetCommonsSaveTest.html" hash="be2df4e38451b1e8cbe8c1bee9e85057" package="Default">
    <docblock line="0">
      <description>NetCommonsSaveTest</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="NetCommons\NetCommons\TestSuite">
      <extends>\NetCommonsModelTestCase</extends>
      <name>NetCommonsSaveTest</name>
      <full_name>\NetCommonsSaveTest</full_name>
      <docblock line="19">
        <description>NetCommonsSaveTest</description>
        <long-description></long-description>
        <tag name="author" line="19" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="19" description="NetCommons\NetCommons\TestSuite"/>
        <tag name="inherited_from" description="\NetCommonsModelTestCase" refers="\NetCommonsModelTestCase" link="/classes/NetCommonsModelTestCase.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="26" package="NetCommons\NetCommons\TestSuite">
        <name>$_modelName</name>
        <full_name>\NetCommonsSaveTest::_modelName</full_name>
        <default>''</default>
        <docblock line="26">
          <description>Model name</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="33" package="NetCommons\NetCommons\TestSuite">
        <name>$_methodName</name>
        <full_name>\NetCommonsSaveTest::_methodName</full_name>
        <default>''</default>
        <docblock line="33">
          <description>Method name</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsCakeTestCase::plugin</full_name>
        <default></default>
        <docblock line="31">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="38" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsCakeTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="38">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="45" package="NetCommons\NetCommons\TestSuite">
        <name>$_defaultFixtures</name>
        <full_name>\NetCommonsCakeTestCase::_defaultFixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.rooms.roles_room', 'plugin.rooms.room', 'plugin.users.user')</default>
        <docblock line="45">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="42" package="NetCommons\NetCommons\TestSuite">
        <name>testSave</name>
        <full_name>\NetCommonsSaveTest::testSave()</full_name>
        <docblock line="42">
          <description>Saveのテスト</description>
          <long-description></long-description>
          <tag name="param" line="42" description="&lt;p&gt;登録データ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="dataProvider" line="42" description="dataProviderSave"/>
          <tag name="return" line="42" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="60" package="NetCommons\NetCommons\TestSuite">
        <name>testSaveOnExceptionError</name>
        <full_name>\NetCommonsSaveTest::testSaveOnExceptionError()</full_name>
        <docblock line="60">
          <description>SaveのExceptionErrorテスト</description>
          <long-description></long-description>
          <tag name="param" line="60" description="&lt;p&gt;登録データ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="60" description="&lt;p&gt;Mockのモデル&lt;/p&gt;" type="string" variable="$mockModel">
            <type>string</type>
          </tag>
          <tag name="param" line="60" description="&lt;p&gt;Mockのメソッド&lt;/p&gt;" type="string" variable="$mockMethod">
            <type>string</type>
          </tag>
          <tag name="dataProvider" line="60" description="dataProviderSaveOnExceptionError"/>
          <tag name="return" line="60" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockModel</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockMethod</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="79" package="NetCommons\NetCommons\TestSuite">
        <name>testSaveOnValidationError</name>
        <full_name>\NetCommonsSaveTest::testSaveOnValidationError()</full_name>
        <docblock line="79">
          <description>SaveのValidationErrorテスト</description>
          <long-description></long-description>
          <tag name="param" line="79" description="&lt;p&gt;登録データ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="79" description="&lt;p&gt;Mockのモデル&lt;/p&gt;" type="string" variable="$mockModel">
            <type>string</type>
          </tag>
          <tag name="param" line="79" description="&lt;p&gt;Mockのメソッド&lt;/p&gt;" type="string" variable="$mockMethod">
            <type>string</type>
          </tag>
          <tag name="dataProvider" line="79" description="dataProviderSaveOnValidationError"/>
          <tag name="return" line="79" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockModel</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockMethod</name>
          <default>'validates'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="99" package="NetCommons\NetCommons\TestSuite">
        <name>testValidationError</name>
        <full_name>\NetCommonsSaveTest::testValidationError()</full_name>
        <docblock line="99">
          <description>Validatesのテスト</description>
          <long-description></long-description>
          <tag name="param" line="99" description="&lt;p&gt;登録データ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="99" description="&lt;p&gt;フィールド名&lt;/p&gt;" type="string" variable="$field">
            <type>string</type>
          </tag>
          <tag name="param" line="99" description="&lt;p&gt;セットする値&lt;/p&gt;" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="99" description="&lt;p&gt;エラーメッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="99" description="&lt;p&gt;上書きするデータ&lt;/p&gt;" type="array" variable="$overwrite">
            <type>array</type>
          </tag>
          <tag name="dataProvider" line="99" description="dataProviderValidationError"/>
          <tag name="return" line="99" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$overwrite</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsCakeTestCase::setUp()</full_name>
        <docblock line="91">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsCakeTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="57" package="NetCommons\NetCommons\TestSuite">
        <name>_mockForReturnFalse</name>
        <full_name>\NetCommonsModelTestCase::_mockForReturnFalse()</full_name>
        <docblock line="57">
          <description>ExceptionErrorのMockセット</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;モデル名&lt;/p&gt;" type="string" variable="$model">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;Mockのモデル&lt;/p&gt;" type="string" variable="$mockModel">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;Mockのメソッド&lt;/p&gt;" type="string" variable="$mockMethod">
            <type>string</type>
          </tag>
          <tag name="return" line="57" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockModel</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mockMethod</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsModelTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsCakeTestCase::__construct()</full_name>
        <docblock line="76">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="76" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;The data parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="76" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
    </class>
    <source>eJzVVk1PE0EYPre/Yg4kXUht0XgqH2JIiSaCRgwXJGTcvrRLd3fWmdkCMSTSTQAVEi4eiAeDGqMh4eAJg8YfMyL6L5yP7XYpRYRojKdO533ej+d9n5nZwWtBLcgW+/qyqA9NAB8lnkd8NokbcA8Yl7vKMIJDXiMUTdZIDRw0get43vEwGvTjFauRUFpGqh523IJNvGHt5jp+HdU4D0rF4sLCQsEHbpsEBUKrqXzoDiXzYPPYywafwemOxRhR4Is8HeSW2dZBbBIsUada42g0WV3pv3w13z1rMZu9HgSlUsiAWbk2ZJxUwFWdGMUMcnmUMhXU9mTocMj1DmT/Wg8DbNdxFVKB76eWSQ2ag+1ixrqUgGCRg19Jm44RQ4+S+vU+8rEHrbobmCJMKV7SKTIBJVz2DCqoZ9ZT4AmJRUMol2s3YRwk1cpvR9HoLmFU+WJlT0SrovlRROutWAGm2DPRUE8Fc4yOtg9+bHwQ0ZqIPonmF41SBjnghlMBitJ/VFiNoMBD6qMGcSpxVeEDKS00F/o2d4iPuOquRFs6S69sUybTo0nLSnt4zWGXhttNGNBWQz1lTthJYplMsZjQOdx7+X1nQzlRYKHL204mh/rVznF6Hd8A5JiB8gnCy17Al6w4gEIsd3avvGhDoNiUKSX0gr00KMap41eRrM6uG52My5We0CuN3z0NbJqSoHdE87OIIhE9OXtSt/3jDM43uU5v08p8ikM+XeIfGXHby66PEXpX1zqGXSZ15KVTnkyf9mfAy4uBPiQJByt30+dAfexqNsl+Li2OU9VzQhtT2HWk8X8WRweF86qjw/0Meaj7qWE8gOX+vVgufnXEGbrdG1Mtghe/eo8Pec4Bt4JE9Fw0XytQtCtne7i12QUqmxsCEs0DLYB1sbItms8OH7/pJh1gTL2LovlORO913B3lpXxlIfsnyyUNoAtUvpXo6/7Tby/2xcqmSfCb78aFpXaayHRj8jHrfEIpny51yFRv9Z6tNml25pDlsFk/dF3LhI39MqH8MOIm87QJMjNtCpjR6lhG4OoPAYntilI5dUSNzsYouXtDfrmUSh7QKiTMkvp740evdWoO194eba22X77jok1K/LW2kyNonS3sTnv5YSgRVveIrQmxFunp/pn2XOJjspz9CaJRBYU=</source>
  </file>
  <file path="Plugin/NetCommons/View/Helper/NetCommonsFormHelper.php" generated-path="Plugin.NetCommons.View.Helper.NetCommonsFormHelper.html" hash="d85f14c78120ffef1305e92c8262065d" package="Default">
    <docblock line="0">
      <description>NetCommonsFormHelper</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="NetCommons\NetCommons\View\Helper">
      <extends>\Helper</extends>
      <name>NetCommonsFormHelper</name>
      <full_name>\NetCommonsFormHelper</full_name>
      <docblock line="19">
        <description>NetCommonsFormHelper</description>
        <long-description></long-description>
        <tag name="package" line="19" description="NetCommons\NetCommons\View\Helper"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="26" package="NetCommons\NetCommons\View\Helper">
        <name>$helpers</name>
        <full_name>\NetCommonsFormHelper::helpers</full_name>
        <default>array('Form', 'Html', 'NetCommons.Button')</default>
        <docblock line="26">
          <description>Other helpers used by FormHelper</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="58" package="NetCommons\NetCommons\View\Helper">
        <name>create</name>
        <full_name>\NetCommonsFormHelper::create()</full_name>
        <docblock line="58">
          <description>Returns an HTML FORM element.</description>
          <long-description>### Options:

- `type` Form method defaults to POST
- `action`  The controller action the form submits to, (optional).
- `url`  The URL the form submits to. Can be a string or a URL array. If you use 'url'
   you should leave 'action' undefined.
- `default`  Allows for the creation of Ajax forms. Set this to false to prevent the default event handler.
  Will create an onsubmit attribute if it doesn't not exist. If it does, default action suppression
  will be appended.
- `onsubmit` Used in conjunction with 'default' to create ajax forms.
- `inputDefaults` set the default $options for FormHelper::input(). Any options that would
  be set when using FormHelper::input() can be set here. Options set with `inputDefaults`
  can be overridden when calling input()
- `encoding` Set the accept-charset encoding for the form. Defaults to `Configure::read('App.encoding')`</long-description>
          <tag name="param" line="58" description="&lt;p&gt;The model name for which the form is being defined. Should&#10;include the plugin name for plugin models. e.g. &lt;code&gt;ContactManager.Contact&lt;/code&gt;.&#10;If an array is passed and $options argument is empty, the array will be used as options.&#10;If &lt;code&gt;false&lt;/code&gt; no model is used.&lt;/p&gt;" type="mixed" variable="$model">
            <type>mixed</type>
          </tag>
          <tag name="param" line="58" description="&lt;p&gt;An array of html attributes and options.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="58" description="A formatted opening FORM tag." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="58" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#options-for-create" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#options-for-create"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="NetCommons\NetCommons\View\Helper">
        <name>input</name>
        <full_name>\NetCommonsFormHelper::input()</full_name>
        <docblock line="102">
          <description>Overwrite FormHelper::input()
Generates a form input element complete with label and wrapper div</description>
          <long-description>### Options

See each field type method for more information. Any options that are part of
$attributes or $options for the different **type** methods can be included in `$options` for input().i
Additionally, any unknown keys that are not in the list below, or part of the selected type's options
will be treated as a regular html attribute for the generated input.

- `type` - Force the type of widget you want. e.g. `type =&gt; 'select'`
- `label` - Either a string label, or an array of options for the label. See FormHelper::label().
- `div` - Either `false` to disable the div, or an array of options for the div.
   See HtmlHelper::div() for more options.
- `options` - For widgets that take options e.g. radio, select.
- `error` - Control the error message that is produced. Set to `false` to disable any kind of error reporting (field
   error and error messages).
- `errorMessage` - Boolean to control rendering error messages (field error will still occur).
- `empty` - String or boolean to enable empty select box options.
- `before` - Content to place before the label + input.
- `after` - Content to place after the label + input.
- `between` - Content to place between the label + input.
- `format` - Format template for element order. Any element that is not in the array, will not be in the output.
   - Default input format order: array('before', 'label', 'between', 'input', 'after', 'error')
   - Default checkbox format order: array('before', 'input', 'between', 'label', 'after', 'error')
   - Hidden input will not be formatted
   - Radio buttons cannot have the order of input and label elements controlled with these settings.</long-description>
          <tag name="param" line="102" description="&lt;p&gt;This should be &quot;Modelname.fieldname&quot;&lt;/p&gt;" type="string" variable="$fieldName">
            <type>string</type>
          </tag>
          <tag name="param" line="102" description="&lt;p&gt;Each type of input takes different options.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="102" description="Completed form widget." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="102" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#creating-form-elements" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#creating-form-elements"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fieldName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="175" package="NetCommons\NetCommons\View\Helper">
        <name>radio</name>
        <full_name>\NetCommonsFormHelper::radio()</full_name>
        <docblock line="175">
          <description>Overwrite FormHelper::radio()</description>
          <long-description>### Options

$options = array(
 array('name' =&gt; 'United states', 'value' =&gt; 'US', 'title' =&gt; 'My title'),
 array('name' =&gt; 'Germany', 'value' =&gt; 'DE', 'class' =&gt; 'de-de', 'title' =&gt; 'Another title'),
);

### Attributes:

- `separator` - define the string in between the radio buttons
- `between` - the string between legend and input set or array of strings to insert
   strings between each input block
- `legend` - control whether or not the widget set has a fieldset &amp; legend
- `value` - indicate a value that is should be checked
- `label` - boolean to indicate whether or not labels for widgets show be displayed
- `hiddenField` - boolean to indicate if you want the results of radio() to include
   a hidden input with a value of ''. This is useful for creating radio sets that non-continuous
- `disabled` - Set to `true` or `disabled` to disable all the radio buttons.
- `empty` - Set to `true` to create an input with the value '' as the first option. When `true`
  the radio label will be 'empty'. Set this option to a string to control the label value.</long-description>
          <tag name="param" line="175" description="&lt;p&gt;Name of a field, like this &quot;Modelname.fieldname&quot;&lt;/p&gt;" type="string" variable="$fieldName">
            <type>string</type>
          </tag>
          <tag name="param" line="175" description="&lt;p&gt;Radio button options array.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="param" line="175" description="&lt;p&gt;Array of HTML attributes, and special attributes above.&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="175" description="Completed radio widget set." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="175" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#options-for-select-checkbox-and-radio-inputs" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#options-for-select-checkbox-and-radio-inputs"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fieldName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="218" package="NetCommons\NetCommons\View\Helper">
        <name>inlineCheckbox</name>
        <full_name>\NetCommonsFormHelper::inlineCheckbox()</full_name>
        <docblock line="218">
          <description>Overwrite FormHelper::checkbox()</description>
          <long-description>### Options

$options = array(
 array('name' =&gt; 'United states', 'value' =&gt; 'US', 'title' =&gt; 'My title'),
 array('name' =&gt; 'Germany', 'value' =&gt; 'DE', 'class' =&gt; 'de-de', 'title' =&gt; 'Another title'),
);

### Attributes:

- `separator` - define the string in between the radio buttons
- `between` - the string between legend and input set or array of strings to insert
   strings between each input block
- `legend` - control whether or not the widget set has a fieldset &amp; legend
- `value` - indicate a value that is should be checked
- `label` - boolean to indicate whether or not labels for widgets show be displayed
- `hiddenField` - boolean to indicate if you want the results of radio() to include
   a hidden input with a value of ''. This is useful for creating radio sets that non-continuous
- `disabled` - Set to `true` or `disabled` to disable all the radio buttons.
- `empty` - Set to `true` to create an input with the value '' as the first option. When `true`
  the radio label will be 'empty'. Set this option to a string to control the label value.</long-description>
          <tag name="param" line="218" description="&lt;p&gt;Name of a field, like this &quot;Modelname.fieldname&quot;&lt;/p&gt;" type="string" variable="$fieldName">
            <type>string</type>
          </tag>
          <tag name="param" line="218" description="&lt;p&gt;Array of HTML attributes, and special attributes above.&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="218" description="Completed radio widget set." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="218" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#options-for-select-checkbox-and-radio-inputs" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#options-for-select-checkbox-and-radio-inputs"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fieldName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="249" package="NetCommons\NetCommons\View\Helper">
        <name>wysiwyg</name>
        <full_name>\NetCommonsFormHelper::wysiwyg()</full_name>
        <docblock line="249">
          <description>Overwrite FormHelper::input($fieldName, array('type' =&gt; 'textarea'))</description>
          <long-description></long-description>
          <tag name="param" line="249" description="&lt;p&gt;Name of a field, like this &quot;Modelname.fieldname&quot;&lt;/p&gt;" type="string" variable="$fieldName">
            <type>string</type>
          </tag>
          <tag name="param" line="249" description="&lt;p&gt;Array of HTML attributes, and special attributes above.&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="249" description="Completed radio widget set." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="249" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#options-for-select-checkbox-and-radio-inputs" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#options-for-select-checkbox-and-radio-inputs"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fieldName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="272" package="NetCommons\NetCommons\View\Helper">
        <name>__call</name>
        <full_name>\NetCommonsFormHelper::__call()</full_name>
        <docblock line="272">
          <description>FormHelperラップ用マジックメソッド。</description>
          <long-description></long-description>
          <tag name="param" line="272" description="&lt;p&gt;メソッド&lt;/p&gt;" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="272" description="&lt;p&gt;パラメータ&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="272" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/NetCommons/View/Helper/BackToPageHelper.php" generated-path="Plugin.NetCommons.View.Helper.BackToPageHelper.html" hash="ec4be95eae6df2be1e43c1eaa08f89bc" package="Default">
    <docblock line="0">
      <description>後で削除
BackToPageHelper Helper</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="AllCreator co. &lt;info@allcreator&gt;"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="NetCommons\NetCommons\View\Helper">
      <extends>\AppHelper</extends>
      <name>BackToPageHelper</name>
      <full_name>\BackToPageHelper</full_name>
      <docblock line="21">
        <description>BackToPageHelper Helper</description>
        <long-description>Add your application-wide methods in the class below, your helpers
will inherit them.</long-description>
        <tag name="author" line="21" description="AllCreator co. &lt;info@allcreator&gt;"/>
        <tag name="package" line="21" description="NetCommons\NetCommons\View\Helper"/>
        <tag name="inherited_from" description="\AppHelper" refers="\AppHelper" link="/classes/AppHelper.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="31" package="NetCommons\NetCommons\View\Helper">
        <name>backToPageButton</name>
        <full_name>\BackToPageHelper::backToPageButton()</full_name>
        <docblock line="31">
          <description>backToPageButton Go back to the page where the plugin has been first displayed</description>
          <long-description></long-description>
          <tag name="param" line="31" description="&lt;p&gt;Title string to be displayed on the button&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="31" description="&lt;p&gt;Icon to be displayed on the button (only to specify the last keyword of gliphs of bootstrap components)&lt;/p&gt;" type="string" variable="$icon">
            <type>string</type>
          </tag>
          <tag name="param" line="31" description="&lt;p&gt;'' is the default size : lg / sm / xs&lt;/p&gt;" type="string" variable="$size">
            <type>string</type>
          </tag>
          <tag name="return" line="31" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$icon</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$size</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJyNUsFuEzEQPXe/YqgqbVIlu4A4pWloWiFAQlUPpRdaIWczu+vGsY09SxpQDxxB/AB3JP6Cn0E98BfY3s02pQX1EGc8fvPe81sPn+pSR+n2dgTbcPXz669PP64+f/n97bvf77NsdqyOWIEvUGg0UP+5I3+6xyoqlYFDZfhMwdgwDkPm1j3JecKy5FyP1nFjIQ4MMnJlphIYcpmrPSZEVjdrrOByBiWRHqTpYrFIJFKm5nMlbaJMAYdIB/UWjow6x4yaqQylxX8Ppg0ioQtaJ3lVtwNJpvTS8KIkOGirxw8fPendrZpG0VjrwaCyaDuxK+tw4h7EJxwXabPt7kSreO8X571i0o7K8aw5O10rvf5pS55GmWDW3pbHC0I5tdB6h4+t10kL3q+IlITnKvSAFFCJoL36okSD9VZUBZdQMgsTRAk5N5Zgyq0WbInT1RW1ex5zsGS4LGCLOAmE47A2Pcc+wes5cMKefhI83EHBM4d46Zf/TkJHSbH0GKsx4/kynLlUCGa4XCjj8DkUguvS+mqiFDkJpt0nmGslUZLt3iFv+QcEiGPgNjBOMWeVIAj9AYgCUrBzt1zYMG2QKiOb8fBpNnQ1cW8T8kpmxJ3Tv4Pv1DH1mrvuOrVeI+zrrvtmGxs8hw63FsmhS277I4PvKrTUHwW/9k3cNHAan3XrmY3GTBzvuN2l+22R0q+NcLwNy1v/kPqj9249YcaxZExmKBwmPvNDwdIzgXOXT3Cz03ipvT64NngLOrSaSQgPc3ezEEtdhpG26seQNFdOIN4cDVM/MLr26hMYE5mbuiGXG7rruAk1vL7ZMpU0F8ESW/lxOPDY1edsZwKR9wOlwXx3Mw0nTWzBZ2t7dddk9c7d8TBl/gZRm33QdkYuo8voD4DhyNE=</source>
  </file>
  <file path="Plugin/NetCommons/View/Helper/ButtonHelper.php" generated-path="Plugin.NetCommons.View.Helper.ButtonHelper.html" hash="9b61ce65bf08f4ec0b2b057ac960328b" package="Default">
    <docblock line="0">
      <description>Button Helper</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="NetCommons\NetCommons\View\Helper">
      <extends>\FormHelper</extends>
      <name>ButtonHelper</name>
      <full_name>\ButtonHelper</full_name>
      <docblock line="19">
        <description>Button Helper</description>
        <long-description></long-description>
        <tag name="package" line="19" description="NetCommons\NetCommons\View\Helper"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="26" package="NetCommons\NetCommons\View\Helper">
        <name>$helpers</name>
        <full_name>\ButtonHelper::helpers</full_name>
        <default>array('Form', 'Html', 'NetCommons.BackTo', 'NetCommons.NetCommonsHtml')</default>
        <docblock line="26">
          <description>Other helpers used by FormHelper</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="42" package="NetCommons\NetCommons\View\Helper">
        <name>addLink</name>
        <full_name>\ButtonHelper::addLink()</full_name>
        <docblock line="42">
          <description>Creates a `&lt;a&gt;` tag for add link. The type attribute defaults</description>
          <long-description></long-description>
          <tag name="param" line="42" description="&lt;p&gt;The button's caption. Not automatically HTML encoded&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="42" description="&lt;p&gt;Link url&lt;/p&gt;" type="mixed" variable="$url">
            <type>mixed</type>
          </tag>
          <tag name="param" line="42" description="&lt;p&gt;Array of options and HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="42" description="A HTML button tag." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="42" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="105" package="NetCommons\NetCommons\View\Helper">
        <name>editLink</name>
        <full_name>\ButtonHelper::editLink()</full_name>
        <docblock line="105">
          <description>Creates a `&lt;a&gt;` tag for edit link link. The type attribute defaults</description>
          <long-description></long-description>
          <tag name="param" line="105" description="&lt;p&gt;The button's caption. Not automatically HTML encoded&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="105" description="&lt;p&gt;Link url&lt;/p&gt;" type="mixed" variable="$url">
            <type>mixed</type>
          </tag>
          <tag name="param" line="105" description="&lt;p&gt;Array of options and HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="105" description="A HTML button tag." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="105" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="164" package="NetCommons\NetCommons\View\Helper">
        <name>delete</name>
        <full_name>\ButtonHelper::delete()</full_name>
        <docblock line="164">
          <description>Creates a `&lt;button&gt;` tag. The type attribute defaults to `type="submit"`
You can change it to a different value by using `$options['type']`.</description>
          <long-description>### Options:

- `escape` - HTML entity encode the $title of the button. Defaults to false.

### Original options
- `confirm` - Add javascript confirm in onclick attribute</long-description>
          <tag name="param" line="164" description="&lt;p&gt;The button's caption. Not automatically HTML encoded&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="164" description="&lt;p&gt;Confirm message by button click&lt;/p&gt;" type="string" variable="$confirm">
            <type>string</type>
          </tag>
          <tag name="param" line="164" description="&lt;p&gt;Array of options and HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="164" description="A HTML button tag." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="164" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$confirm</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="208" package="NetCommons\NetCommons\View\Helper">
        <name>save</name>
        <full_name>\ButtonHelper::save()</full_name>
        <docblock line="208">
          <description>Creates a `&lt;button&gt;` tag. The type attribute defaults to `type="submit"`
You can change it to a different value by using `$options['type']`.</description>
          <long-description>### Options:

- `escape` - HTML entity encode the $title of the button. Defaults to false.

### Original options
- `confirm` - Add javascript confirm in onclick attribute</long-description>
          <tag name="param" line="208" description="&lt;p&gt;The button's caption. Not automatically HTML encoded&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="208" description="&lt;p&gt;Array of options and HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="208" description="A HTML button tag." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="208" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="239" package="NetCommons\NetCommons\View\Helper">
        <name>cancel</name>
        <full_name>\ButtonHelper::cancel()</full_name>
        <docblock line="239">
          <description>Creates a `&lt;button&gt;` tag. The type attribute defaults to `type="submit"`
You can change it to a different value by using `$options['type']`.</description>
          <long-description>### Options:

- `escape` - HTML entity encode the $title of the button. Defaults to false.

### Original options
- `url` - The url in onclick attribute</long-description>
          <tag name="param" line="239" description="&lt;p&gt;The button's caption. Not automatically HTML encoded&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="239" description="&lt;p&gt;The url in onclick attribute&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="239" description="&lt;p&gt;Array of options and HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="239" description="A HTML button tag." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="239" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="257" package="NetCommons\NetCommons\View\Helper">
        <name>cancelAndSave</name>
        <full_name>\ButtonHelper::cancelAndSave()</full_name>
        <docblock line="257">
          <description>Creates a `&lt;button&gt;` tag for cacnel and save.</description>
          <long-description></long-description>
          <tag name="param" line="257" description="&lt;p&gt;The button's caption. Not automatically HTML encoded&lt;/p&gt;" type="string" variable="$cancelTitle">
            <type>string</type>
          </tag>
          <tag name="param" line="257" description="&lt;p&gt;The button's caption. Not automatically HTML encoded&lt;/p&gt;" type="string" variable="$saveTitle">
            <type>string</type>
          </tag>
          <tag name="param" line="257" description="&lt;p&gt;The url in onclick attribute&lt;/p&gt;" type="string" variable="$cancelUrl">
            <type>string</type>
          </tag>
          <tag name="param" line="257" description="&lt;p&gt;Array of options and HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="257" description="A HTML button tag." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="257" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$cancelTitle</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saveTitle</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$cancelUrl</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/NetCommons/View/Helper/BackToHelper.php" generated-path="Plugin.NetCommons.View.Helper.BackToHelper.html" hash="a72ffbd3a8f0be5ec2b067e8abeebaab" package="Default">
    <docblock line="0">
      <description>BackTo Helper</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="NetCommons\NetCommons\View\Helper">
      <extends>\AppHelper</extends>
      <name>BackToHelper</name>
      <full_name>\BackToHelper</full_name>
      <docblock line="20">
        <description>BackTo Helper</description>
        <long-description>Add your application-wide methods in the class below, your helpers
will inherit them.</long-description>
        <tag name="author" line="20" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="20" description="NetCommons\NetCommons\View\Helper"/>
        <tag name="inherited_from" description="\AppHelper" refers="\AppHelper" link="/classes/AppHelper.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="NetCommons\NetCommons\View\Helper">
        <name>$helpers</name>
        <full_name>\BackToHelper::helpers</full_name>
        <default>array('Html', 'Form')</default>
        <docblock line="27">
          <description>Other helpers used by HtmlHelper</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="NetCommons\NetCommons\View\Helper">
        <name>button</name>
        <full_name>\BackToHelper::button()</full_name>
        <docblock line="48">
          <description>Creates a `&lt;button&gt;` tag. The type attribute defaults to `type="submit"`
You can change it to a different value by using `$options['type']`.</description>
          <long-description>### Options:

  `escape` - HTML entity encode the $title of the button. Defaults to false.

### Original options
  `url` - The url in onclick attribute
 `icon` - Icon to be displayed on the button (only to specify the last keyword of gliphs of bootstrap components)
 `iconSize` - '' is the default size : lg / sm / xs</long-description>
          <tag name="param" line="48" description="&lt;p&gt;The button's caption. Not automatically HTML encoded&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="48" description="&lt;p&gt;The url in onclick attribute&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="48" description="&lt;p&gt;Array of options and HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="48" description="A HTML button tag." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="48" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="92" package="NetCommons\NetCommons\View\Helper">
        <name>linkButton</name>
        <full_name>\BackToHelper::linkButton()</full_name>
        <docblock line="92">
          <description>backToPageButton Go back to the page where the plugin has been first displayed
  #### Original options
   `icon` - Icon to be displayed on the button (only to specify the last keyword of gliphs of bootstrap components)
   `iconSize` - '' is the default size : lg / sm / xs</description>
          <long-description></long-description>
          <tag name="param" line="92" description="&lt;p&gt;Title string to be displayed on the button&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="92" description="&lt;p&gt;Link url&lt;/p&gt;" type="mixed" variable="$url">
            <type>mixed</type>
          </tag>
          <tag name="param" line="92" description="&lt;p&gt;Array of options and HTML arguments.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="92" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="127" package="NetCommons\NetCommons\View\Helper">
        <name>pageLinkButton</name>
        <full_name>\BackToHelper::pageLinkButton()</full_name>
        <docblock line="127">
          <description>backToPageButton Go back to the page where the plugin has been first displayed</description>
          <long-description></long-description>
          <tag name="param" line="127" description="&lt;p&gt;Title string to be displayed on the button&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="127" description="&lt;p&gt;Array of options and HTML arguments.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="127" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="140" package="NetCommons\NetCommons\View\Helper">
        <name>indexLinkButton</name>
        <full_name>\BackToHelper::indexLinkButton()</full_name>
        <docblock line="140">
          <description>backToPageButton Go back to the page where the plugin has been first displayed</description>
          <long-description></long-description>
          <tag name="param" line="140" description="&lt;p&gt;Title string to be displayed on the button&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="140" description="&lt;p&gt;Plugin table's default action field. The value is &quot;default_action&quot; or &quot;default_setting_action&quot;&lt;/p&gt;" type="string" variable="$defaultField">
            <type>string</type>
          </tag>
          <tag name="param" line="140" description="&lt;p&gt;Array of options and HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="140" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$defaultField</name>
          <default>'default_action'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJztV0FvG0UUPtu/4jWJuk4V75aKkxubpoWSSqGJ1ICE2gqP12Pv1Ls7q5nZOgblQMqF/9ALEmcuiAsXfowl+Bu8NzO7WSdOW0oBIbjYs29m3vvmm/e+t7v7QZEU7ejGjTbcgLssnh1L2OdpwRUayHaHlSaRCh5KJWYS9hQTsMvw904uRMji8FkxaK57lMiEC3jIZuyZyBjs5n6kE1nizJ1pxkQaxjJz21KRzyAxpuhF0Xw+D3NucC6TuQ6lmsJDbu65RzhS8hmPjd8V81zzqzdGfkVoTkzTyYEzWyexLBZKTBMD9+rRrZvvvb+zPmrUbu8VRa9Xaq47AQ4dT8EOBJ8JPo/84/bt9pvw+Ud5KtAXm/IGtCeNIQF4UseJ2nHKtPbxnRn4ieH5WEMNHL6qgR6aBJ8Ta9aABxzDaAH7JktXsT9nCphSbGGDtIpyhDTDVrWx7yY7Ae0kXu5LlTUJuac4M1wDg+HuqDRG5oMhGDYN4TjhYBYFB2aMEjjHYcwnrEyNBiNhSHP9DV2OMmE2huTrc1lCzHKIE5YjL8LQOgZjMZlwxXMDz1lacjpHqUU+heGWLIxAsh4H5Cx4Ogz9sTY3N+HQzfW8CWDIdcwKPoQu7B9/cgDoUZgF/sVyjFAR7hYaUg5yYp/ccUL4sIF6wlLMwGYUTDKRsxQ8FB+qVCnFIQ5wCCIHmcfI7OycDVzZgqGIZU4rH+A/BRghS0IXKVvgjZGpBgIdmacLWqMLHovJws5hVhiY8cVcqjEBn6aiSDSNRlIabRQrADOukDkeV2+fB30kvrRUBAEIbV352wGNM9CDdAoR6Ax/TnSVLQXKRAbolej3bB3XCAON12dpCFFcDGBdyIwZEbMUgXvOiezxGmdE02voqrbYlITq8lHA6BFPXBlYPnbR6s06tNsVN6XKq5B7bpFnl3L2knwhh7MwZjOOkmo16FZ4M+J5FEvFu6kYKaYE15GvlmiCxREmWCmbVCau0Ho9F2ClviZlHhNWH7zjqNyxLOycn6yqvu1trOxWK4ro4pZf//Dry29/++Y7tGyR4aOUZ1QdfbzL22gUE+hcw0vV3HTOK4RWBk+9p9ZFO21WPJPPuXVx6t1cWnatT1EqJxei7+qCqpeEqr8xTRdFQgugHnUDCCG5jAmtwcZgN6LtA7AAWmW+Fn4FLoqWL14uz35ZvvhxefbT8uz75dnPxAfl7h7e+goZ66ig9KfQ16/DuokLB224TTrByLijrPV4JfrG/GmbsPp6O7xw2bTf6Rn0kQ1fWjvWbLn1doPZg0CqqqUxisBskso5WHQVaLc1n3ZRWNgo5WPnQGPvwDKwnrcrqigBq0NfwrePnazXy7ia8s6F2Z0GeBvLVu9KoL5RJXfnaAW+vN2CVMbMqkai+ATjPAksfpMI3R1Q4+kOEJbHhrmC8+Rlu86GLZEX5ZsCrW6Fmlir5SXBB6Oy7Q6qomymdwh1jTaDEYTTuhmObHc+wqZ+14nKx9LaSLRJYQtq93NszK7dFGmJvQMSplH2eQ4ToVDMa/l3rWTzii7TojbzT3QPeNf9w/562yvP0HCRiROctU3jgPQaB2/VINS0pOtd1x/WCzZ1h7v/i/Z/VrRfoTQN+XZvmjazrcTZ18bXSviKapMqXxQrlyQrGB6vxHpand2VFh3cDes7WNU7J66U01eqnUvuv1Hz3q1Q/IVSQCc7WCMHVwiBFat+42vvU5Xiy2FNHz527DWtXtFrBedfdR2VC5/y9wVPx3DkQBh6OcFviKocmKN5Qmvc56T7/sN2s+HXfOHWbAB+ftc2rGKDQaq5d/7hsD4bRD7mJ+vSYeWoqE+r0IO3S5gHFI0yZsX9n0if0/bvF9Dxkg==</source>
  </file>
  <file path="Plugin/NetCommons/View/Helper/DisplayNumberHelper.php" generated-path="Plugin.NetCommons.View.Helper.DisplayNumberHelper.html" hash="34d8e9697a5515e6ed2dabda850abdee" package="Default">
    <docblock line="0">
      <description>DisplayNumber Helper</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="NetCommons\NetCommons\View\Helper">
      <extends>\AppHelper</extends>
      <name>DisplayNumberHelper</name>
      <full_name>\DisplayNumberHelper</full_name>
      <docblock line="19">
        <description>DisplayNumber Helper</description>
        <long-description>Add your application-wide methods in the class below, your helpers
will inherit them.</long-description>
        <tag name="package" line="19" description="NetCommons\NetCommons\View\Helper"/>
        <tag name="inherited_from" description="\AppHelper" refers="\AppHelper" link="/classes/AppHelper.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="26" package="NetCommons\NetCommons\View\Helper">
        <name>$helpers</name>
        <full_name>\DisplayNumberHelper::helpers</full_name>
        <default>array('Form', 'Html', 'NetCommons.Button', 'NetCommons.NetCommonsForm')</default>
        <docblock line="26">
          <description>Other helpers used by FormHelper</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="NetCommons\NetCommons\View\Helper">
        <name>$displayNumberOptions</name>
        <full_name>\DisplayNumberHelper::displayNumberOptions</full_name>
        <default>array(1, 5, 10, 20, 50, 100)</default>
        <docblock line="38">
          <description>listStyle</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="46" package="NetCommons\NetCommons\View\Helper">
        <name>__getOptions</name>
        <full_name>\DisplayNumberHelper::__getOptions()</full_name>
        <docblock line="46">
          <description>Get display number options</description>
          <long-description></long-description>
          <tag name="param" line="46" description="&lt;p&gt;Array of HTML attributes, and special attributes above.&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="46" description="Completed radio widget set." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="81" package="NetCommons\NetCommons\View\Helper">
        <name>select</name>
        <full_name>\DisplayNumberHelper::select()</full_name>
        <docblock line="81">
          <description>Setting display number</description>
          <long-description></long-description>
          <tag name="param" line="81" description="&lt;p&gt;Name of a field, like this &quot;Modelname.fieldname&quot;&lt;/p&gt;" type="string" variable="$fieldName">
            <type>string</type>
          </tag>
          <tag name="param" line="81" description="&lt;p&gt;Array of HTML attributes, and special attributes above.&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="81" description="Completed radio widget set." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fieldName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="101" package="NetCommons\NetCommons\View\Helper">
        <name>dropDownToggle</name>
        <full_name>\DisplayNumberHelper::dropDownToggle()</full_name>
        <docblock line="101">
          <description>Output display number drop down toggle</description>
          <long-description></long-description>
          <tag name="param" line="101" description="&lt;p&gt;Array of options and HTML arguments.&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="101" description="HTML tags" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJzNVltv2zYUfrZ+xVnhQUqgyPGwvbixl6zFlofUKZBiL2lh0NKxxFgiBZKKawz57+NFtqRajvPYF4Eiz+X7zo28+rPMSm90fu7BOXyksszJdl4VSxRwi3mJQu+bo2tSqYwLmHNB1xxuBKFwRfT3mlEakTh6KmdtuYeMZ0hhTtbkiRYErli9khmv9Ml1WhCaRzEvnFpO2RoypcrJaLTZbCKGSp8VnMmIixTmqD64X/gs+BPGqtaKkUk8rjiqJSL1XbWN3LltayTm5VbQNFPwYb/67XL8e9jvdeR5N2U5mVQSZeDrpYuTH4L/L8XNqP49e++9JawlidckxZarr62lMfh1rzDy4pxI2bXnTgG/K2SJhD0e+G/v/15l+j+z2xI07gSWW/ibi6KL5ZkIIEKQrfU1KKuljh4Md4pTdxh4g4FvlP3QrG5VkbtVgzv6q1KKs4PtZmn1vUErSDmV6kFtczyBJmmTvy8VNdnZQRuH8EcI48tQJ1AvL836suXkH1RQGwDm0sGdiSYfghTOGgyJUoIuK4U6rnaHr+D2y6c7aA5CICwBWWJMSd7aB7LkzxhZmwJVJRhIfcZSXWRFmaPSSRAkoRw2NEk1LIkqqpkK+kwUwqpiscEGi4UWqKkGbVA72mdnOtuDwZD/EA7NfDCgKwh+ASq1g7byo19L+99q9eOSFaOqERv0nD36UnPL0f+mnS8WSeDrPlzUjWha41cJVGHhW0hHTBRVrmh52oisrbwA5hINaioXLrqv4zb/2nSPzFFU3Vie5m59vJVjI/zime+KCyRxBsFQZVRezHprnUgYPpO8wh0tEwC3A9PpFMa7fcf3jiwx7yfdAHeAXTzfrt1wqfUd7bquHh0mw1PqkmZqFTQmwx2Hmn3XeauQ+yvWaNmQ1a21U9D7L/tmf0ClTMN1G77b6HVPDlcU82ROCj2IzUf3OQG7F+rBtEYw+YB3n3iCOdMCkT0zq3c/zdRw83E/NCTm+r4KGmYhvDY6esNs4u8q8dgI2k+Yk1OjYscE9skcJrgiuqZuDmEaC77alujDdAa+I2fvF6veZXarHxmTSYEixeDQZicO5m5oqshx7d5SFzPKyupoIM86JXdfKS374xWTCF5CwjcMFE/T5oY7WTW7NjDF4ipIpFWBTMm+ErESiqSyvyAMio8axBeL4dV75GcohqOXUVwJoUNwR4u2xVdEWsDNe+pi9pmklBHFxcXMpiDwcyv5BueVyFs+zQBITprXalawHpNO69Ev9bPPgvPH/vsDCtaRMW2lD+Zdx6FuBlMUQfupZRktTM5N4S1c4ek7tNVOfbeLba/+/IdWqRPaA+Fu4J2GYXIgaOnZ9q0b6MX7HxvnCNM=</source>
  </file>
  <file path="Plugin/NetCommons/View/Helper/ComposerHelper.php" generated-path="Plugin.NetCommons.View.Helper.ComposerHelper.html" hash="33e0dc58ac131895e69723173f132ee3" package="Default">
    <docblock line="0">
      <description>Composer helper</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="NetCommons\NetCommons\View\Helper">
      <extends>\AppHelper</extends>
      <name>ComposerHelper</name>
      <full_name>\ComposerHelper</full_name>
      <docblock line="21">
        <description>Composer helper</description>
        <long-description>Add your application-wide methods in the class below, your helpers
will inherit them.</long-description>
        <tag name="author" line="21" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="21" description="NetCommons\NetCommons\View\Helper"/>
        <tag name="inherited_from" description="\AppHelper" refers="\AppHelper" link="/classes/AppHelper.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="28" package="NetCommons\NetCommons\View\Helper">
        <name>$helpers</name>
        <full_name>\ComposerHelper::helpers</full_name>
        <default>array('Html')</default>
        <docblock line="28">
          <description>use helpers</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="" line="37" package="NetCommons\NetCommons\View\Helper">
        <name>$__plugins</name>
        <full_name>\ComposerHelper::__plugins</full_name>
        <default></default>
        <docblock line="37">
          <description>Plugin composer data</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="45" package="NetCommons\NetCommons\View\Helper">
        <name>__getComposer</name>
        <full_name>\ComposerHelper::__getComposer()</full_name>
        <docblock line="45">
          <description>Get the composer.json</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;Plugin path&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="return" line="45" description="Composer value" type="string|array">
            <type>string</type>
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="60" package="NetCommons\NetCommons\View\Helper">
        <name>getComposer</name>
        <full_name>\ComposerHelper::getComposer()</full_name>
        <docblock line="60">
          <description>Get the composer.json init function</description>
          <long-description></long-description>
          <tag name="param" line="60" description="&lt;p&gt;Plugin path&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="param" line="60" description="&lt;p&gt;composer key&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="60" description="Composer value" type="string|array">
            <type>string</type>
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="79" package="NetCommons\NetCommons\View\Helper">
        <name>getAuthors</name>
        <full_name>\ComposerHelper::getAuthors()</full_name>
        <docblock line="79">
          <description>Get the container size for layout</description>
          <long-description></long-description>
          <tag name="param" line="79" description="&lt;p&gt;Plugin path&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="param" line="79" description="&lt;p&gt;Option data&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="79" description="Composer value" type="string|array">
            <type>string</type>
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="115" package="NetCommons\NetCommons\View\Helper">
        <name>getDescription</name>
        <full_name>\ComposerHelper::getDescription()</full_name>
        <docblock line="115">
          <description>Get the container size for layout</description>
          <long-description></long-description>
          <tag name="param" line="115" description="&lt;p&gt;Plugin path&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="Composer value" type="string|array">
            <type>string</type>
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJytVt+T2jYQfoa/Qr1hYnMF3HbyxIGbzGXa67ST3kyvfSE3HsUWWIeQPJIMISn/e1e/bEMhN2n6Asa7++3u961WzH6syqqfXF/30TW6FZtKKCJRSVhFJLwyb1/lotpLuio1OISnH777/uUIvSUaYjaCK3QvxRPJtQ3AtS6FRL+KklD0QCRe1XlJ0WytwzNg2jBO9ETIVWrDGOVrVGpdTZNkt9tNwOjdjM+lZIzmhCtyOTDxHhP9QXdBfnOvASTp919X1XRaK6LiCB7vbP/RCEV/UbJL/M/hTdftJ8qI8fhTU0b1/sR6i9fkntUryo3PrZDEODxDtOftj9IS9xav8RPdYDTj/kmVogbLq9UGUzaBFh1vFc7XeEU6vb3rPJoO3t2FPEk/Z1ippgJnQOSDJrxQqOkdfWqKrQ259qUKhW6xRFhKvLeIvap+DxyjgfdCc2eM+71edKc3LOr3Os07WlAeOCiwxpeAJd1iTdAgyyobpVqYn4lGuiQNzuRJCR5wKizxBiktKV+hgYsNiSusS+skia4l915/27StMlvManJcxbLmuaaCoyxbWX6tZ+zhh0BZrzdYwljcQwYgoZ2B6dQkjX/hSwZjK+R0muMNYfQjaaKHaIKio16im4AHWJzskJm4uEkwtOZccFBOG86tZZxKgot42MSO05wBpH+jS6rGacPmwmd/hHCTMitILgpIEmBHSMuamNjD54lHlFPdMPRFMhw7rcm+HQ348WVKuUFshDoj08ilAEZrxpxmdInibxBViuj4IkND59tSeG4EDMcHJ4svDmS5hHjTSZ2ZamJTWcjjW26QFsZoYw6IMDiSZ718AefE4hpTDhUpmDq0hDXD8F7U+j9I5fgfiMpwrNDv9jsc468S67VdgKqjVUgSVoqnZ+BWpWr5PSt15N0iN/0B7NuAFsFue8CrCM3TZtC9JsF5EXweT4Tx0I5x+EiSQQm7DiqKZjVDds3OrxhVekw5XG0EqQ1mDC2BQjLGRTF2VV6l7qCH4M6vSdOd2aLjVONVHDFqbpQZ0CtAKZ+mfAkwsEGyrIgjh5ttMIdbwd5ijtdYDSO7ZmaJi07B5omwOJaHqJCiKsSOj0vYJObas6yE9j5T03k0uqUtCswdwXmJ4kZArAKV4YBx4Kchwqrhj6ZzW0RSwM0Lcrx4YYZMCyZ2RvRT83wOIAXZEibs7e3ge42fyROZzVfGJ++AJOsK1xeaqQrzQLNV8Co9eqfh7hwXmAPVVgMf2bsgxeJNqOgx6uQBSQAz9V+u9cOF/kuxIRXgRc1S8qSdamP+UJ32NkJncBrhNJZwkJxy2XuG+drUTFSOK/JANRBrTEsMC8gJerSN2jL+TWnb0XNzZEHaVRq8gaKaOWbCETSmC1fT/7HtvmKRvQHKJLUb5OT/QdFanlteHVe3wHxBZWxmq92RHb+hv6oP/X8A2G++rg==</source>
  </file>
  <file path="Plugin/NetCommons/View/Helper/SingletonViewBlockHtmlHelper.php" generated-path="Plugin.NetCommons.View.Helper.SingletonViewBlockHtmlHelper.html" hash="f7ccdc5e1a2a05e8669d205aba0c7f4a" package="Default">
    <docblock line="0">
      <description>Singleton ViewBlock Html Helper class file.</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="18" package="Default">
      <extends>\HtmlHelper</extends>
      <name>SingletonViewBlockHtmlHelper</name>
      <full_name>\SingletonViewBlockHtmlHelper</full_name>
      <docblock line="18">
        <description>SingletonViewBlockHtmlHelper</description>
        <long-description></long-description>
        <tag name="package" line="18" description="Default"/>
      </docblock>
      <property static="true" visibility="private" namespace="" line="25" package="Default">
        <name>$__staticViewBlock</name>
        <full_name>\SingletonViewBlockHtmlHelper::__staticViewBlock</full_name>
        <default>null</default>
        <docblock line="25">
          <description>The same ViewBlock instance this helper is attached to</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\View" variable="">
            <type>\View</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="33" package="Default">
        <name>$__staticIncludedAssets</name>
        <full_name>\SingletonViewBlockHtmlHelper::__staticIncludedAssets</full_name>
        <default>array()</default>
        <docblock line="33">
          <description>Names of script &amp; css files that have been included once
If CakePHP less than 2.6.0, css is not implemented</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Default">
        <name>__construct</name>
        <full_name>\SingletonViewBlockHtmlHelper::__construct()</full_name>
        <docblock line="43">
          <description>Constructor</description>
          <long-description>Set static View instance and _includedAssets property after parent::__construct</long-description>
          <tag name="param" line="43" description="&lt;p&gt;The View this helper is being attached to.&lt;/p&gt;" type="\View" variable="$View">
            <type>\View</type>
          </tag>
          <tag name="param" line="43" description="&lt;p&gt;Configuration settings for the helper.&lt;/p&gt;" type="array" variable="$settings">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$View</name>
          <default></default>
          <type>\View</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="64" package="Default">
        <name>__copyBlockValue</name>
        <full_name>\SingletonViewBlockHtmlHelper::__copyBlockValue()</full_name>
        <docblock line="64">
          <description>Copy block value</description>
          <long-description></long-description>
          <tag name="param" line="64" description="&lt;p&gt;Source of copy block&lt;/p&gt;" type="\ViewBlock" variable="$sourceBlock">
            <type>\ViewBlock</type>
          </tag>
          <tag name="param" line="64" description="&lt;p&gt;Destination of copy block&lt;/p&gt;" type="\ViewBlock" variable="$destinationBlock">
            <type>\ViewBlock</type>
          </tag>
          <tag name="param" line="64" description="&lt;p&gt;Copy key&lt;/p&gt;" type="array|string" variable="$blockKeys">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="64" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sourceBlock</name>
          <default></default>
          <type>\ViewBlock</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$destinationBlock</name>
          <default></default>
          <type>\ViewBlock</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blockKeys</name>
          <default>array()</default>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="92" package="Default">
        <name>meta</name>
        <full_name>\SingletonViewBlockHtmlHelper::meta()</full_name>
        <docblock line="92">
          <description>View object changed to static View instance for used same BlockView instance</description>
          <long-description></long-description>
          <tag name="param" line="92" description="&lt;p&gt;The title of the external resource&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="92" description="&lt;p&gt;The address of the external resource or string for content attribute&lt;/p&gt;" type="string|array" variable="$url">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="92" description="&lt;p&gt;Other attributes for the generated tag. If the type attribute is html,&#10;rss, atom, or icon, the mime-type is returned.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="92" description="A completed `&lt;link /&gt;` element." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="92" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/html.html#HtmlHelper::meta" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/html.html#HtmlHelper::meta"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>null</default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="Default">
        <name>css</name>
        <full_name>\SingletonViewBlockHtmlHelper::css()</full_name>
        <docblock line="110">
          <description>View object changed to static View instance for used same BlockView instance</description>
          <long-description></long-description>
          <tag name="param" line="110" description="&lt;p&gt;The name of a CSS style sheet or an array containing names of&#10;CSS stylesheets. If &lt;code&gt;$path&lt;/code&gt; is prefixed with '/', the path will be relative to the webroot&#10;of your application. Otherwise, the path will be relative to your CSS path, usually webroot/css.&lt;/p&gt;" type="string|array" variable="$path">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="110" description="&lt;p&gt;Array of options and HTML arguments.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="110" description="CSS &lt;link /&gt; or &lt;style /&gt; tag, depending on the type of link." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="110" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/html.html#HtmlHelper::css" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/html.html#HtmlHelper::css"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="130" package="Default">
        <name>script</name>
        <full_name>\SingletonViewBlockHtmlHelper::script()</full_name>
        <docblock line="130">
          <description>View object changed to static View instance for used same BlockView instance</description>
          <long-description></long-description>
          <tag name="param" line="130" description="&lt;p&gt;String or array of javascript files to include&lt;/p&gt;" type="string|array" variable="$url">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;Array of options, and html attributes see above. If boolean sets $options['inline'] = value&lt;/p&gt;" type="array|boolean" variable="$options">
            <type>array</type>
            <type>boolean</type>
          </tag>
          <tag name="return" line="130" description="String of `&lt;script /&gt;` tags or null if $inline is false or if $once is true and the file has been&#10;  included before." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="link" line="130" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/html.html#HtmlHelper::script" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/html.html#HtmlHelper::script"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array|boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="150" package="Default">
        <name>scriptBlock</name>
        <full_name>\SingletonViewBlockHtmlHelper::scriptBlock()</full_name>
        <docblock line="150">
          <description>View object changed to static View instance for used same BlockView instance</description>
          <long-description></long-description>
          <tag name="param" line="150" description="&lt;p&gt;The script to wrap&lt;/p&gt;" type="string" variable="$script">
            <type>string</type>
          </tag>
          <tag name="param" line="150" description="&lt;p&gt;The options to use. Options not listed above will be&#10;   treated as HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="150" description="string or null depending on the value of `$options['block']`" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="link" line="150" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/html.html#HtmlHelper::scriptBlock" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/html.html#HtmlHelper::scriptBlock"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$script</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>eJzlWEtzGzcMPtu/Ap1qKimzWrmZTg+Kq9Z1D84kTTPjTC6ZjEytIC3j3eWW5EpRm/z3AiT3oZfTHpIc6oPNJQEQBL8PAH35c5mW5+NHj87hEdzKYpWhVQW8lrj5NVPJPdzYPIMbzErUkGTCGFjKDGMSZ41fElVutVylFq6b0eOL73+I4AXaa5XnqjDwUqt3mFinICqbKg3PVIoSXqEWqypJJVze23pMNp1agTZWejV1apks7iG1tpyMx5vNJqbFIMYypzbLZIKFwdOK4yAR2/e2a+S5nyYj4/Pzq7KcTCqDZtDnaPhg9CPoc5TG4XP45PwgjE0UWzUfN2fXR/MhYcD3FouFgc7U3802r1IEI3LsXJYsjBVFgmBTaSD1GjQS1ookxQVYVV/cWmin6Fw5K7VcC0v2rLAygd5s5ket6Z+gqLKsPeQL2tmAWoJJtCwtfAdJwIah3YWFVKwR5ogFeZVk1YJ2V+Qa6z5dwrW4x5c3L4HEnXwBj+Mf44vIWSGPC2VB5mWGORYWF12vhdZi+7DbT8OOV8agNeS70xl07uiabtnqKrEqXAncoq3t8KnbWIpiATO5a7HUikJrtyCWhFsohSY3J5PZLKnt1h7Tksi9xZ77zdfmBnt3NEdCQvem4o6+8x96tLclKcPuL+Wq0uQusbWZXhKzLNn3VuMQpGpOKIdlVSROuuPkoPUr6lhv4jUkuJ2dHTndYF+HQ3t2Jpcw+EZyiAYGs+VkcgikYPPs1Dpt3uPIjKYznhtN3ax5Qjofmy0wL+12EOQ0/lmhsaOpC5V50w8TuOi/rXerTc44XzmLr0VW4Ukvo6NODJ90bcl9kO0Z2wWhPwCfoUFguYW5O/KafTkEjI9Hz6hKJ+g/bt2YaZc06se1FhQBWTh8+Jnf2omT+u7aP9AVMxR7bvUZbo339R63TlSjrXQBayUXuyzcQdhOmI+fJnrI36i7/x4gA8xmfrKVa277ULMjFG7CWQlAOrAwHsM1JaUVZVJVVz9VsnMRkF5SGaty+Ree2I2nz/o5WtGP/JjSWj30CbPPH8MG1sRcJOJDxxcQBnoFpdn6VPshGk2ZaE4k2gnsaLqqF4bDA+A5zqs5F0lI3CE52xzPfZxQqPItfKHxN9oV2AVtDRy7LdHlOStt5tDKSYmLmS5EBhq9rweaH0Kaq3Tm1MViobk+nDIA5F3Ykx2l7ETl0nIO1XJeWTxMoP4ODfxB9nQr2GbOFRbUh1gOiVjFXKl41h2okeZsnVJFjtg+/WhjIlpVecQOyYRBwlq5zHHkVEnBswYXcZdDwfkrcp1rHW97d+lanfH0DtBXv/igAZordR8nVEGpd3NdzOP4YozFOCEQjTI510JLNGNfBegv+Rrzr2/bPmIyYXQeLxC8MnCXGPm78LU/asO3x8eeqizN1XViX79VdGBk3tHBMywGrDiEKVwEiIew8HTN0lOZ+1h+jvZTcCefezayA1+OCTWeS2FTB2hmJKNZwPXtLQltiR0mReo8yDr1QF6ecSxkwcgoQpflkdYoOR3j4HnnrN8xxEqNS/meXNxI2q8/7nsYut03MsuoxSAYZnS4tctrvLjBuVbKevvk2ZaIBaIsCRAu0cSeKhtp8BPWnCZ7yBIRxaoSWbatNxhTAjzS0NSAunKftH89wU3Xzavfn5PgqmIWmGPE4e1qvnAIL31I6YPYG8ECS2qfWZBQ3fCYdmGVz0QrOudxVtHCoOdj8y95dETDt1kPNhq10VmOenXQ4ezKtm3ObjPTdnNfgahcKr8OTznX3XpkqfDOYLS8E2sRXjnhfaPqN81B70QYyk7DOnK4Zsx0a49BKi5ztUZHaLaAwjX1prH0pi8Lgir239L11u1iw4bcsb72nHLCZXCXqwgxwfBxOIVz79LzljhhLEVmXBHlaX6c8ST19/7Nw4Th89JLzriHnE8SzWtujty0fCYa+QMcZ5JfG+yWlk9w6ajO/4FNodv8soSibtQD0P2Pwg/J/kaL8nQNYNl6TMK0JxWf8M3/Dsgkv+k8U+oKFDowS82zWzOhaDTkig95YhqGO0ocFAlHL0ejln2uKe+/vfucYP81PMZOIt4JDEJo/yPyT+h+zYZsB5kfz/8BrrvYnw==</source>
  </file>
  <file path="Plugin/NetCommons/View/Helper/DateHelper.php" generated-path="Plugin.NetCommons.View.Helper.DateHelper.html" hash="b82f08caea95a1038cdebe5dd33d5a8e" package="Default">
    <docblock line="0">
      <description>DateHelper Helper</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Kotaro Hokada" link="mailto:kotaro.hokada@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="NetCommons\NetCommons\View\Helper">
      <extends>\AppHelper</extends>
      <name>DateHelper</name>
      <full_name>\DateHelper</full_name>
      <docblock line="20">
        <description>DateHelper Helper</description>
        <long-description>Add your application-wide methods in the class below, your helpers
will inherit them.</long-description>
        <tag name="author" line="20" description="Kotaro Hokada" link="mailto:kotaro.hokada@gmail.com"/>
        <tag name="package" line="20" description="NetCommons\NetCommons\View\Helper"/>
        <tag name="inherited_from" description="\AppHelper" refers="\AppHelper" link="/classes/AppHelper.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="NetCommons\NetCommons\View\Helper">
        <name>$helpers</name>
        <full_name>\DateHelper::helpers</full_name>
        <default>array('Time')</default>
        <docblock line="27">
          <description>use helpers</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="37" package="NetCommons\NetCommons\View\Helper">
        <name>dateFormat</name>
        <full_name>\DateHelper::dateFormat()</full_name>
        <docblock line="37">
          <description>Date Format</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;datetime&lt;/p&gt;" type="\datetime" variable="$date">
            <type>\datetime</type>
          </tag>
          <tag name="return" line="37" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>\datetime</type>
        </argument>
      </method>
    </class>
    <source>eJyVUk1r3DAQPVu/YgoLdpbEaktP3s1mQ0IaaAk9hEAgF9WerBXbkpDG3YSy/z2y5TUmbPpxsefNvPfmw16emdIwPp8zmMOlILzG2qCF8PLJLr8WLZXawo22stJwboWEpfDPtZIyFXn6ZFZT3jdNwmq41pUoBCyrHqZlD9ebRsg6zXUTJLVUFZREJuN8u92mCsnXGq1cqu0GbpAuAoQfVj9hToMqR+XwfSEfGCk909Tke0j3Jrk2L1ZuSoKLMfr88dOX48NdOWPnxmRZ69AlsQ/DjeJjiO8kbvkAjxbsX+/5P3cyIq/EBiejPUzCboCHsQdneS2cm/bHZ0JVOBjHht/jmG13yD7p9gP+EhaEteKld4tM+9PfE2YDC05DMWFRFN/KBmMWvVkbrrRtBO39jP9bGih8gTwdZl00wp5hkVqrDjR9bFVOUqueHlyTXn/kV4gi+QjJB7gTtfQ5T8uyve3ACrRo8FdtXS883rFBO6NSupNVt8XJSrpbXfi9Dim7VBJ/zaT/4I4s6WmPRWe3A6wdhoHe2np0j8L+wfmeN7z4i/cB2buibsduzd0rQ846jQ==</source>
  </file>
  <file path="Plugin/NetCommons/View/Helper/NetCommonsHtmlHelper.php" generated-path="Plugin.NetCommons.View.Helper.NetCommonsHtmlHelper.html" hash="1152f13dc7e6d756996f0a3b5cece8d6" package="Default">
    <docblock line="0">
      <description>NetCommonsFormHelper</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="NetCommons\NetCommons\View\Helper">
      <extends>\AppHelper</extends>
      <name>NetCommonsHtmlHelper</name>
      <full_name>\NetCommonsHtmlHelper</full_name>
      <docblock line="19">
        <description>NetCommonsFormHelper</description>
        <long-description>Add your application-wide methods in the class below, your helpers
will inherit them.</long-description>
        <tag name="package" line="19" description="NetCommons\NetCommons\View\Helper"/>
        <tag name="inherited_from" description="\AppHelper" refers="\AppHelper" link="/classes/AppHelper.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="26" package="NetCommons\NetCommons\View\Helper">
        <name>$helpers</name>
        <full_name>\NetCommonsHtmlHelper::helpers</full_name>
        <default>array('Html')</default>
        <docblock line="26">
          <description>Other helpers used by HtmlHelper</description>
          <long-description></long-description>
          <tag name="var" line="26" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="37" package="NetCommons\NetCommons\View\Helper">
        <name>script</name>
        <full_name>\NetCommonsHtmlHelper::script()</full_name>
        <docblock line="37">
          <description>Overwrite HtmlHelper::script()</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;String or array of javascript files to include&lt;/p&gt;" type="string|array" variable="$url">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="37" description="&lt;p&gt;Array of options, and html attributes see above. If boolean sets $options['inline'] = value&lt;/p&gt;" type="array|boolean" variable="$options">
            <type>array</type>
            <type>boolean</type>
          </tag>
          <tag name="return" line="37" description="String of `&lt;script /&gt;` tags or null if $inline is false or if $once is true and the file has been&#10;  included before." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="link" line="37" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/html.html#HtmlHelper::script" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/html.html#HtmlHelper::script"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array|boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="57" package="NetCommons\NetCommons\View\Helper">
        <name>css</name>
        <full_name>\NetCommonsHtmlHelper::css()</full_name>
        <docblock line="57">
          <description>Overwrite HtmlHelper::css()</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;The name of a CSS style sheet or an array containing names of&#10;CSS stylesheets. If &lt;code&gt;$path&lt;/code&gt; is prefixed with '/', the path will be relative to the webroot&#10;of your application. Otherwise, the path will be relative to your CSS path, usually webroot/css.&lt;/p&gt;" type="string|array" variable="$path">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="57" description="&lt;p&gt;Array of options and HTML arguments.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="57" description="CSS &lt;link /&gt; or &lt;style /&gt; tag, depending on the type of link." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="57" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/html.html#HtmlHelper::css" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/html.html#HtmlHelper::css"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="NetCommons\NetCommons\View\Helper">
        <name>json</name>
        <full_name>\NetCommonsHtmlHelper::json()</full_name>
        <docblock line="76">
          <description>Json CakePHP template.</description>
          <long-description>It is better reference Google JSON Style Guid</long-description>
          <tag name="param" line="76" description="&lt;p&gt;results data&lt;/p&gt;" type="array" variable="$results">
            <type>array</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;message&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;status code&lt;/p&gt;" type="integer" variable="$status">
            <type>integer</type>
          </tag>
          <tag name="return" line="76" description="json format data" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$results</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>'OK'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>200</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="99" package="NetCommons\NetCommons\View\Helper">
        <name>editLink</name>
        <full_name>\NetCommonsHtmlHelper::editLink()</full_name>
        <docblock line="99">
          <description>Creates a `&lt;a&gt;` tag for add link. The type attribute defaults</description>
          <long-description></long-description>
          <tag name="param" line="99" description="&lt;p&gt;The anchor's caption. Not automatically HTML encoded&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="99" description="&lt;p&gt;Link url&lt;/p&gt;" type="mixed" variable="$url">
            <type>mixed</type>
          </tag>
          <tag name="param" line="99" description="&lt;p&gt;Array of options and HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="99" description="A HTML button tag." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="99" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="133" package="NetCommons\NetCommons\View\Helper">
        <name>url</name>
        <full_name>\NetCommonsHtmlHelper::url()</full_name>
        <docblock line="133">
          <description>Creates a `&lt;a&gt;` tag for add link. The type attribute defaults</description>
          <long-description></long-description>
          <tag name="param" line="133" description="&lt;p&gt;Link url&lt;/p&gt;" type="mixed" variable="$url">
            <type>mixed</type>
          </tag>
          <tag name="param" line="133" description="&lt;p&gt;Array of options and HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="133" description="A HTML button tag." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="133" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="167" package="NetCommons\NetCommons\View\Helper">
        <name>link</name>
        <full_name>\NetCommonsHtmlHelper::link()</full_name>
        <docblock line="167">
          <description>Creates a `&lt;a&gt;` tag for add link. The type attribute defaults</description>
          <long-description></long-description>
          <tag name="param" line="167" description="&lt;p&gt;The anchor's caption. Not automatically HTML encoded&lt;/p&gt;" type="string" variable="$title">
            <type>string</type>
          </tag>
          <tag name="param" line="167" description="&lt;p&gt;Link url&lt;/p&gt;" type="mixed" variable="$url">
            <type>mixed</type>
          </tag>
          <tag name="param" line="167" description="&lt;p&gt;Array of options and HTML attributes.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="167" description="A HTML button tag." type="string">
            <type>string</type>
          </tag>
          <tag name="link" line="167" description="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button" link="http://book.cakephp.org/2.0/en/core-libraries/helpers/form.html#FormHelper::button"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/NetCommons/View/Helper/TokenHelper.php" generated-path="Plugin.NetCommons.View.Helper.TokenHelper.html" hash="671268b4f215bfdffeecad48226ea4b3" package="Default">
    <docblock line="0">
      <description>TokenHelper</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="18" package="Default">
      <extends>\FormHelper</extends>
      <name>TokenHelper</name>
      <full_name>\TokenHelper</full_name>
      <docblock line="18">
        <description>TokenHelper</description>
        <long-description></long-description>
        <tag name="package" line="18" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="33" package="Default">
        <name>getToken</name>
        <full_name>\TokenHelper::getToken()</full_name>
        <docblock line="33">
          <description>Return _Token array.</description>
          <long-description></long-description>
          <tag name="param" line="33" description="&lt;p&gt;The model name for which the form is being defined. Should&#10;include the plugin name for plugin models. e.g. &lt;code&gt;ContactManager.Contact&lt;/code&gt;.&#10;If an array is passed and $options argument is empty, the array will be used as options.&#10;If &lt;code&gt;false&lt;/code&gt; no model is used.&lt;/p&gt;" type="mixed" variable="$model">
            <type>mixed</type>
          </tag>
          <tag name="param" line="33" description="&lt;p&gt;Action url.&lt;/p&gt;" type="array|string" variable="$actionUrl">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="param" line="33" description="&lt;p&gt;An array of fields to generate inputs for, or null.&lt;/p&gt;" type="array" variable="$tokenFields">
            <type>array</type>
          </tag>
          <tag name="param" line="33" description="&lt;p&gt;An array of fields that exist in $tokenFields to generate inputs hidden for, or null.&lt;/p&gt;" type="array" variable="$hiddenFields">
            <type>array</type>
          </tag>
          <tag name="param" line="33" description="&lt;p&gt;A array of fields to not create inputs for.&lt;/p&gt;" type="array" variable="$blacklist">
            <type>array</type>
          </tag>
          <tag name="return" line="33" description="_Token" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$model</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$actionUrl</name>
          <default>null</default>
          <type>array|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$tokenFields</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$hiddenFields</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blacklist</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="69" package="Default">
        <name>_getInputsFields</name>
        <full_name>\TokenHelper::_getInputsFields()</full_name>
        <docblock line="69">
          <description>Return input fields array added hidden option.</description>
          <long-description></long-description>
          <tag name="param" line="69" description="&lt;p&gt;An array of fields to generate inputs for, or null.&lt;/p&gt;" type="array" variable="$tokenFields">
            <type>array</type>
          </tag>
          <tag name="param" line="69" description="&lt;p&gt;An array of fields that exist in $tokenFields to generate inputs hidden for, or null.&lt;/p&gt;" type="array" variable="$hiddenFields">
            <type>array</type>
          </tag>
          <tag name="return" line="69" description="input fields" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tokenFields</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$hiddenFields</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="92" package="Default">
        <name>_extractToken</name>
        <full_name>\TokenHelper::_extractToken()</full_name>
        <docblock line="92">
          <description>Return _Token array.</description>
          <long-description></long-description>
          <tag name="param" line="92" description="&lt;p&gt;Token html string&lt;/p&gt;" type="string" variable="$formHtml">
            <type>string</type>
          </tag>
          <tag name="return" line="92" description="_Token" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$formHtml</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJzVVm1v2zYQ/mz/ihsQQHLqyuuwT0mTLctWtNhWDFs6DHAMh5HOEheKEihqjrHlv+/Io17sxi32cR+CiLy75+6ee6Fff1MX9XRxejqFU7ipHlC/RVWjoaO7+Tat6p2ReWHhuv/66stXX8/hPdrrqiwr3cAvpvoTU+sNRGuLysCPVYESbtCIvE0LCa8fbPdNmN5Mo00qk196MyX1AxTW1meLxXa7TUgY1JzOMWdKpqgbPG64CBqJfbRjkJ/4mkAW0+lVXZ+dtQ02cfSmMiUTEM0h+l3idhGOs/Ox3h+lcgofrFTS7pzwKIeLaapE04wFgI8WddbA4A7+7hF+RdsaDWtvAMIYsUu6ctTCiBJK+YgZnJRVhgpuCgT+0qJE2BD520KmBdjCn0qQDdyj1DlkuJEaswR+K6pWZQ4RQOpUtRl69Vq1udQDUDh7+CYBTPIE7q4rbUVqfxZa5GiScLxLGO7dBkSI2jmuKXWKVWiKt6qtdOQLk7clauvkWNZ2N/fO2WYrlaJwofVmDQSjAf1uI1SDd6CrkDahOOVkRJCH+qexxmV9QtERxAej4Mp/QWvUR9pwYh3fbyQqKsxVl0K1gQ1f2Qpy1NTEFomzurWNo2gORJNu1XOAhcyyTyIWwlIryIaY0Pv+n3HGaJ/zea9E+qAcJFw9l4KuLKQG95NgHMN9x0bcfb59J3V7T2MEm1YzfTlaL41DB174YOZjovurcVL95R4xF+wxns3H0bPujMZiMpEbiL+gMjdo40FlxsLJnlGAOj8QvOgk7n4SMQFZNOcjZSGJof4cxGvqKnOow5fuzjt5or++r8dOIoVUwCyCi0vwDetxIi4E2uF+6pEczKbjY0zaechfNmsGHwt7CkamhWxeXq6pRO98eVlxz+qgACEPH4FbR7ZUAxBTEQo9D/lFND8+gaHgM48SjLix4hDVuKzzfgmwfu8w6T0SaXEgxMc8zorWpiGXofk6Y9YO3RuMCP3pcKH6sLpR4C4XREPWTRZHdrBq/+e7YW+mxwSEyTaVpbeUOOiH+z+1jm8/rvN7ejP6EVg/4G7fMtT7YOS5zofzE9ldjb7BIvYWeWvKDgW9a/HYIb0QwzGMg58X3c1LLz0MPmh3US0HzZXruRCVXyWTlB45qVv0Jz8sR8xGC+hp3Jabbpo/astPvPPdA9aPCasW7pNln1ncz5T3yAxxJfuJG6VxklXl91XKL/YF0C+fs7P7VqpssO4XA0fCpSOzLJhFYT2EbiVyR5gvL6njflDovpvvdjcid1zGkVeOuEWG0gcIV3b/2W3AUti0wObwCfC/ZC6Crvd0ZYm4+5aWWuSE3Fq+ZWqD+drjxNEiE1bcLpnM29XtMk5ezG5XC/rR5zHpX/A4tBGTt4zYKFotO5Xlq9XqaBB/CdV2UTwdds1omT1N/wUrmMLG</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Model/Behavior/Trackable/TrackableBehaviorTest.php" generated-path="Plugin.NetCommons.Test.Case.Model.Behavior.Trackable.TrackableBehaviorTest.html" hash="9f198a0f64c393cb0875bf7f0db2a71a" package="Default">
    <docblock line="0">
      <description>TrackableBehavior test case</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="16" package="Default">
      <extends>\TrackableBehaviorTestBase</extends>
      <name>TrackableBehaviorTest</name>
      <full_name>\TrackableBehaviorTest</full_name>
      <docblock line="16">
        <description>TrackableBehaviorTest</description>
        <long-description></long-description>
        <tag name="package" line="16" description="Default"/>
        <tag name="inherited_from" description="\TrackableBehaviorTestBase" refers="\TrackableBehaviorTestBase" link="/classes/TrackableBehaviorTestBase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="75" package="Default">
        <name>$fixtures</name>
        <full_name>\TrackableBehaviorTestBase::fixtures</full_name>
        <default>array('plugin.net_commons.trackable', 'plugin.net_commons.trackables_user', 'plugin.users.user')</default>
        <docblock line="75">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="75" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="24" package="Default">
        <name>_testFieldPopulation</name>
        <full_name>\TrackableBehaviorTest::_testFieldPopulation()</full_name>
        <docblock line="24">
          <description>testFieldPopulation</description>
          <long-description></long-description>
          <tag name="param" line="24" description="&lt;p&gt;authentication callback method name&lt;/p&gt;" type="string" variable="$authCallback">
            <type>string</type>
          </tag>
          <tag name="return" line="24" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$authCallback</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="55" package="Default">
        <name>testUserDataFromSession</name>
        <full_name>\TrackableBehaviorTest::testUserDataFromSession()</full_name>
        <docblock line="55">
          <description>Test model operation using session auth data</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>testUserDataFromTrackable</name>
        <full_name>\TrackableBehaviorTest::testUserDataFromTrackable()</full_name>
        <docblock line="62">
          <description>Test model operation using manually setup auth data</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="69" package="Default">
        <name>testAuthDataOverride</name>
        <full_name>\TrackableBehaviorTest::testAuthDataOverride()</full_name>
        <docblock line="69">
          <description>Test auth data override</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="86" package="Default">
        <name>testUncommonInheritedUserModel</name>
        <full_name>\TrackableBehaviorTest::testUncommonInheritedUserModel()</full_name>
        <docblock line="86">
          <description>Test with uncommon/inherited User model</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="104" package="Default">
        <name>testTrackableSaveField</name>
        <full_name>\TrackableBehaviorTest::testTrackableSaveField()</full_name>
        <docblock line="104">
          <description>Test Trackable saveField</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="86" package="Default">
        <name>setUp</name>
        <full_name>\TrackableBehaviorTestBase::setUp()</full_name>
        <docblock line="86">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="86" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\TrackableBehaviorTestBase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="101" package="Default">
        <name>tearDown</name>
        <full_name>\TrackableBehaviorTestBase::tearDown()</full_name>
        <docblock line="101">
          <description>tearDown</description>
          <long-description></long-description>
          <tag name="return" line="101" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\TrackableBehaviorTestBase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="114" package="Default">
        <name>_authTrackable</name>
        <full_name>\TrackableBehaviorTestBase::_authTrackable()</full_name>
        <docblock line="114">
          <description>Set user to congifure</description>
          <long-description></long-description>
          <tag name="param" line="114" description="&lt;p&gt;key name&lt;/p&gt;" type="string" variable="$userIdField">
            <type>string</type>
          </tag>
          <tag name="param" line="114" description="&lt;p&gt;useId&lt;/p&gt;" type="integer" variable="$userId">
            <type>integer</type>
          </tag>
          <tag name="return" line="114" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userIdField</name>
          <default>'id'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\TrackableBehaviorTestBase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="125" package="Default">
        <name>_authSession</name>
        <full_name>\TrackableBehaviorTestBase::_authSession()</full_name>
        <docblock line="125">
          <description>Set user to session</description>
          <long-description></long-description>
          <tag name="param" line="125" description="&lt;p&gt;key name&lt;/p&gt;" type="string" variable="$userIdField">
            <type>string</type>
          </tag>
          <tag name="param" line="125" description="&lt;p&gt;useId&lt;/p&gt;" type="integer" variable="$userId">
            <type>integer</type>
          </tag>
          <tag name="return" line="125" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userIdField</name>
          <default>'id'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\TrackableBehaviorTestBase</inherited_from>
      </method>
    </class>
    <source>eJzlVl1v0zAUfV5/hR+QnE5joRtP3QewAhJiDATbU1VVXnLXmCZxsJ1t1bT/zr3OR9s1aTsJCSTeGvue4+tz7r3u8Zssyjr+7m6H7bJLLYKpuI7hDCJxK5VmFoxlgTCA2xTxNlDZTMtJZNmg/nXwqvd6j12AHagkUalh37T6CYF1AJHbCIk+qwgkuwQtJnkQSXY8tdVv5HSwFOy+0pNTB4tlOmWRtVnf9+/u7vZxswyjmLbDYhlAaqAd6JcR+/beLpKcF8tI4nc677Ks388NGI+vKHKJgpyhHnyP8Tl+n5b9Aa77X1QIsV+F+zUB7x51WnUmuDs7iIUxzfsM7i2kYcsu5cQe6hPIt48S4vCbyvJYWKnSysFMaJEwY7VMJ+wF2TMQcXyNnIw+ILUycAD0vVxPAD0MWSoScBQabK5Tdqtk6LLeybSy6AGE7CZPAwceN6TgLR3XxXx3dl7YSJqXpw9LW48eqVVvJqTpy9NAg7DgCa3FzOMy5OzklPXQCCstCkxf/Eapa6F5F/EI12Dy2LITtkxkxC14RUQorKD9InLISUtnIR8dzRNAU0DbC2U/JJmdeQ415EU+4RhLRfNRdyX+w69cxKY5eo+Vy5iSvJGLLEiTYy3aNcc07TdtrZK3BFQHt7hBYu+xgzKmgBaij1A8bjKsjMnE8KMVz5zUDlGCWyy5kWl4NvsUer2FQ7Y15lLnZVmMpzAbw700drF5B6SQ0niFkq67atYmjqsMM4L1HKXhvdrcLSvkYE017DzOxwZNAacXUxlOT9dnuaE+xmFl6ItsY0RV9mV+jQNv3pTUk1fI/B4jPmqV/Chg3lIrNnYuHxN1Gc+3zisRKd4wnmGCNs+em14t/tYJLo3bpynWpzN1C1rLENrTeIexlMbXMvJJBktnle3Be3zR4UXBqohD/mfmWts026a5NvXWX5p6zSz8XGlImMxMnrBQxfhPwkh0El+keScOVzt9NOTETC9WYxfdSSwF9Ns9375MI9CSni+qvqKU11RoCftUoQjk5KuKxLGcsAE95t9hgpNEz/p9mUq7OFAqVFUTeYFy6FXPVmaVNG6OE6pJgLYR1wyrppuDbarzw7LOi0SLCU98z75HZfIhefk0o1qe0TPKpZGputuQ8m+qhjqU0WXcZGm3vw7+UcX+H7YfLpouQ0p5nWUk9ZMqKcSaNyaW0ncVTI2lwXa0QYs2x2uGDSW0PA7+nTp87PwGfiFv3A==</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Model/Behavior/Trackable/TrackableBehaviorTestBase.php" generated-path="Plugin.NetCommons.Test.Case.Model.Behavior.Trackable.TrackableBehaviorTestBase.html" hash="e09bb468d8a0a1c60d29630450b40714" package="Default">
    <docblock line="0">
      <description>TrackableBehavior test case base</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="16" package="Default">
      <extends>\Model</extends>
      <name>TrackableUserModel</name>
      <full_name>\TrackableUserModel</full_name>
      <docblock line="16">
        <description>TrackableUserModel for test case</description>
        <long-description></long-description>
        <tag name="package" line="16" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="22" package="Default">
        <name>$useTable</name>
        <full_name>\TrackableUserModel::useTable</full_name>
        <default>'users'</default>
        <docblock line="22">
          <description>Table name</description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="28" package="Default">
        <name>$actsAs</name>
        <full_name>\TrackableUserModel::actsAs</full_name>
        <default>array('NetCommons.Trackable' =&gt; array('userModel' =&gt; 'TrackableUserModel'))</default>
        <docblock line="28">
          <description>List of behaviors</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="Default">
        <name>$hasOne</name>
        <full_name>\TrackableUserModel::hasOne</full_name>
        <default>array()</default>
        <docblock line="38">
          <description>List of hasOne associations</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="44" package="Default">
        <name>$hasMany</name>
        <full_name>\TrackableUserModel::hasMany</full_name>
        <default>array()</default>
        <docblock line="44">
          <description>List of hasMany associations</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="Default">
        <name>$belongsTo</name>
        <full_name>\TrackableUserModel::belongsTo</full_name>
        <default>array()</default>
        <docblock line="50">
          <description>List of belongsTo associations</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="56" package="Default">
        <name>$hasAndBelongsToMany</name>
        <full_name>\TrackableUserModel::hasAndBelongsToMany</full_name>
        <default>array()</default>
        <docblock line="56">
          <description>List of hasAndBelongsToMany associations</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="62" package="Default">
        <name>$validate</name>
        <full_name>\TrackableUserModel::validate</full_name>
        <default>array()</default>
        <docblock line="62">
          <description>List of validation rules</description>
          <long-description></long-description>
          <tag name="var" line="62" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="" line="68" package="Default">
      <extends>\CakeTestCase</extends>
      <name>TrackableBehaviorTestBase</name>
      <full_name>\TrackableBehaviorTestBase</full_name>
      <docblock line="68">
        <description>Base class of TrackableBehavior test case</description>
        <long-description></long-description>
        <tag name="package" line="68" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="75" package="Default">
        <name>$fixtures</name>
        <full_name>\TrackableBehaviorTestBase::fixtures</full_name>
        <default>array('plugin.net_commons.trackable', 'plugin.net_commons.trackables_user', 'plugin.users.user')</default>
        <docblock line="75">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="75" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="86" package="Default">
        <name>setUp</name>
        <full_name>\TrackableBehaviorTestBase::setUp()</full_name>
        <docblock line="86">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="86" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="101" package="Default">
        <name>tearDown</name>
        <full_name>\TrackableBehaviorTestBase::tearDown()</full_name>
        <docblock line="101">
          <description>tearDown</description>
          <long-description></long-description>
          <tag name="return" line="101" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="114" package="Default">
        <name>_authTrackable</name>
        <full_name>\TrackableBehaviorTestBase::_authTrackable()</full_name>
        <docblock line="114">
          <description>Set user to congifure</description>
          <long-description></long-description>
          <tag name="param" line="114" description="&lt;p&gt;key name&lt;/p&gt;" type="string" variable="$userIdField">
            <type>string</type>
          </tag>
          <tag name="param" line="114" description="&lt;p&gt;useId&lt;/p&gt;" type="integer" variable="$userId">
            <type>integer</type>
          </tag>
          <tag name="return" line="114" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userIdField</name>
          <default>'id'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="125" package="Default">
        <name>_authSession</name>
        <full_name>\TrackableBehaviorTestBase::_authSession()</full_name>
        <docblock line="125">
          <description>Set user to session</description>
          <long-description></long-description>
          <tag name="param" line="125" description="&lt;p&gt;key name&lt;/p&gt;" type="string" variable="$userIdField">
            <type>string</type>
          </tag>
          <tag name="param" line="125" description="&lt;p&gt;useId&lt;/p&gt;" type="integer" variable="$userId">
            <type>integer</type>
          </tag>
          <tag name="return" line="125" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userIdField</name>
          <default>'id'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
    </class>
    <source>eJzFVd9v2jAQfiZ/hR8qBRAN67SntLBRpkrV2m1a6XNlkiPxCHZkX6Bo6v++s5MQKD/WPu0FhfPnz9995ztffc7T3Ot3ux7rsonm0ZxPM7iGlC+F0gzBIIu4ATalH8JY2JdI5WstkhTZePP18cPFpx77DjhWi4WShv3U6jdE6DbwAlNi+6ZSEGwCmidFlAp2Ncf6mzjdNgkYKJ0M3bZMyDlLEfOw31+tVgEtVjCLOXZYJiKQpPjoxn6FCPAZt0nuyjCR9D1vlOdhWBgwbf9exZD5PVZ9dC69PcMeDWi3ymbbrjmqKOPGHILCM4KMDSv//WlYLYxJvgCXz5JrZlALmTi6Vl5MKQF2RuJK5ID59K2N3wi7E6RAzdi0KqTZMHGt+XqXiEdoRoZo3Frba7X8xpVgI9xng2EDabkzS0fsgr+foN8jXId+OvvCUm5+SGDkjIoER0EnnZJYwWuJhwnvuVy/h9HhT1BOIVMyMRP1ZtJmx2mlIxlf19D3qt7be+KoJc9E7FiZLjI4SV1hd0x+2TBe2xlQ3mTiPTEoDl35GjUhkCOqb/6Yz8EGxzbYNMCNeMZCO7mnFM8q2M7NzbMiEdJ2/FPd8ri5wb1/IcyTvdU7ONdaQR3eMtkAPua1RA0kRbKlEvGOyFkhI+e/Q7c7lGWrlXMNEsOwil1S6AxTYc6HCzcKBmxsDfwFCdVRr8NQSIHtrdZz/lZtR/Y13dbyqYr8yBJuuthvEi6bdE/D+bAuGkUyxeP24ZlgNza3BIHrr2ol3+xKveGVMU3Y6horORMJVToMSRkgtJthE4zoafFLGF2mBzCGeBugXQ7sRHql9AGQ2ZoyVCyiZhIz4q9lkwy+qGaum7P6Nr4RkMVsDutmMJcwIbHGWMbb+EjmWiG9UBA3yT/ZZ3GTSXvnIJrpIqY3p2YesIvSoi0zVlrse1Em26s6YpdzWNN1jpthSgf/hxVV8d5qxHa5KyvebcCL9xdf7NYy</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Model/Behavior/Trackable/TrackableBehaviorIrregularTest.php" generated-path="Plugin.NetCommons.Test.Case.Model.Behavior.Trackable.TrackableBehaviorIrregularTest.html" hash="496e4dfc121522829bde5cac6407edd2" package="Default">
    <docblock line="0">
      <description>TrackableBehavior association test case</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="16" package="Default">
      <extends>\TrackableBehaviorTestBase</extends>
      <name>TrackableBehaviorIrregularTest</name>
      <full_name>\TrackableBehaviorIrregularTest</full_name>
      <docblock line="16">
        <description>TrackableBehaviorAssocTest</description>
        <long-description></long-description>
        <tag name="package" line="16" description="Default"/>
        <tag name="inherited_from" description="\TrackableBehaviorTestBase" refers="\TrackableBehaviorTestBase" link="/classes/TrackableBehaviorTestBase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="75" package="Default">
        <name>$fixtures</name>
        <full_name>\TrackableBehaviorTestBase::fixtures</full_name>
        <default>array('plugin.net_commons.trackable', 'plugin.net_commons.trackables_user', 'plugin.users.user')</default>
        <docblock line="75">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="75" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="21" package="Default">
        <name>testCallMoreThanOnce</name>
        <full_name>\TrackableBehaviorIrregularTest::testCallMoreThanOnce()</full_name>
        <docblock line="21">
          <description>Test call more than once</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="31" package="Default">
        <name>testNotHasTrackableField</name>
        <full_name>\TrackableBehaviorIrregularTest::testNotHasTrackableField()</full_name>
        <docblock line="31">
          <description>Test not has trackable field</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Default">
        <name>testNotLogin</name>
        <full_name>\TrackableBehaviorIrregularTest::testNotLogin()</full_name>
        <docblock line="51">
          <description>Test not login</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="86" package="Default">
        <name>setUp</name>
        <full_name>\TrackableBehaviorTestBase::setUp()</full_name>
        <docblock line="86">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="86" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\TrackableBehaviorTestBase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="101" package="Default">
        <name>tearDown</name>
        <full_name>\TrackableBehaviorTestBase::tearDown()</full_name>
        <docblock line="101">
          <description>tearDown</description>
          <long-description></long-description>
          <tag name="return" line="101" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\TrackableBehaviorTestBase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="114" package="Default">
        <name>_authTrackable</name>
        <full_name>\TrackableBehaviorTestBase::_authTrackable()</full_name>
        <docblock line="114">
          <description>Set user to congifure</description>
          <long-description></long-description>
          <tag name="param" line="114" description="&lt;p&gt;key name&lt;/p&gt;" type="string" variable="$userIdField">
            <type>string</type>
          </tag>
          <tag name="param" line="114" description="&lt;p&gt;useId&lt;/p&gt;" type="integer" variable="$userId">
            <type>integer</type>
          </tag>
          <tag name="return" line="114" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userIdField</name>
          <default>'id'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\TrackableBehaviorTestBase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="125" package="Default">
        <name>_authSession</name>
        <full_name>\TrackableBehaviorTestBase::_authSession()</full_name>
        <docblock line="125">
          <description>Set user to session</description>
          <long-description></long-description>
          <tag name="param" line="125" description="&lt;p&gt;key name&lt;/p&gt;" type="string" variable="$userIdField">
            <type>string</type>
          </tag>
          <tag name="param" line="125" description="&lt;p&gt;useId&lt;/p&gt;" type="integer" variable="$userId">
            <type>integer</type>
          </tag>
          <tag name="return" line="125" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userIdField</name>
          <default>'id'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\TrackableBehaviorTestBase</inherited_from>
      </method>
    </class>
    <source>eJylVE1vGjEQPcOv8KGSF5Swpe2JJrQJStSoSdoD6QVFkdkddl2MvbVnQ1CV/97xfgEBoqq9mdn3nue9GXPyKUuzdtjttlmXja2I5mKq4BxS8SiNZcI5E0mB0miG4JBFwgFBPfpzZLKVlUmKbNSc3r3tfzhit4Ajs1gY7dh3a35ChAVB5JiS6FeTgmRjsCLJo1SykznWZ9IsaBqwZ2wyLGhK6jlLEbNBGC6Xyx59rGAec+gyJSPQDg4TwwrRwyfcFLkuyyQStttnWTYY5A5cwHfSGVMg55QHP2J8ze/5cjiienhjYlBhDQ8bAd752D6Y+ZmP3GsUDUSKRrALurIWklyJogcGTwg63gOrO2S/1/eVU1SKLYwFhqnQzOiotNvK8imlwma5jpqZjwh8Q9gxQb8RMuiQXKv1BlPpjocL7/F4WN9IFWVEHGwFsuW7YZIxsDi2OQSSjhhsK05BGZ24sZmskx9ZEGgsv++Q0v8I3WWxoKWrhJ6309EGWSocwxrNZhJUfDihW4NfhGvELz26Tol2x96YaM5OWdVWAugLl8YW+7GxWHcFlmq0UcJasQo49VHI8cpxLXc8hKeMVt3VZoVeBZ0OQVpkHOidxZvksr6UStV4C5hb/UMoSm0mlINONRx/g292fdNM6vh8dRUH/d3ULz21jt1T/nJar/G2hrMmPvi/jwYUcBn7h/eevwzGiUcoNf/J0cWvnHoLeJ/UdzprBnQ/4bRekhYjfvAganb/IimTSP3q6lx7xN5HFfkAIahWgfyy0yHrk2mUSK/J/+IzY6bC8q2IK3oRRFm34HKF6x2sEC9zoNyFB5VwMk4dVn53X+7FIsNVUHAmvGx1M4u9qe5FU85leX+iz+0/DAcxKQ==</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Model/Behavior/Trackable/TrackableBehaviorAssocTest.php" generated-path="Plugin.NetCommons.Test.Case.Model.Behavior.Trackable.TrackableBehaviorAssocTest.html" hash="7a6517adc08dc7ae44b2a4bfa0874b2a" package="Default">
    <docblock line="0">
      <description>TrackableBehavior association test case</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="16" package="Default">
      <extends>\TrackableBehaviorTestBase</extends>
      <name>TrackableBehaviorAssocTest</name>
      <full_name>\TrackableBehaviorAssocTest</full_name>
      <docblock line="16">
        <description>TrackableBehaviorAssocTest</description>
        <long-description></long-description>
        <tag name="package" line="16" description="Default"/>
        <tag name="inherited_from" description="\TrackableBehaviorTestBase" refers="\TrackableBehaviorTestBase" link="/classes/TrackableBehaviorTestBase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="75" package="Default">
        <name>$fixtures</name>
        <full_name>\TrackableBehaviorTestBase::fixtures</full_name>
        <default>array('plugin.net_commons.trackable', 'plugin.net_commons.trackables_user', 'plugin.users.user')</default>
        <docblock line="75">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="75" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="23" package="Default">
        <name>setUp</name>
        <full_name>\TrackableBehaviorAssocTest::setUp()</full_name>
        <docblock line="23">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="23" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\TrackableBehaviorTestBase::setUp()" refers="\TrackableBehaviorTestBase::setUp()" link="/classes/TrackableBehaviorTestBase.html#method_setUp"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="51" package="Default">
        <name>__getUserBoundTestModel</name>
        <full_name>\TrackableBehaviorAssocTest::__getUserBoundTestModel()</full_name>
        <docblock line="51">
          <description>Get user data bound to test model</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;association type&lt;/p&gt;" type="string" variable="$assocType">
            <type>string</type>
          </tag>
          <tag name="return" line="51" description="user data" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$assocType</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="76" package="Default">
        <name>__assertHasMany</name>
        <full_name>\TrackableBehaviorAssocTest::__assertHasMany()</full_name>
        <docblock line="76">
          <description>Assert hasMany data</description>
          <long-description></long-description>
          <tag name="param" line="76" description="&lt;p&gt;user data&lt;/p&gt;" type="array" variable="$user">
            <type>array</type>
          </tag>
          <tag name="return" line="76" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="92" package="Default">
        <name>testBelongsTo</name>
        <full_name>\TrackableBehaviorAssocTest::testBelongsTo()</full_name>
        <docblock line="92">
          <description>Test belongsTo</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="119" package="Default">
        <name>testHasOne</name>
        <full_name>\TrackableBehaviorAssocTest::testHasOne()</full_name>
        <docblock line="119">
          <description>Test hasOne</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="133" package="Default">
        <name>testHasMany</name>
        <full_name>\TrackableBehaviorAssocTest::testHasMany()</full_name>
        <docblock line="133">
          <description>Test hasMany</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="141" package="Default">
        <name>testHasAndBelongsToMany</name>
        <full_name>\TrackableBehaviorAssocTest::testHasAndBelongsToMany()</full_name>
        <docblock line="141">
          <description>Test hasAndBelongsToMany</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="86" package="Default">
        <name>setUp</name>
        <full_name>\TrackableBehaviorTestBase::setUp()</full_name>
        <docblock line="86">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="86" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\TrackableBehaviorTestBase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="101" package="Default">
        <name>tearDown</name>
        <full_name>\TrackableBehaviorTestBase::tearDown()</full_name>
        <docblock line="101">
          <description>tearDown</description>
          <long-description></long-description>
          <tag name="return" line="101" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\TrackableBehaviorTestBase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="114" package="Default">
        <name>_authTrackable</name>
        <full_name>\TrackableBehaviorTestBase::_authTrackable()</full_name>
        <docblock line="114">
          <description>Set user to congifure</description>
          <long-description></long-description>
          <tag name="param" line="114" description="&lt;p&gt;key name&lt;/p&gt;" type="string" variable="$userIdField">
            <type>string</type>
          </tag>
          <tag name="param" line="114" description="&lt;p&gt;useId&lt;/p&gt;" type="integer" variable="$userId">
            <type>integer</type>
          </tag>
          <tag name="return" line="114" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userIdField</name>
          <default>'id'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\TrackableBehaviorTestBase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="125" package="Default">
        <name>_authSession</name>
        <full_name>\TrackableBehaviorTestBase::_authSession()</full_name>
        <docblock line="125">
          <description>Set user to session</description>
          <long-description></long-description>
          <tag name="param" line="125" description="&lt;p&gt;key name&lt;/p&gt;" type="string" variable="$userIdField">
            <type>string</type>
          </tag>
          <tag name="param" line="125" description="&lt;p&gt;useId&lt;/p&gt;" type="integer" variable="$userId">
            <type>integer</type>
          </tag>
          <tag name="return" line="125" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userIdField</name>
          <default>'id'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$userId</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\TrackableBehaviorTestBase</inherited_from>
      </method>
    </class>
    <source>eJzNVl1v2jAUfYZf4YdKCRUlBa19YC0boGmbunbTRJ+qCpnEEK9gZ45Di6b+913b+aIkJKXStBcUnHOO7/fNxYfAD5rO8XETHaOJwO4Dni3JiPh4TblAOAy5S7GknCFJQolcHBKAKvRHlwcbQRe+ROP0qXfafddGN0SO+WrFWYh+CP6LuFITcCR9EL3iPqFoQgReRK5P0cWDTJ5BU9MYkR0uFgNNW1L2gHwpg77jPD4+duBlDFOYssuW1CUsJOVEJ0Z05JPMi3wzxyDiNJvDIOj3o5CEtrUTnQkEZATxsNrIyvgddeyM4dy55h5ZOgncSQWs1vtmacyHKuRKQxvgLiEFe0CIPEnCvAJIYh36k94VEnkbJNkTREaCoTWnnr6pEUQziAiaR8zV+dZouwX8RiPAgjDZ78dnYH6jcSR9Gp4Mpiqr6e22RT2IxxlAFCI5DtElwkLgjQ3HDYVBlwPUbet/kkqIiTqw5pzPsLDMOYRdTGNoD05iTX3rSoX2ZOAKgiWxcxcVgEK8JjVsPq9lc+/f2tx4TrP3mUik5JGHJUYzHjEPSW7aUrOSzEKy8AqFUlC2QEe6hSebgGw3Mxzky0A7msnHFSHoGkzNSmI6XUABAGikblcVpkvczi4x5XKkMBC+saren2RBwZhNv08Zlbk+UiDNt0wA1P+TwYwyz6iqgJoE5JyAuGZJgYCnRlgvXzUs3Tw3eBUnKoMaQKuZ/rbSVEXG8tiYORgz2nz17N5W/YAsEXIiImJTeJS2pt1lro1Vjrmw7lv53FbSbgMIPqlNS/3ReCDEydTvt2pnqCWQj8NrzDZJinPVYvJvvM9XQdGc2K0KY+EXo27Miwsh78Gn3xFewiDtQrOVBuxONdr9rvv7yGnYXkPOgnd3WknslROTjt/DPitnm2HgTdXbAyWg9+mc1tAocaJ7qPfdet6fl7Prer9HosD7rOz1hpyRJWeLcMKL15yan6MEYm+VbTyLiyaSHh1WKr0zfIqmXPWA2uW0E+icC0IX7IpsDDYJ/J5RtrXJtl1K51q3Yq5lGgdMt0Jy3RlXTE4Dk4y88m7Zb3pVzZdL1J42vXKJzI1aI6tapG4n1ZSr7ipYJd8ZKW+pL/p90k/JVo0/v0o+Iywjau3J7H+3Ow4bnW/YGm9dGfVyqxb53uTqTf/q7CqWlTe5+Nuh0KQhjKxk3laa9xL8elNfKtQ1+7n5F4Oj4TA=</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Model/Behavior/OriginalKey/OriginalKeyBehaviorTestBase.php" generated-path="Plugin.NetCommons.Test.Case.Model.Behavior.OriginalKey.OriginalKeyBehaviorTestBase.html" hash="32a47a544cca6b3fb22002487abc9b06" package="Default">
    <docblock line="0">
      <description>OriginalKeyModel test case base</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="NetCommons\NetCommons\Model\Behavior">
      <extends>\Model</extends>
      <name>OriginalKeyModel</name>
      <full_name>\OriginalKeyModel</full_name>
      <docblock line="19">
        <description>OriginalKeyModel for test case</description>
        <long-description></long-description>
        <tag name="author" line="19" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="19" description="NetCommons\NetCommons\Model\Behavior"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="25" package="NetCommons\NetCommons\Model\Behavior">
        <name>$useTable</name>
        <full_name>\OriginalKeyModel::useTable</full_name>
        <default>'original_keys'</default>
        <docblock line="25">
          <description>Table name</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="NetCommons\NetCommons\Model\Behavior">
        <name>$actsAs</name>
        <full_name>\OriginalKeyModel::actsAs</full_name>
        <default>array('NetCommons.OriginalKey')</default>
        <docblock line="31">
          <description>List of behaviors</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="" line="42" package="NetCommons\NetCommons\Model\Behavior">
      <extends>\Model</extends>
      <name>OriginalWithoutKeyModel</name>
      <full_name>\OriginalWithoutKeyModel</full_name>
      <docblock line="42">
        <description>OriginalWithoutKeyModel for test case</description>
        <long-description></long-description>
        <tag name="author" line="42" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="42" description="NetCommons\NetCommons\Model\Behavior"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="48" package="NetCommons\NetCommons\Model\Behavior">
        <name>$useTable</name>
        <full_name>\OriginalWithoutKeyModel::useTable</full_name>
        <default>'original_without_keys'</default>
        <docblock line="48">
          <description>Table name</description>
          <long-description></long-description>
          <tag name="var" line="48" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="54" package="NetCommons\NetCommons\Model\Behavior">
        <name>$actsAs</name>
        <full_name>\OriginalWithoutKeyModel::actsAs</full_name>
        <default>array('NetCommons.OriginalKey')</default>
        <docblock line="54">
          <description>List of behaviors</description>
          <long-description></long-description>
          <tag name="var" line="54" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="" line="65" package="NetCommons\NetCommons\Model\Behavior">
      <extends>\CakeTestCase</extends>
      <name>OriginalKeyBehaviorTestBase</name>
      <full_name>\OriginalKeyBehaviorTestBase</full_name>
      <docblock line="65">
        <description>Base class of OriginalWithoutKeyModel test case</description>
        <long-description></long-description>
        <tag name="author" line="65" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="65" description="NetCommons\NetCommons\Model\Behavior"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="72" package="NetCommons\NetCommons\Model\Behavior">
        <name>$fixtures</name>
        <full_name>\OriginalKeyBehaviorTestBase::fixtures</full_name>
        <default>array('plugin.net_commons.original_key', 'plugin.net_commons.original_without_key')</default>
        <docblock line="72">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="72" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="NetCommons\NetCommons\Model\Behavior">
        <name>setUp</name>
        <full_name>\OriginalKeyBehaviorTestBase::setUp()</full_name>
        <docblock line="82">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="NetCommons\NetCommons\Model\Behavior">
        <name>tearDown</name>
        <full_name>\OriginalKeyBehaviorTestBase::tearDown()</full_name>
        <docblock line="93">
          <description>tearDown</description>
          <long-description></long-description>
          <tag name="return" line="93" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzNVNFu0zAUfU6+wg+T0lWlBcRTVsa2Il42BoIiXiZNbnqbeEntyL5pG037d24cp0nbFXhB7KVy7XPPPedcx+MPeZL7o37fZ332RYtYSJ5dQ/lZzSFjCAZZxA2wGf0QpEJdRCovCZkgm2xXb1+/eTdgt4ATtVwqadhXrR4gQlvAC0yUZtcqAcGmoHlcRIlg4xSbNXHaMgk4VDo+t2WZkClLEPNwNFqv10M6dLAKc6xZJiKQpPho4cghhrjBLslNvU0kI9+/zPMwLAyYXmCjCAbMLU7P/KN5LcjlNrMmLuf+e2Lt3/KUP4glZ2PpViZRBZ1cxEsusiEJrd3nPEp5DB2Fd52l7Xd3BQlfCaWt5ijjxhxqgg2CnBtW/3vcip/yWQZM8iXYdiuumUEtZGzJvLyYUU7shDKoke9ZoBz3fQqlCdocbgRZVgs2c3LMlpFrzctdQh6huTREZ896vucFra9hR34w8D0K++kg7p+CAi3wJaa+L+1fhL+ue/ynIVxVr0Ftmpod8/1CxkF6mtMpKbLam5FMeArV5qTabCfzSWyw0GAa4UcCXDjYToR5VlDb6rm5b9+b9pOpsvw9qDNaF3wjywD+yBtNGqi3ZCsl5juqFoWMUChZo3unZMvzcq5BYhi6vTPaOsFEmFfnnZTIxqRK7hvEdI10GYZCCuwF+69J8Fx9O/w/0exdE8vWXi0Erj+qtfxrm02Bc1rQ6429Q3NW87OHrR6LaaJqeWt9T/4vgz5ZVQ==</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Model/Behavior/OriginalKey/OriginalKeyBehaviorTest.php" generated-path="Plugin.NetCommons.Test.Case.Model.Behavior.OriginalKey.OriginalKeyBehaviorTest.html" hash="3becda46e466ecfa4c681a7b738e01df" package="Default">
    <docblock line="0">
      <description>OriginalKeyBehavior test case</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="NetCommons\NetCommons\Model\Behavior">
      <extends>\OriginalKeyBehaviorTestBase</extends>
      <name>OriginalKeyBehaviorTest</name>
      <full_name>\OriginalKeyBehaviorTest</full_name>
      <docblock line="19">
        <description>OriginalKeyBehavior test case</description>
        <long-description></long-description>
        <tag name="author" line="19" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="19" description="NetCommons\NetCommons\Model\Behavior"/>
        <tag name="inherited_from" description="\OriginalKeyBehaviorTestBase" refers="\OriginalKeyBehaviorTestBase" link="/classes/OriginalKeyBehaviorTestBase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="72" package="NetCommons\NetCommons\Model\Behavior">
        <name>$fixtures</name>
        <full_name>\OriginalKeyBehaviorTestBase::fixtures</full_name>
        <default>array('plugin.net_commons.original_key', 'plugin.net_commons.original_without_key')</default>
        <docblock line="72">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="72" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="NetCommons\NetCommons\Model\Behavior">
        <name>testSave</name>
        <full_name>\OriginalKeyBehaviorTest::testSave()</full_name>
        <docblock line="24">
          <description>Expect OriginalKeyBehavior beforeSave() and afterSave()</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="44" package="NetCommons\NetCommons\Model\Behavior">
        <name>testAfterSave</name>
        <full_name>\OriginalKeyBehaviorTest::testAfterSave()</full_name>
        <docblock line="44">
          <description>Expect return value array on OriginalKeyBehavior</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="59" package="NetCommons\NetCommons\Model\Behavior">
        <name>testSaveWithoutKey</name>
        <full_name>\OriginalKeyBehaviorTest::testSaveWithoutKey()</full_name>
        <docblock line="59">
          <description>Expect OriginalKeyBehavior on without key field</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="NetCommons\NetCommons\Model\Behavior">
        <name>setUp</name>
        <full_name>\OriginalKeyBehaviorTestBase::setUp()</full_name>
        <docblock line="82">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\OriginalKeyBehaviorTestBase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="NetCommons\NetCommons\Model\Behavior">
        <name>tearDown</name>
        <full_name>\OriginalKeyBehaviorTestBase::tearDown()</full_name>
        <docblock line="93">
          <description>tearDown</description>
          <long-description></long-description>
          <tag name="return" line="93" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\OriginalKeyBehaviorTestBase</inherited_from>
      </method>
    </class>
    <source>eJy1VMlO3EAQPY+/og6RPIOGMUQ5sUxYxImERAIpB0BRY5fHzfR0O73MIsQh8DE55qPmR1JuG8ZJbCQCubWrX72q96raO+/zLA+itbUA1uCT5iMumTjGxQFmbMqVBovGQswMEqDA7MUqXxAus3D4eHq7sfmuDydoD9VkoqSBz1pdY2x9AnM2I6JjlSGHM9Rs5OKMw87YPpyJ06dJtAOlR0OfJrgcQ2ZtvhVFs9lsQJcVrMC0FRM8RmmwPTGqEAM7t3WSD2WYSKIg2M/zrS1n0HTDBk/OyJIDciTsQ7hiGBTh6JDi0UeVoIge4FGNIuxtB89yuzLvNPPunbAxu+YTBjuyOplMObrZG00YFwPSWZqXs3jMRlgTeFE7+v4uHop6ybFgxjS1VKgCnFuUSet9YQbcPAo7muc0jkZ9V5gqjadsit0eMJkAS2kLym/fRyd3VzQhSJ2MLVfSO1Lhb4JO503CLINdYFqzRZcCndByKzCE3SGEBXgz7PvwmNz2wepb+Xa+8sRHNyhWzIIYbcbN+rDW7frQFAV9qT6kTBgsoVG0vP++vPuxvL9f3v1c5ZJ1qO2JskffHBPdjT40kaZcJt0wVk5a2pxSQKgxdtrwaSlgfbPXq7pCbyImpLWdLOXaPEm23dTkJLeL7mOB8yZ6Jjgzl+fexMsXs6ys91y3f26KRuu0hCkTDkstQJNv2J/2Fdlf7dEz96R1LzQaJ2yL//+8IaVtJfeLTGt6XmTGjNMPw1mgyUHKUSRPP6svJZxIXs+430WtKrz+u6pzv9bz+pvzf7yyepX2id8GvwA8O4W9</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Model/NetCommonsAppTest.php" generated-path="Plugin.NetCommons.Test.Case.Model.NetCommonsAppTest.html" hash="1769b59086427fe53f394474a326ed41" package="Default">
    <docblock line="0">
      <description>NetCommonsApp Test Case</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Ryuji AMANO" link="mailto:ryuji@ryus.co.jp"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="17" package="Default">
      <extends>\NetCommonsCakeTestCase</extends>
      <name>NetCommonsAppTest</name>
      <full_name>\NetCommonsAppTest</full_name>
      <docblock line="17">
        <description>Summary for NetCommonsApp Test Case</description>
        <long-description></long-description>
        <tag name="package" line="17" description="Default"/>
        <tag name="inherited_from" description="\NetCommonsCakeTestCase" refers="\NetCommonsCakeTestCase" link="/classes/NetCommonsCakeTestCase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="22" package="Default">
        <name>$fixtures</name>
        <full_name>\NetCommonsAppTest::fixtures</full_name>
        <default>array('plugin.net_commons.site_setting')</default>
        <docblock line="22">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="22" description="&lt;p&gt;fixture&lt;/p&gt;" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="31" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsCakeTestCase::plugin</full_name>
        <default></default>
        <docblock line="31">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="38" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsCakeTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="38">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="45" package="NetCommons\NetCommons\TestSuite">
        <name>$_defaultFixtures</name>
        <full_name>\NetCommonsCakeTestCase::_defaultFixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.rooms.roles_room', 'plugin.rooms.room', 'plugin.users.user')</default>
        <docblock line="45">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="31" package="Default">
        <name>setUp</name>
        <full_name>\NetCommonsAppTest::setUp()</full_name>
        <docblock line="31">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="31" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\NetCommonsCakeTestCase::setUp()" refers="\NetCommonsCakeTestCase::setUp()" link="/classes/NetCommonsCakeTestCase.html#method_setUp"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="41" package="Default">
        <name>tearDown</name>
        <full_name>\NetCommonsAppTest::tearDown()</full_name>
        <docblock line="41">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="41" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\NetCommonsCakeTestCase::tearDown()" refers="\NetCommonsCakeTestCase::tearDown()" link="/classes/NetCommonsCakeTestCase.html#method_tearDown"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="53" package="Default">
        <name>testNotNullFieldDefaultIsNotNull</name>
        <full_name>\NetCommonsAppTest::testNotNullFieldDefaultIsNotNull()</full_name>
        <docblock line="53">
          <description>createでnot nullカラムのデフォルトがnullにならないこと</description>
          <long-description></long-description>
          <tag name="see" line="53" description="" link="https://github.com/NetCommons3/NetCommons3/issues/7"/>
          <tag name="return" line="53" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsCakeTestCase::__construct()</full_name>
        <docblock line="76">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="76" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;The data parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="76" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="76" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsCakeTestCase::setUp()</full_name>
        <docblock line="91">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsCakeTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsCakeTestCase</inherited_from>
      </method>
    </class>
    <source>eJydlE1P2zAYx8/Jp/ChUgqCBjShSeFloLJJk6CbKGgHVCE3Ma0hdbLYplQT0tIy7Y1dNu0w7TJObCBNOyLt43jwOWbHSZtWMNFdovjx8/J/fo/thQdhMzTtyUkTTIIKYuWg1QoIXQlDsIkoA2VIkdxSu8uQs2YQAQA2OnwPg5X1lcoTsBCpxbL80pIblPbCpcTXx2QfNBkLHdtut9slgpirU5eCqJGrBJ5GwR5yWRrlIkLR7YF26lFihyyfZE2bZRLbNKV4x+EU0aI11JE1BXKG0nrgId+amM/7l3kUIcJGPLcY9jHrjPgOHMpwHylaCtZIqDJXOWZIBWecq7zVglEH7EqatzO3TdeHlA57JA7okCHi5XfyCsCLfqHlAxgBGEVQ1sKHjEc6rxHyugQJCqmRgkXtVTQNwwp93sBEgd/JyFPZwA5FjGHSsKZMI9eLtG6FoIXk0fCygxIhmZWAgwB7Q/V2OXEZDogOKk5IpYYRQkXccVLbvDTZdoE1MZ1eGoazCMoKyAZqYMqijuNggll+DqXhcatcR32hDMFoNWiTcbVmcalc2+byoLHiTQoVlkFDg8AhHW6EIEMiPiMBA4T7vuheiN4P0fsm4p+i91r0PouuXErjGxGfJB7xhYjPRfet+sbHIv4k4u9ZAxTp+0LlhWlg1uR1eQ9b9kDYvaF/TClH1L5/1+YpqwSsIkU8wsj3VtEu5D57TFNjCqVQlQekqs/HHcaU806GZBQIaq9CBmVsPtX0koZV1GBtG2zCup9nBxIufX4XmtaJ6P4WvV4CUMI8EfGp6MrlS9E7VdX06KRGFGXdFTMJ21ZeXW3b2kcdq6ZVjhXnw7p8Xmp96enTotTF3UTUr77p7M/lu+uvlyL+kAruvpdB47xLhpG6OE7B1X/b1hokDQ4bSMnBnlWTeOfyuJ/J45KG/YP8SOMPn3Po0+LcFLghzQ0UtIQdVb/PouCpYUsU15enSbuKRmIU3Y9Xx+dXr+TkvmgK2jd7oLQe72bguVIyYHZmzF6TtLc2PDvzfx2rq39k/gVX3qSi</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/AllNetCommonsTest.php" generated-path="Plugin.NetCommons.Test.Case.AllNetCommonsTest.html" hash="7f7c998bcfe833c8de9a7c30ddcace8c" package="Default">
    <docblock line="0">
      <description>NetCommons All Test Suite</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="18" package="NetCommons\NetCommons\Test\Case">
      <extends>\CakeTestSuite</extends>
      <name>AllNetCommonsTest</name>
      <full_name>\AllNetCommonsTest</full_name>
      <docblock line="18">
        <description>NetCommons All Test Suite</description>
        <long-description></long-description>
        <tag name="author" line="18" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="18" description="NetCommons\NetCommons\Test\Case"/>
        <tag name="codeCoverageIgnore" line="18" description=""/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="25" package="NetCommons\NetCommons\Test\Case">
        <name>suite</name>
        <full_name>\AllNetCommonsTest::suite()</full_name>
        <docblock line="25">
          <description>All test suite</description>
          <long-description></long-description>
          <tag name="return" line="25" description="" type="\CakeTestSuite">
            <type>\CakeTestSuite</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJy1U89u0zAYP7dP4cNQ0tE1DO001rEtaBpiGtM6cWFQeenXxKtjW7azrkI7cATxAtyReAteBu3AW/DZDm0qrduJQ1Mn/v3z5+/beakK1U7W19tknZyATWVZSmHIPufkHIwlg4pZwE23v0crW0hNBoUsgJETOqFXrKRkR9QrU8gKd/bykjLey2S562mciQkprFXbSTKdTnsCbBZ8elLnTdtTLa8gszUrA2FgNTGpET17Y5six+GzF8mkmmmWF5ak89XzZ5tb3ftdk/b/roWi2YTm0NC/aCydzUVK5+FHkMpr0Eh4nQupwUfMODU+1YLo48GNBTEyJKUTcB98XPJpfiR3DuuApnkODbbSYpnkbVqqusQKE2Opxb9xJTLLpAjsuIPCrdaa4lXOBOkTpSEfalCcZhBHyUc0i99fTD887TjVtSTqkmhtE5/DYXq8PxgMh50XTsCrIV/AdDlDbJRmwo7jyOV+grcUrNwJDOrU1h2UcTojpvEKpZ6hltMJ6O1tRW0R/8OSHomcQYSLVwP35mod+SCHko9A10nCS7xQDWHhJgPlimAQR7Wmsxg/t6Jz7W71ksMBFPSaSe1MDlC6h9MVdT1mwETOwUrxjsH0gMtscmRLfgRcwX3wt9irTFD+BmYPiJ66KzLFw9ZJcvfr2+/PP+++fP3z/YfnLTrHJ8G1kgKEdeSG/AJ2qGkJj8POpCzPJF+FTJIGdl+pVAqrJeehAitwD4DurfsS4rGqL4FX1HwJs6Lic0xolDHj4Hqk7qqNXasBYlFxjo276CKcCY+MQhOPccJpVpC45lND/CrMWouNSWyqS2N1AHTJxlaH9Pt9Enn7GlbP1MYuHY1ctEOEBoLP1rptux8+6skPcNy6bd+2/wLkmfpQ</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Controller/Component/backup/NetCommonsBlockComponentTest.php" generated-path="Plugin.NetCommons.Test.Case.Controller.Component.backup.NetCommonsBlockComponentTest.html" hash="6e964fcc28620265974c24ef693d9d77" package="Default">
    <docblock line="0">
      <description>RoomsController Test Case</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends>\Controller</extends>
      <name>TestNetCommonsBlockController</name>
      <full_name>\TestNetCommonsBlockController</full_name>
      <docblock line="26">
        <description>Controller for NetCommonsBlock component test</description>
        <long-description></long-description>
        <tag name="author" line="26" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="26" description="NetCommons\NetCommons\Test\Case\Controller"/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="" line="36" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends>\ControllerTestCase</extends>
      <name>NetCommonsBlockComponentTest</name>
      <full_name>\NetCommonsBlockComponentTest</full_name>
      <docblock line="36">
        <description>NetCommonsBlock Component test case</description>
        <long-description></long-description>
        <tag name="author" line="36" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="36" description="NetCommons\NetCommons\Test\Case\Controller"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$fixtures</name>
        <full_name>\NetCommonsBlockComponentTest::fixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.boxes.box', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.plugin_manager.plugin', 'plugin.rooms.room', 'plugin.users.user')</default>
        <docblock line="43">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="58" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$NetCommonsBlock</name>
        <full_name>\NetCommonsBlockComponentTest::NetCommonsBlock</full_name>
        <default>null</default>
        <docblock line="58">
          <description>NetCommonsBlock component</description>
          <long-description></long-description>
          <tag name="var" line="58" description="&lt;p&gt;NetCommonsBlock component&lt;/p&gt;" type="\Component" variable="">
            <type>\Component</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="65" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$BlockController</name>
        <full_name>\NetCommonsBlockComponentTest::BlockController</full_name>
        <default>null</default>
        <docblock line="65">
          <description>Controller for NetCommonsBlock component test</description>
          <long-description></long-description>
          <tag name="var" line="65" description="&lt;p&gt;Controller for NetCommonsBlock component test&lt;/p&gt;" type="\Controller" variable="">
            <type>\Controller</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="72" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>setUp</name>
        <full_name>\NetCommonsBlockComponentTest::setUp()</full_name>
        <docblock line="72">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="72" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="90" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>tearDown</name>
        <full_name>\NetCommonsBlockComponentTest::tearDown()</full_name>
        <docblock line="90">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="90" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testInitialize</name>
        <full_name>\NetCommonsBlockComponentTest::testInitialize()</full_name>
        <docblock line="102">
          <description>testInitialize method</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJy9Vc1uEzEQPmefwodKTat2lyIkpNCWlgISElSohQNSJeRuJombXXtre5sU1AONhLjwCDwASD31hFTBw+ylj8F4f7LeTTaiQuLieGe+mfk+ezzZfBwNIsdbXXXIKjkQIlR7gmspggAkeQNKkz2qAJ3Gv0NjPRCS7AvJhoLsSsrIJsV1hzPmUt89ibZt3OFADICRfTqkJyykZJPnOzUQMXp2+iFlgeuLMAsLGB+SgdZRx/NGo5HLQaMvFFy5QvbJPui97JO8luIEfJ1H+cAVNAd6OcLVY20neZmZ0yS+iM4l6w9Q73R3/97Gg7X5VT3H2Y2iTidWoNrL5ZEtrxH7a+VRBUaHcACnMZ6qwWHikZDDuSAVYT1YgBIhIoAjNSzkayb4wtJPAuEPDSLdKPeV6EJQw5RCU9C0RM4i97llDa+EVDO92y1BpodMC9WyGPNhzDSY0KL/rNbrmTarEiJ+UY5ojK715F17LaL+kPbBKnJkbQ29I0P7qOSUXrsfUKXShzFzXFPuMNbAu8qW89FxLqYy67r2KrqIP/vg/qu4pj5Ip8GstuKCjcZc4HM21rEEVag4o5JQKel5WqUVxcf4IslSL4eRrczbdlqt5SiI+4y7x1mfHmd9azvEGJRZK9aepCGa05+KI9x4yN2A8n6M51HxZD/vQ8rRI/PPCkKacZiuFTP2uFTpasxW+zb2q30O5WUvglunVIdtER4HwT8+mozJNPCuOSx69eav01Og30ZFWQl44ZycCdatZOnFPJ1hGbq9gr3UakVUYslOJ7dhylbL85LJ5+TyZzL5klxeJ5Nrs5lcJZObZPL99sdV8un37a8bXBG7ZM1bQwtGxLKYhFNMNm4roMyUo/SAqfXtOVIRvnAWtG0Sa6RSLk2NgnId31IRXzNNM1KmY74gOfsHUOE6p2swqulpt60CC7Ksb58xGB2C1oz3MWWPBgoQXo42DVQ+FSNOQsDB1f3rey/ialdfmtPbj/HUkOtcbintCqB2FSs1okq/4EwzGrAPcHe6dnROuunMWAlsZlZE4wAGqZ+dxni0DXBso4ZKfk3shfMHfsloIg==</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Controller/Component/backup/NetCommonsRoomRoleComponentTest.php" generated-path="Plugin.NetCommons.Test.Case.Controller.Component.backup.NetCommonsRoomRoleComponentTest.html" hash="357f74a530d1b450f0be5dc371eadae1" package="Default">
    <docblock line="0">
      <description>RoomsController Test Case</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends/>
      <name>TestAuthComponent</name>
      <full_name>\TestAuthComponent</full_name>
      <docblock line="26">
        <description>AuthComponent for NetCommonsRoomRole component test</description>
        <long-description></long-description>
        <tag name="author" line="26" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="26" description="NetCommons\NetCommons\Test\Case\Controller"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="33" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$allowedActions</name>
        <full_name>\TestAuthComponent::allowedActions</full_name>
        <default>array('index', 'view')</default>
        <docblock line="33">
          <description>allowedActions</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="40" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>login</name>
        <full_name>\TestAuthComponent::login()</full_name>
        <docblock line="40">
          <description>login method</description>
          <long-description></long-description>
          <tag name="return" line="40" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="56" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>user</name>
        <full_name>\TestAuthComponent::user()</full_name>
        <docblock line="56">
          <description>user method</description>
          <long-description></long-description>
          <tag name="param" line="56" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="56" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="" line="73" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends>\Controller</extends>
      <name>TestNetCommonsRoomRoleController</name>
      <full_name>\TestNetCommonsRoomRoleController</full_name>
      <docblock line="73">
        <description>Controller for NetCommonsRoomRole component test</description>
        <long-description></long-description>
        <tag name="author" line="73" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="73" description="NetCommons\NetCommons\Test\Case\Controller"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="80" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$Auth</name>
        <full_name>\TestNetCommonsRoomRoleController::Auth</full_name>
        <default>null</default>
        <docblock line="80">
          <description>Auth</description>
          <long-description></long-description>
          <tag name="var" line="80" description="" type="\AuthComponent" variable="">
            <type>\AuthComponent</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="" line="95" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends>\ControllerTestCase</extends>
      <name>NetCommonsRoomRoleComponentTest</name>
      <full_name>\NetCommonsRoomRoleComponentTest</full_name>
      <docblock line="95">
        <description>NetCommonsRoomRole Component test case</description>
        <long-description></long-description>
        <tag name="author" line="95" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="95" description="NetCommons\NetCommons\Test\Case\Controller"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="102" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$fixtures</name>
        <full_name>\NetCommonsRoomRoleComponentTest::fixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.plugin_manager.plugin', 'plugin.roles.default_role_permission', 'plugin.rooms.roles_room', 'plugin.rooms.roles_rooms_user', 'plugin.rooms.room_role_permission', 'plugin.rooms.room', 'plugin.users.user')</default>
        <docblock line="102">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="102" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$NetCommonsRoomRole</name>
        <full_name>\NetCommonsRoomRoleComponentTest::NetCommonsRoomRole</full_name>
        <default>null</default>
        <docblock line="122">
          <description>NetCommonsRoomRole component</description>
          <long-description></long-description>
          <tag name="var" line="122" description="&lt;p&gt;NetCommonsRoomRole component&lt;/p&gt;" type="\Component" variable="">
            <type>\Component</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="129" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$RoomRoleController</name>
        <full_name>\NetCommonsRoomRoleComponentTest::RoomRoleController</full_name>
        <default>null</default>
        <docblock line="129">
          <description>Controller for NetCommonsRoomRole component test</description>
          <long-description></long-description>
          <tag name="var" line="129" description="&lt;p&gt;Controller for NetCommonsRoomRole component test&lt;/p&gt;" type="\Controller" variable="">
            <type>\Controller</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="136" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>setUp</name>
        <full_name>\NetCommonsRoomRoleComponentTest::setUp()</full_name>
        <docblock line="136">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="136" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="157" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>tearDown</name>
        <full_name>\NetCommonsRoomRoleComponentTest::tearDown()</full_name>
        <docblock line="157">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="157" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="170" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testInitialize</name>
        <full_name>\NetCommonsRoomRoleComponentTest::testInitialize()</full_name>
        <docblock line="170">
          <description>testInitialize method</description>
          <long-description></long-description>
          <tag name="return" line="170" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="185" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testStartup</name>
        <full_name>\NetCommonsRoomRoleComponentTest::testStartup()</full_name>
        <docblock line="185">
          <description>testInitialize method</description>
          <long-description></long-description>
          <tag name="return" line="185" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="211" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testSetView</name>
        <full_name>\NetCommonsRoomRoleComponentTest::testSetView()</full_name>
        <docblock line="211">
          <description>testSetView method</description>
          <long-description></long-description>
          <tag name="return" line="211" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="244" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testSetViewNoLogin</name>
        <full_name>\NetCommonsRoomRoleComponentTest::testSetViewNoLogin()</full_name>
        <docblock line="244">
          <description>testSetViewNoLogin method</description>
          <long-description></long-description>
          <tag name="return" line="244" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="275" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testSetViewNotExistUser</name>
        <full_name>\NetCommonsRoomRoleComponentTest::testSetViewNotExistUser()</full_name>
        <docblock line="275">
          <description>testSetViewNotExistUser method</description>
          <long-description></long-description>
          <tag name="return" line="275" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="292" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testSetViewRoomRolePermisionDataError</name>
        <full_name>\NetCommonsRoomRoleComponentTest::testSetViewRoomRolePermisionDataError()</full_name>
        <docblock line="292">
          <description>testSetViewRoomRolePermisionDataError method</description>
          <long-description></long-description>
          <tag name="return" line="292" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="316" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testSetViewDefaultRolePermissionDataError</name>
        <full_name>\NetCommonsRoomRoleComponentTest::testSetViewDefaultRolePermissionDataError()</full_name>
        <docblock line="316">
          <description>testSetViewDefaultRolePermissionDataError method</description>
          <long-description></long-description>
          <tag name="return" line="316" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Controller/Component/backup/NetCommonsFrameComponentTest.php" generated-path="Plugin.NetCommons.Test.Case.Controller.Component.backup.NetCommonsFrameComponentTest.html" hash="5fa9f78829d4125a61eaad8a27b88fa1" package="Default">
    <docblock line="0">
      <description>RoomsController Test Case</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends>\Controller</extends>
      <name>TestNetCommonsFrameController</name>
      <full_name>\TestNetCommonsFrameController</full_name>
      <docblock line="25">
        <description>Controller for NetCommonsFrame component test</description>
        <long-description></long-description>
        <tag name="author" line="25" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="25" description="NetCommons\NetCommons\Test\Case\Controller"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="33" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>camelizeKeyRecursive</name>
        <full_name>\TestNetCommonsFrameController::camelizeKeyRecursive()</full_name>
        <docblock line="33">
          <description>camelizeKeyRecursive</description>
          <long-description></long-description>
          <tag name="param" line="33" description="&lt;p&gt;data to camelize&lt;/p&gt;" type="array" variable="$orig">
            <type>array</type>
          </tag>
          <tag name="return" line="33" description="camelized data" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orig</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="" line="45" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends>\ControllerTestCase</extends>
      <name>NetCommonsFrameComponentTest</name>
      <full_name>\NetCommonsFrameComponentTest</full_name>
      <docblock line="45">
        <description>NetCommonsFrame Component test case</description>
        <long-description></long-description>
        <tag name="author" line="45" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="45" description="NetCommons\NetCommons\Test\Case\Controller"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="52" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$fixtures</name>
        <full_name>\NetCommonsFrameComponentTest::fixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.rooms.space', 'plugin.users.user')</default>
        <docblock line="52">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="52" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="70" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$NetCommonsFrame</name>
        <full_name>\NetCommonsFrameComponentTest::NetCommonsFrame</full_name>
        <default>null</default>
        <docblock line="70">
          <description>NetCommonsFrame component</description>
          <long-description></long-description>
          <tag name="var" line="70" description="&lt;p&gt;NetCommonsFrame component&lt;/p&gt;" type="\Component" variable="">
            <type>\Component</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="77" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$FrameController</name>
        <full_name>\NetCommonsFrameComponentTest::FrameController</full_name>
        <default>null</default>
        <docblock line="77">
          <description>Controller for NetCommonsFrame component test</description>
          <long-description></long-description>
          <tag name="var" line="77" description="&lt;p&gt;Controller for NetCommonsFrame component test&lt;/p&gt;" type="\Controller" variable="">
            <type>\Controller</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="84" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>setUp</name>
        <full_name>\NetCommonsFrameComponentTest::setUp()</full_name>
        <docblock line="84">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="84" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="104" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>tearDown</name>
        <full_name>\NetCommonsFrameComponentTest::tearDown()</full_name>
        <docblock line="104">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="104" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="118" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testInitialize</name>
        <full_name>\NetCommonsFrameComponentTest::testInitialize()</full_name>
        <docblock line="118">
          <description>testInitialize method</description>
          <long-description></long-description>
          <tag name="return" line="118" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="134" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testStartup</name>
        <full_name>\NetCommonsFrameComponentTest::testStartup()</full_name>
        <docblock line="134">
          <description>testInitialize method</description>
          <long-description></long-description>
          <tag name="return" line="134" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="151" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testSetView</name>
        <full_name>\NetCommonsFrameComponentTest::testSetView()</full_name>
        <docblock line="151">
          <description>testSetView method</description>
          <long-description></long-description>
          <tag name="return" line="151" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="178" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testSetViewNotExistFrameId</name>
        <full_name>\NetCommonsFrameComponentTest::testSetViewNotExistFrameId()</full_name>
        <docblock line="178">
          <description>testSetViewNotExistFrameId method</description>
          <long-description></long-description>
          <tag name="return" line="178" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzlV91qG0cUvpaeYi4MKxtlFYWGYsV2bVwZTIspdhMoGMxkNZLG2p3ZzMxacksuGkHpTR+hD9BCrnJVCO3D6CaP0TM/uzu7+qmdmhbam92dM9/5/+aMtPdZOk6bnZ2dJtpB55wn8pgzJXgcE4G+JlKhYywJbOr9Q5ypMRfojAs64ehIYIr2MDwPGaUhjsLr9MDHXYz5mFB0hif4miYY7TH3Jcc8g53DUYJpHEY8sWoxZRM0VirtdTrT6TRkRMFewpkMuRihM6KO7RJ9Jfg1iZTTigiTZL1ixyFCNVO+kS+t2BiJeHor6GgM+RZfTx53P2mv9tppNo/StNfLJJGtoCxZ0Eb+avtZBYYn5Jy8yqCqGgeGp1xMVoJkCv7IBhRPAEEYhAaOIkU52+i6TOJE4IQU6s6D2wtL/U4JqVr65qgEaX5oetSsaPFFRhXRqjm3PFoNNYWqAaEod4cUaNf4dl8epTia4BHxnFx6nzq8Sx32ZRmTaWkUYykN6ZfKVcROZoqwgfTT+a7IMQJsTL8lX5DbcxJlQtKb4uikcE4ShIXAt2gLzs8IDbDCSPFCy8AEUZlgDpfvDAzWxNhIs5dAZyQVVvAaZsw0f6XrlvGzDQE2Gs6ukTxrNl43m6+LsOu9OK70AkwvDYB/tCHruGum03I/clJ6fTmhM8ieyDyLGyxshSsl3Ro6GNq3uy2oW5DG2Yiy8GXMo4m0r6Dtb/AZkfq5WkrkVQqZVzYjiBVTRoQsPyuAoc5T2ldlI+l+ysIYs1FWt6mdyHDJlX1dJZjBjnDLCkLomR9K6FBVE047xKefWuwd5LUn169uSaFNcK/2ddg+Ylkc/83xYSMpFO9rwwuvPgbq4Uminqe5W3fWbjgdVKwUh9WgW/ZgwlwAl72ek4HJRgMcDekIqNjrTQXMUXPDgMRrPQqucWDRnc5i/sPizW+L+Y+LN+8W83f6Y/52MX+/mP/y4de3i+//+PD7e3gCdsu7g3QSZIo8iXZfYOwVVAFZkUOpMZWPDlYUBuAbZ2jLD6KNKu6MaUjI5fGzSeInm9NSKsXVlwe5fClWYl3BMdBaN15anoMNVh4d3FAyvSBKUTYCk0McS2InrOOGIlh8zqcMJQSG5+DOLMn1akQpxab7GVQNYl0Zmwm7Aqi14u5003TfrqUl1SmjimJ979w/OV/bpbiuwrQErs0DtMkshXbBbenN70ZgpujpIED7B+hxuxTBTWlkQWCFehBWYXn6uRSEPhHgbiJC9V9l0PFW4RwIvTJEy5MXWMiHLuOFwkJl6cPUcI22dD7+k+WHw/sCNj+q9lY1r71LFirQNSfr32vGnWaVEhnZhC7TyTPbGFZeC5v6X9Ohu4oOZnXVdawwv7ccPHjqCwsFs7p6ukyj7koaPbHSCLOIxM9F7JFw2+/Zg9PrjKv+jEp14or68WyrWaoefOhC3wXbn0UkNbdgcMoUEQzHfSG4KOTuB4RH293d3f81ce0foz8BeWCrMQ==</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Controller/NetCommons/NetCommonsControllerCsrfTokenTest.php" generated-path="Plugin.NetCommons.Test.Case.Controller.NetCommons.NetCommonsControllerCsrfTokenTest.html" hash="6192ac50b9bc20938264893feff42e07" package="Default">
    <docblock line="0">
      <description>NetCommonsController::csrfToken()のテスト</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends>\NetCommonsControllerTestCase</extends>
      <name>NetCommonsControllerCsrfTokenTest</name>
      <full_name>\NetCommonsControllerCsrfTokenTest</full_name>
      <docblock line="20">
        <description>NetCommonsController::csrfToken()のテスト</description>
        <long-description></long-description>
        <tag name="author" line="20" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
        <tag name="package" line="20" description="NetCommons\NetCommons\Test\Case\Controller"/>
        <tag name="inherited_from" description="\NetCommonsControllerTestCase" refers="\NetCommonsControllerTestCase" link="/classes/NetCommonsControllerTestCase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$fixtures</name>
        <full_name>\NetCommonsControllerCsrfTokenTest::fixtures</full_name>
        <default>array()</default>
        <docblock line="27">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsControllerTestCase::plugin</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="NetCommons\NetCommons\TestSuite">
        <name>$data</name>
        <full_name>\NetCommonsControllerTestCase::data</full_name>
        <default>null</default>
        <docblock line="42">
          <description>Post data</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="49" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsControllerTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="49">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="NetCommons\NetCommons\TestSuite">
        <name>$_fixtures</name>
        <full_name>\NetCommonsControllerTestCase::_fixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.net_commons.site_setting', 'plugin.pages.languages_page', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.plugin_manager.plugins_role', 'plugin.plugin_manager.plugins_room', 'plugin.roles.default_role_permission', 'plugin.roles.role', 'plugin.rooms.roles_room', 'plugin.rooms.roles_rooms_user', 'plugin.rooms.room', 'plugin.rooms.room_role_permission', 'plugin.rooms.space', 'plugin.users.user')</default>
        <docblock line="56">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="34" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>setUp</name>
        <full_name>\NetCommonsControllerCsrfTokenTest::setUp()</full_name>
        <docblock line="34">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="34" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\NetCommonsControllerTestCase::setUp()" refers="\NetCommonsControllerTestCase::setUp()" link="/classes/NetCommonsControllerTestCase.html#method_setUp"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="50" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>tearDown</name>
        <full_name>\NetCommonsControllerCsrfTokenTest::tearDown()</full_name>
        <docblock line="50">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="50" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\NetCommonsControllerTestCase::tearDown()" refers="\NetCommonsControllerTestCase::tearDown()" link="/classes/NetCommonsControllerTestCase.html#method_tearDown"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="59" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testCsrfToken</name>
        <full_name>\NetCommonsControllerCsrfTokenTest::testCsrfToken()</full_name>
        <docblock line="59">
          <description>csrfTokenのテスト</description>
          <long-description></long-description>
          <tag name="return" line="59" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsControllerTestCase::__construct()</full_name>
        <docblock line="91">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="91" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The date parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="107" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsControllerTestCase::setUp()</full_name>
        <docblock line="107">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="107" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsControllerTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="138" package="NetCommons\NetCommons\TestSuite">
        <name>loadTestPlugin</name>
        <full_name>\NetCommonsControllerTestCase::loadTestPlugin()</full_name>
        <docblock line="138">
          <description>Load TestPlugin</description>
          <long-description></long-description>
          <tag name="param" line="138" description="&lt;p&gt;CakeTestCase&lt;/p&gt;" type="\CakeTestCase" variable="$test">
            <type>\CakeTestCase</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Plugin name&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Test plugin name&lt;/p&gt;" type="string" variable="$testPlugin">
            <type>string</type>
          </tag>
          <tag name="return" line="138" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default></default>
          <type>\CakeTestCase</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$testPlugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="173" package="NetCommons\NetCommons\TestSuite">
        <name>_testAction</name>
        <full_name>\NetCommonsControllerTestCase::_testAction()</full_name>
        <docblock line="173">
          <description>Lets you do functional tests of a controller action.</description>
          <long-description>### Options:

- `data` Will be used as the request data. If the `method` is GET,
  data will be used a GET params. If the `method` is POST, it will be used
  as POST data. By setting `$options['data']` to a string, you can simulate XML or JSON
  payloads to your controllers allowing you to test REST webservices.
- `method` POST or GET. Defaults to POST.
- `return` Specify the return type you want. Choose from:
    - `vars` Get the set view variables.
    - `view` Get the rendered view, without a layout.
    - `contents` Get the rendered view including the layout.
    - `result` Get the return value of the controller action. Useful
      for testing requestAction methods.
- `type` json or html, Defaults to html.</long-description>
          <tag name="param" line="173" description="&lt;p&gt;The url to test&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="&lt;p&gt;See options&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="173" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="196" package="NetCommons\NetCommons\TestSuite">
        <name>_testNcAction</name>
        <full_name>\NetCommonsControllerTestCase::_testNcAction()</full_name>
        <docblock line="196">
          <description>Assert input tag</description>
          <long-description>### $returnについて
 - viewFile: viewファイル名を戻す
 - json: JSONをでコードした配列を戻す
 - 上記以外: $this-&gt;testActionのreturnで指定した内容を戻す</long-description>
          <tag name="param" line="196" description="&lt;p&gt;URL配列&lt;/p&gt;" type="array" variable="$url">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;リクエストパラメータオプション&lt;/p&gt;" type="array" variable="$paramsOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="196" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramsOptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="244" package="NetCommons\NetCommons\TestSuite">
        <name>_testGetAction</name>
        <full_name>\NetCommonsControllerTestCase::_testGetAction()</full_name>
        <docblock line="244">
          <description>viewアクションのテスト</description>
          <long-description></long-description>
          <tag name="param" line="244" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;テストの期待値&lt;/p&gt;" type="array" variable="$assert">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="244" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$assert</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="273" package="NetCommons\NetCommons\TestSuite">
        <name>_testPostAction</name>
        <full_name>\NetCommonsControllerTestCase::_testPostAction()</full_name>
        <docblock line="273">
          <description>addアクションのPOSTテスト</description>
          <long-description></long-description>
          <tag name="param" line="273" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="273" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="293" package="NetCommons\NetCommons\TestSuite">
        <name>_testActionOnValidationError</name>
        <full_name>\NetCommonsControllerTestCase::_testActionOnValidationError()</full_name>
        <docblock line="293">
          <description>addアクションのValidateionErrorテスト</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;ValidationError&lt;/p&gt;" type="string|null" variable="$validationError">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="293" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$validationError</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="335" package="NetCommons\NetCommons\TestSuite">
        <name>generateNc</name>
        <full_name>\NetCommonsControllerTestCase::generateNc()</full_name>
        <docblock line="335">
          <description>Generates a mocked controller and mocks any classes passed to `$mocks`. By
default, `_stop()` is stubbed as is sending the response headers, so to not
interfere with testing.</description>
          <long-description>### Mocks:

- `methods` Methods to mock on the controller. `_stop()` is mocked by default
- `models` Models to mock. Models are added to the ClassRegistry so any
  time they are instantiated the mock will be created. Pass as key value pairs
  with the value being specific methods on the model to mock. If `true` or
  no value is passed, the entire model will be mocked.
- `components` Components to mock. Components are only mocked on this controller
  and not within each other (i.e., components on components)</long-description>
          <tag name="param" line="335" description="&lt;p&gt;Controller name&lt;/p&gt;" type="string" variable="$controller">
            <type>string</type>
          </tag>
          <tag name="param" line="335" description="&lt;p&gt;List of classes and methods to mock&lt;/p&gt;" type="array" variable="$mocks">
            <type>array</type>
          </tag>
          <tag name="return" line="335" description="Mocked controller" type="\Controller">
            <type>\Controller</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mocks</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="357" package="NetCommons\NetCommons\TestSuite">
        <name>asserts</name>
        <full_name>\NetCommonsControllerTestCase::asserts()</full_name>
        <docblock line="357">
          <description>Asserts</description>
          <long-description></long-description>
          <tag name="param" line="357" description="&lt;p&gt;テストAssert&lt;/p&gt;" type="array" variable="$asserts">
            <type>array</type>
          </tag>
          <tag name="param" line="357" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="return" line="357" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$asserts</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="395" package="NetCommons\NetCommons\TestSuite">
        <name>assertInput</name>
        <full_name>\NetCommonsControllerTestCase::assertInput()</full_name>
        <docblock line="395">
          <description>Assert input tag</description>
          <long-description></long-description>
          <tag name="param" line="395" description="&lt;p&gt;タグタイプ(input or textearea or button)&lt;/p&gt;" type="string" variable="$tagType">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのname属性&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのvalue値&lt;/p&gt;" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="395" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tagType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="431" package="NetCommons\NetCommons\TestSuite">
        <name>assertActionLink</name>
        <full_name>\NetCommonsControllerTestCase::assertActionLink()</full_name>
        <docblock line="431">
          <description>Assert アクションリンク</description>
          <long-description></long-description>
          <tag name="param" line="431" description="&lt;p&gt;アクション&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;リンクの有無&lt;/p&gt;" type="boolean" variable="$linkExist">
            <type>boolean</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="431" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$linkExist</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
    </class>
    <source>eJzFUstu00AUXcdfMYtKdqLUBsTKbUMjU4RUVCEa2DRVNTg3setkxpq5zkNVF1AJ8TXs+Z78CHf8ilMZkR2b0eg+zj333HP6Jo1Sy+v1LNZjV4CBXCyk0IEUqOR8Dsr3Q62mI5mAcLrbb7+2Tz+2339vn35Sg+k55xlGUrFLGUHMRqD4LAujmJ0mWP3PwwJUALpSzQZ52zwWCYsQU9/zVquVS8myzNQ0qLCPSt5DiGVXCELD3xu9ssLFNTZBPhThHCSU6UbFswhZUP9evXj5ut8+1bOsYZr6fqZBO3abRnafNeJuI9E9+VfvCDQGXMMzDBO+zmIEA/E/7pPyMOEzaMwcN76G3tjQHu+Y5FKFc651K9Ggoml6GawRxKS9spKEPdSbv4vXmCnQ1VJLrhhXim/yoZ00+0p3Z0fTsoydFVmnIZ4G/JxW/QqoTrCljCd7CNNMhBhLUVQ7XaLQ6aRcgUDfL2MnFDrCKNbHgxkIEhHBoVCneb7dl+5aUDElHZukTqUgOG2zs0Ez1bGHdKlG1CbTkIP6ebZrlY8Z/1gvhcDVW7kSbAF05cnB61V9zzbchfem1A5r89cBs+icO4/mAz/JDI13abCGC+MFTaV6T1zTN8whHNsjb96VNt3719Tcey1FLbZdsMrVJM0F5op3jR1qfDIqKBya+vdcXwJ13eVQhFKWhLUnjwfLGFZfiO6NPeHI7dsm1RaoBDaH4dxUU29b2F1JvFikuHECnsA1aKOS7yvgk4qsWytQ7GfO9mj9Ae9V9ro=</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Controller/NetCommonsApp/NetCommonsAppControllerPingTest.php" generated-path="Plugin.NetCommons.Test.Case.Controller.NetCommonsApp.NetCommonsAppControllerPingTest.html" hash="f63bfea98dcc4114140ab3534c3b6b02" package="Default">
    <docblock line="0">
      <description>NetCommonsAppControllerテスト</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends>\NetCommonsControllerTestCase</extends>
      <name>NetCommonsAppControllerPingTest</name>
      <full_name>\NetCommonsAppControllerPingTest</full_name>
      <docblock line="21">
        <description>NetCommonsAppControllerテスト</description>
        <long-description></long-description>
        <tag name="author" line="21" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="21" description="NetCommons\NetCommons\Test\Case\Controller"/>
        <tag name="inherited_from" description="\NetCommonsControllerTestCase" refers="\NetCommonsControllerTestCase" link="/classes/NetCommonsControllerTestCase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="28" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$fixtures</name>
        <full_name>\NetCommonsAppControllerPingTest::fixtures</full_name>
        <default>array()</default>
        <docblock line="28">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsControllerTestCase::plugin</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="NetCommons\NetCommons\TestSuite">
        <name>$data</name>
        <full_name>\NetCommonsControllerTestCase::data</full_name>
        <default>null</default>
        <docblock line="42">
          <description>Post data</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="49" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsControllerTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="49">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="NetCommons\NetCommons\TestSuite">
        <name>$_fixtures</name>
        <full_name>\NetCommonsControllerTestCase::_fixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.net_commons.site_setting', 'plugin.pages.languages_page', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.plugin_manager.plugins_role', 'plugin.plugin_manager.plugins_room', 'plugin.roles.default_role_permission', 'plugin.roles.role', 'plugin.rooms.roles_room', 'plugin.rooms.roles_rooms_user', 'plugin.rooms.room', 'plugin.rooms.room_role_permission', 'plugin.rooms.space', 'plugin.users.user')</default>
        <docblock line="56">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>setUp</name>
        <full_name>\NetCommonsAppControllerPingTest::setUp()</full_name>
        <docblock line="35">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\NetCommonsControllerTestCase::setUp()" refers="\NetCommonsControllerTestCase::setUp()" link="/classes/NetCommonsControllerTestCase.html#method_setUp"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testPing</name>
        <full_name>\NetCommonsAppControllerPingTest::testPing()</full_name>
        <docblock line="45">
          <description>NetCommonsAppController::ping()のテスト</description>
          <long-description></long-description>
          <tag name="return" line="45" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsControllerTestCase::__construct()</full_name>
        <docblock line="91">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="91" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The date parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="107" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsControllerTestCase::setUp()</full_name>
        <docblock line="107">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="107" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsControllerTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="138" package="NetCommons\NetCommons\TestSuite">
        <name>loadTestPlugin</name>
        <full_name>\NetCommonsControllerTestCase::loadTestPlugin()</full_name>
        <docblock line="138">
          <description>Load TestPlugin</description>
          <long-description></long-description>
          <tag name="param" line="138" description="&lt;p&gt;CakeTestCase&lt;/p&gt;" type="\CakeTestCase" variable="$test">
            <type>\CakeTestCase</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Plugin name&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Test plugin name&lt;/p&gt;" type="string" variable="$testPlugin">
            <type>string</type>
          </tag>
          <tag name="return" line="138" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default></default>
          <type>\CakeTestCase</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$testPlugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="173" package="NetCommons\NetCommons\TestSuite">
        <name>_testAction</name>
        <full_name>\NetCommonsControllerTestCase::_testAction()</full_name>
        <docblock line="173">
          <description>Lets you do functional tests of a controller action.</description>
          <long-description>### Options:

- `data` Will be used as the request data. If the `method` is GET,
  data will be used a GET params. If the `method` is POST, it will be used
  as POST data. By setting `$options['data']` to a string, you can simulate XML or JSON
  payloads to your controllers allowing you to test REST webservices.
- `method` POST or GET. Defaults to POST.
- `return` Specify the return type you want. Choose from:
    - `vars` Get the set view variables.
    - `view` Get the rendered view, without a layout.
    - `contents` Get the rendered view including the layout.
    - `result` Get the return value of the controller action. Useful
      for testing requestAction methods.
- `type` json or html, Defaults to html.</long-description>
          <tag name="param" line="173" description="&lt;p&gt;The url to test&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="&lt;p&gt;See options&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="173" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="196" package="NetCommons\NetCommons\TestSuite">
        <name>_testNcAction</name>
        <full_name>\NetCommonsControllerTestCase::_testNcAction()</full_name>
        <docblock line="196">
          <description>Assert input tag</description>
          <long-description>### $returnについて
 - viewFile: viewファイル名を戻す
 - json: JSONをでコードした配列を戻す
 - 上記以外: $this-&gt;testActionのreturnで指定した内容を戻す</long-description>
          <tag name="param" line="196" description="&lt;p&gt;URL配列&lt;/p&gt;" type="array" variable="$url">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;リクエストパラメータオプション&lt;/p&gt;" type="array" variable="$paramsOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="196" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramsOptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="244" package="NetCommons\NetCommons\TestSuite">
        <name>_testGetAction</name>
        <full_name>\NetCommonsControllerTestCase::_testGetAction()</full_name>
        <docblock line="244">
          <description>viewアクションのテスト</description>
          <long-description></long-description>
          <tag name="param" line="244" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;テストの期待値&lt;/p&gt;" type="array" variable="$assert">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="244" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$assert</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="273" package="NetCommons\NetCommons\TestSuite">
        <name>_testPostAction</name>
        <full_name>\NetCommonsControllerTestCase::_testPostAction()</full_name>
        <docblock line="273">
          <description>addアクションのPOSTテスト</description>
          <long-description></long-description>
          <tag name="param" line="273" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="273" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="293" package="NetCommons\NetCommons\TestSuite">
        <name>_testActionOnValidationError</name>
        <full_name>\NetCommonsControllerTestCase::_testActionOnValidationError()</full_name>
        <docblock line="293">
          <description>addアクションのValidateionErrorテスト</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;ValidationError&lt;/p&gt;" type="string|null" variable="$validationError">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="293" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$validationError</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="335" package="NetCommons\NetCommons\TestSuite">
        <name>generateNc</name>
        <full_name>\NetCommonsControllerTestCase::generateNc()</full_name>
        <docblock line="335">
          <description>Generates a mocked controller and mocks any classes passed to `$mocks`. By
default, `_stop()` is stubbed as is sending the response headers, so to not
interfere with testing.</description>
          <long-description>### Mocks:

- `methods` Methods to mock on the controller. `_stop()` is mocked by default
- `models` Models to mock. Models are added to the ClassRegistry so any
  time they are instantiated the mock will be created. Pass as key value pairs
  with the value being specific methods on the model to mock. If `true` or
  no value is passed, the entire model will be mocked.
- `components` Components to mock. Components are only mocked on this controller
  and not within each other (i.e., components on components)</long-description>
          <tag name="param" line="335" description="&lt;p&gt;Controller name&lt;/p&gt;" type="string" variable="$controller">
            <type>string</type>
          </tag>
          <tag name="param" line="335" description="&lt;p&gt;List of classes and methods to mock&lt;/p&gt;" type="array" variable="$mocks">
            <type>array</type>
          </tag>
          <tag name="return" line="335" description="Mocked controller" type="\Controller">
            <type>\Controller</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mocks</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="357" package="NetCommons\NetCommons\TestSuite">
        <name>asserts</name>
        <full_name>\NetCommonsControllerTestCase::asserts()</full_name>
        <docblock line="357">
          <description>Asserts</description>
          <long-description></long-description>
          <tag name="param" line="357" description="&lt;p&gt;テストAssert&lt;/p&gt;" type="array" variable="$asserts">
            <type>array</type>
          </tag>
          <tag name="param" line="357" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="return" line="357" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$asserts</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="395" package="NetCommons\NetCommons\TestSuite">
        <name>assertInput</name>
        <full_name>\NetCommonsControllerTestCase::assertInput()</full_name>
        <docblock line="395">
          <description>Assert input tag</description>
          <long-description></long-description>
          <tag name="param" line="395" description="&lt;p&gt;タグタイプ(input or textearea or button)&lt;/p&gt;" type="string" variable="$tagType">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのname属性&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのvalue値&lt;/p&gt;" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="395" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tagType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="431" package="NetCommons\NetCommons\TestSuite">
        <name>assertActionLink</name>
        <full_name>\NetCommonsControllerTestCase::assertActionLink()</full_name>
        <docblock line="431">
          <description>Assert アクションリンク</description>
          <long-description></long-description>
          <tag name="param" line="431" description="&lt;p&gt;アクション&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;リンクの有無&lt;/p&gt;" type="boolean" variable="$linkExist">
            <type>boolean</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="431" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$linkExist</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
    </class>
    <source>eJydU8FuEzEQPSdf4UOl3URhFxCnbRoSReUCChEtJ4Iqs5nuOtm1jT1OUlU9QKWKr+HO9+RHsHe3rUsaKrisvDPvvXkzY/dfy1y24263TbpkAjgWZSm4Hkk5FhyVKApQ2+ub7fdf2+sfFuNgQ2owF4pMhGJLQUaKMtKn9jvkjEU0jRZy4ONOcpEDIxO6pAtWUtLnzUnnwtjMMCspK6JUlDWtYHxJckSZxPF6vY44YFrbioTKPJdkqsQCUmxYKXAN+4lxg4hwg77IuzpciaRCXiiW5UjGd6eXz1+86j1eNW637aSSxGjQYbBnfEGPeKnIS3QOH6ffQ05B45hq+EPDhU8MQ3AS/7m9f92KpOmSZuCVmXlH52jmnM7uK1cDSguq9T5vU8YzxySwQeBzH7c7A3J51+obtkGjQN+2tKKKUKXoRVWyJc0Xu2tycN7AyFGdDb1pacCP8pavwOI4WQk2f6BwbniKTPAaHXashVZLUgUck6SJHdrQ32wnSSHo3P1NC5MxHh5gzvSDfbrtOoAXcbJXT602SaQdYNjZfvu5s+UnW0LnqKJXXX0QBitFqjQcu3Voi9J1f5XlZwNHGVXs0AZbQewCZ/aVnTXPbDfgDEYLLXjQc5R6DUFtLiBHAxKsGKyDjk36leydAYXHXw0tdNiQStDaXsCa9f5t0KkUG4K9AfqT1dWmwOBzo2YHeNX+DZn+qTg=</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Controller/NetCommonsApp/NetCommonsAppControllerEmptyRenderTest.php" generated-path="Plugin.NetCommons.Test.Case.Controller.NetCommonsApp.NetCommonsAppControllerEmptyRenderTest.html" hash="59b2f8d07ccf50a6d47f8aa4704cc697" package="Default">
    <docblock line="0">
      <description>NetCommonsAppControllerテスト</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends>\NetCommonsControllerTestCase</extends>
      <name>NetCommonsAppControllerEmptyRenderTest</name>
      <full_name>\NetCommonsAppControllerEmptyRenderTest</full_name>
      <docblock line="21">
        <description>NetCommonsAppControllerテスト</description>
        <long-description></long-description>
        <tag name="author" line="21" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="21" description="NetCommons\NetCommons\Test\Case\Controller"/>
        <tag name="inherited_from" description="\NetCommonsControllerTestCase" refers="\NetCommonsControllerTestCase" link="/classes/NetCommonsControllerTestCase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="28" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$fixtures</name>
        <full_name>\NetCommonsAppControllerEmptyRenderTest::fixtures</full_name>
        <default>array()</default>
        <docblock line="28">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsControllerTestCase::plugin</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="NetCommons\NetCommons\TestSuite">
        <name>$data</name>
        <full_name>\NetCommonsControllerTestCase::data</full_name>
        <default>null</default>
        <docblock line="42">
          <description>Post data</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="49" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsControllerTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="49">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="NetCommons\NetCommons\TestSuite">
        <name>$_fixtures</name>
        <full_name>\NetCommonsControllerTestCase::_fixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.net_commons.site_setting', 'plugin.pages.languages_page', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.plugin_manager.plugins_role', 'plugin.plugin_manager.plugins_room', 'plugin.roles.default_role_permission', 'plugin.roles.role', 'plugin.rooms.roles_room', 'plugin.rooms.roles_rooms_user', 'plugin.rooms.room', 'plugin.rooms.room_role_permission', 'plugin.rooms.space', 'plugin.users.user')</default>
        <docblock line="56">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>setUp</name>
        <full_name>\NetCommonsAppControllerEmptyRenderTest::setUp()</full_name>
        <docblock line="35">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\NetCommonsControllerTestCase::setUp()" refers="\NetCommonsControllerTestCase::setUp()" link="/classes/NetCommonsControllerTestCase.html#method_setUp"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testEmptyRender</name>
        <full_name>\NetCommonsAppControllerEmptyRenderTest::testEmptyRender()</full_name>
        <docblock line="45">
          <description>NetCommonsAppController-&gt;emptyRender()のテスト</description>
          <long-description></long-description>
          <tag name="return" line="45" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsControllerTestCase::__construct()</full_name>
        <docblock line="91">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="91" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The date parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="107" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsControllerTestCase::setUp()</full_name>
        <docblock line="107">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="107" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsControllerTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="138" package="NetCommons\NetCommons\TestSuite">
        <name>loadTestPlugin</name>
        <full_name>\NetCommonsControllerTestCase::loadTestPlugin()</full_name>
        <docblock line="138">
          <description>Load TestPlugin</description>
          <long-description></long-description>
          <tag name="param" line="138" description="&lt;p&gt;CakeTestCase&lt;/p&gt;" type="\CakeTestCase" variable="$test">
            <type>\CakeTestCase</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Plugin name&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Test plugin name&lt;/p&gt;" type="string" variable="$testPlugin">
            <type>string</type>
          </tag>
          <tag name="return" line="138" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default></default>
          <type>\CakeTestCase</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$testPlugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="173" package="NetCommons\NetCommons\TestSuite">
        <name>_testAction</name>
        <full_name>\NetCommonsControllerTestCase::_testAction()</full_name>
        <docblock line="173">
          <description>Lets you do functional tests of a controller action.</description>
          <long-description>### Options:

- `data` Will be used as the request data. If the `method` is GET,
  data will be used a GET params. If the `method` is POST, it will be used
  as POST data. By setting `$options['data']` to a string, you can simulate XML or JSON
  payloads to your controllers allowing you to test REST webservices.
- `method` POST or GET. Defaults to POST.
- `return` Specify the return type you want. Choose from:
    - `vars` Get the set view variables.
    - `view` Get the rendered view, without a layout.
    - `contents` Get the rendered view including the layout.
    - `result` Get the return value of the controller action. Useful
      for testing requestAction methods.
- `type` json or html, Defaults to html.</long-description>
          <tag name="param" line="173" description="&lt;p&gt;The url to test&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="&lt;p&gt;See options&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="173" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="196" package="NetCommons\NetCommons\TestSuite">
        <name>_testNcAction</name>
        <full_name>\NetCommonsControllerTestCase::_testNcAction()</full_name>
        <docblock line="196">
          <description>Assert input tag</description>
          <long-description>### $returnについて
 - viewFile: viewファイル名を戻す
 - json: JSONをでコードした配列を戻す
 - 上記以外: $this-&gt;testActionのreturnで指定した内容を戻す</long-description>
          <tag name="param" line="196" description="&lt;p&gt;URL配列&lt;/p&gt;" type="array" variable="$url">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;リクエストパラメータオプション&lt;/p&gt;" type="array" variable="$paramsOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="196" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramsOptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="244" package="NetCommons\NetCommons\TestSuite">
        <name>_testGetAction</name>
        <full_name>\NetCommonsControllerTestCase::_testGetAction()</full_name>
        <docblock line="244">
          <description>viewアクションのテスト</description>
          <long-description></long-description>
          <tag name="param" line="244" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;テストの期待値&lt;/p&gt;" type="array" variable="$assert">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="244" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$assert</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="273" package="NetCommons\NetCommons\TestSuite">
        <name>_testPostAction</name>
        <full_name>\NetCommonsControllerTestCase::_testPostAction()</full_name>
        <docblock line="273">
          <description>addアクションのPOSTテスト</description>
          <long-description></long-description>
          <tag name="param" line="273" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="273" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="293" package="NetCommons\NetCommons\TestSuite">
        <name>_testActionOnValidationError</name>
        <full_name>\NetCommonsControllerTestCase::_testActionOnValidationError()</full_name>
        <docblock line="293">
          <description>addアクションのValidateionErrorテスト</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;ValidationError&lt;/p&gt;" type="string|null" variable="$validationError">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="293" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$validationError</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="335" package="NetCommons\NetCommons\TestSuite">
        <name>generateNc</name>
        <full_name>\NetCommonsControllerTestCase::generateNc()</full_name>
        <docblock line="335">
          <description>Generates a mocked controller and mocks any classes passed to `$mocks`. By
default, `_stop()` is stubbed as is sending the response headers, so to not
interfere with testing.</description>
          <long-description>### Mocks:

- `methods` Methods to mock on the controller. `_stop()` is mocked by default
- `models` Models to mock. Models are added to the ClassRegistry so any
  time they are instantiated the mock will be created. Pass as key value pairs
  with the value being specific methods on the model to mock. If `true` or
  no value is passed, the entire model will be mocked.
- `components` Components to mock. Components are only mocked on this controller
  and not within each other (i.e., components on components)</long-description>
          <tag name="param" line="335" description="&lt;p&gt;Controller name&lt;/p&gt;" type="string" variable="$controller">
            <type>string</type>
          </tag>
          <tag name="param" line="335" description="&lt;p&gt;List of classes and methods to mock&lt;/p&gt;" type="array" variable="$mocks">
            <type>array</type>
          </tag>
          <tag name="return" line="335" description="Mocked controller" type="\Controller">
            <type>\Controller</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mocks</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="357" package="NetCommons\NetCommons\TestSuite">
        <name>asserts</name>
        <full_name>\NetCommonsControllerTestCase::asserts()</full_name>
        <docblock line="357">
          <description>Asserts</description>
          <long-description></long-description>
          <tag name="param" line="357" description="&lt;p&gt;テストAssert&lt;/p&gt;" type="array" variable="$asserts">
            <type>array</type>
          </tag>
          <tag name="param" line="357" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="return" line="357" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$asserts</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="395" package="NetCommons\NetCommons\TestSuite">
        <name>assertInput</name>
        <full_name>\NetCommonsControllerTestCase::assertInput()</full_name>
        <docblock line="395">
          <description>Assert input tag</description>
          <long-description></long-description>
          <tag name="param" line="395" description="&lt;p&gt;タグタイプ(input or textearea or button)&lt;/p&gt;" type="string" variable="$tagType">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのname属性&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのvalue値&lt;/p&gt;" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="395" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tagType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="431" package="NetCommons\NetCommons\TestSuite">
        <name>assertActionLink</name>
        <full_name>\NetCommonsControllerTestCase::assertActionLink()</full_name>
        <docblock line="431">
          <description>Assert アクションリンク</description>
          <long-description></long-description>
          <tag name="param" line="431" description="&lt;p&gt;アクション&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;リンクの有無&lt;/p&gt;" type="boolean" variable="$linkExist">
            <type>boolean</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="431" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$linkExist</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
    </class>
    <source>eJydU8tu2zAQPFtfwUMAyYYjtUVOiuPaMJJTYQRNezMQsPTGoi2RBLnyA0UObYCiX5N7v8c/UlJSbKaOG7QXgZqdnZ3dJXvvVaaCpNMJSIeMAUeyKKQwQ6VGUqCWeQ56+/Bj+/3X9uGn5TjagJaYSU3GUvOFJENNOelR+x0IzmPK4rnq+7ybTGbAyZgu6JwXlPREczKZLG1kMCsoz2Mmizot52JBMkSVJslqtYoFIKttxVLPPJfkWss5MGyyGAgDxxOThhHjGn2RDzVciTCpNprPMiSj3endm7dn3ZerJkFgJ5WmpQEThUfGF3aJF4q9QPv85fQ95RMYHFEDf2g4+KbkCE7iP7f3r1tRlC3oDLwyE+/oHE2c08m+cjUgllNjjnm7LBRuPoKY1p0SWKP98emHoyBfdx1f8TWWGsxTZ0uqCdWabqrKLVV+sSsnJ3cNjVzU0cgbmgH8rJ7yNVieIEvJp88U7krBkEtRs6O2tdBqKapBYJo22LmF/mY7TXNJp+7vOi9nXEQnmHHzbK1uyY7gIU72/rUNn/ZhP8eovf32eLDzVztDW/fSV6l6rDye9l1wWPEiC7bCxAG39nXdNs/rEPAchV2XVE8+rI2E5KJPwiWHVdi2QbePXTF7XUDjFc0NRA3EvFbt7ZW1bjOb++A3NF+kIQ==</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Controller/NetCommonsApp/NetCommonsAppControllerBeforeFilterTest.php" generated-path="Plugin.NetCommons.Test.Case.Controller.NetCommonsApp.NetCommonsAppControllerBeforeFilterTest.html" hash="8f4338ccb6c6b276159ef842fba58331" package="Default">
    <docblock line="0">
      <description>NetCommonsAppController::beforeFilter()テスト</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends>\NetCommonsControllerTestCase</extends>
      <name>NetCommonsAppControllerBeforeFilterTest</name>
      <full_name>\NetCommonsAppControllerBeforeFilterTest</full_name>
      <docblock line="21">
        <description>NetCommonsAppController::beforeFilter()テスト</description>
        <long-description></long-description>
        <tag name="author" line="21" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="21" description="NetCommons\NetCommons\Test\Case\Controller"/>
        <tag name="inherited_from" description="\NetCommonsControllerTestCase" refers="\NetCommonsControllerTestCase" link="/classes/NetCommonsControllerTestCase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="28" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$fixtures</name>
        <full_name>\NetCommonsAppControllerBeforeFilterTest::fixtures</full_name>
        <default>array()</default>
        <docblock line="28">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsControllerTestCase::plugin</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="NetCommons\NetCommons\TestSuite">
        <name>$data</name>
        <full_name>\NetCommonsControllerTestCase::data</full_name>
        <default>null</default>
        <docblock line="42">
          <description>Post data</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="49" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsControllerTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="49">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="NetCommons\NetCommons\TestSuite">
        <name>$_fixtures</name>
        <full_name>\NetCommonsControllerTestCase::_fixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.net_commons.site_setting', 'plugin.pages.languages_page', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.plugin_manager.plugins_role', 'plugin.plugin_manager.plugins_room', 'plugin.roles.default_role_permission', 'plugin.roles.role', 'plugin.rooms.roles_room', 'plugin.rooms.roles_rooms_user', 'plugin.rooms.room', 'plugin.rooms.room_role_permission', 'plugin.rooms.space', 'plugin.users.user')</default>
        <docblock line="56">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>setUp</name>
        <full_name>\NetCommonsAppControllerBeforeFilterTest::setUp()</full_name>
        <docblock line="35">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\NetCommonsControllerTestCase::setUp()" refers="\NetCommonsControllerTestCase::setUp()" link="/classes/NetCommonsControllerTestCase.html#method_setUp"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testIndex</name>
        <full_name>\NetCommonsAppControllerBeforeFilterTest::testIndex()</full_name>
        <docblock line="45">
          <description>NetCommonsAppController::beforeFilter()のテスト</description>
          <long-description></long-description>
          <tag name="return" line="45" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="60" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testIndexAjax</name>
        <full_name>\NetCommonsAppControllerBeforeFilterTest::testIndexAjax()</full_name>
        <docblock line="60">
          <description>NetCommonsAppController::beforeFilter()のAjaxテスト</description>
          <long-description></long-description>
          <tag name="return" line="60" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="78" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testIndexAjaxByAccept</name>
        <full_name>\NetCommonsAppControllerBeforeFilterTest::testIndexAjaxByAccept()</full_name>
        <docblock line="78">
          <description>NetCommonsAppController::beforeFilter()のAjaxテスト(HTTP_ACCEPT=application/json)</description>
          <long-description></long-description>
          <tag name="return" line="78" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="96" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testLanguageConfiguredThroughQuery</name>
        <full_name>\NetCommonsAppControllerBeforeFilterTest::testLanguageConfiguredThroughQuery()</full_name>
        <docblock line="96">
          <description>リクエストlanguage=enによるConfigure::read('Config.language')のテスト</description>
          <long-description></long-description>
          <tag name="return" line="96" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="106" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testLanguageConfiguredThroughQuerySession</name>
        <full_name>\NetCommonsAppControllerBeforeFilterTest::testLanguageConfiguredThroughQuerySession()</full_name>
        <docblock line="106">
          <description>リクエストlanguage=enによるCakeSession::read('Config.language')のテスト</description>
          <long-description></long-description>
          <tag name="return" line="106" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="116" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testLanguageConfiguredThroughSession</name>
        <full_name>\NetCommonsAppControllerBeforeFilterTest::testLanguageConfiguredThroughSession()</full_name>
        <docblock line="116">
          <description>CakeSession::write('Config.language')によるConfigure::read('Config.language')のテスト</description>
          <long-description></long-description>
          <tag name="return" line="116" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="127" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testInstall</name>
        <full_name>\NetCommonsAppControllerBeforeFilterTest::testInstall()</full_name>
        <docblock line="127">
          <description>installのテスト</description>
          <long-description></long-description>
          <tag name="return" line="127" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsControllerTestCase::__construct()</full_name>
        <docblock line="91">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="91" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The date parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="107" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsControllerTestCase::setUp()</full_name>
        <docblock line="107">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="107" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsControllerTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="138" package="NetCommons\NetCommons\TestSuite">
        <name>loadTestPlugin</name>
        <full_name>\NetCommonsControllerTestCase::loadTestPlugin()</full_name>
        <docblock line="138">
          <description>Load TestPlugin</description>
          <long-description></long-description>
          <tag name="param" line="138" description="&lt;p&gt;CakeTestCase&lt;/p&gt;" type="\CakeTestCase" variable="$test">
            <type>\CakeTestCase</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Plugin name&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Test plugin name&lt;/p&gt;" type="string" variable="$testPlugin">
            <type>string</type>
          </tag>
          <tag name="return" line="138" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default></default>
          <type>\CakeTestCase</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$testPlugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="173" package="NetCommons\NetCommons\TestSuite">
        <name>_testAction</name>
        <full_name>\NetCommonsControllerTestCase::_testAction()</full_name>
        <docblock line="173">
          <description>Lets you do functional tests of a controller action.</description>
          <long-description>### Options:

- `data` Will be used as the request data. If the `method` is GET,
  data will be used a GET params. If the `method` is POST, it will be used
  as POST data. By setting `$options['data']` to a string, you can simulate XML or JSON
  payloads to your controllers allowing you to test REST webservices.
- `method` POST or GET. Defaults to POST.
- `return` Specify the return type you want. Choose from:
    - `vars` Get the set view variables.
    - `view` Get the rendered view, without a layout.
    - `contents` Get the rendered view including the layout.
    - `result` Get the return value of the controller action. Useful
      for testing requestAction methods.
- `type` json or html, Defaults to html.</long-description>
          <tag name="param" line="173" description="&lt;p&gt;The url to test&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="&lt;p&gt;See options&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="173" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="196" package="NetCommons\NetCommons\TestSuite">
        <name>_testNcAction</name>
        <full_name>\NetCommonsControllerTestCase::_testNcAction()</full_name>
        <docblock line="196">
          <description>Assert input tag</description>
          <long-description>### $returnについて
 - viewFile: viewファイル名を戻す
 - json: JSONをでコードした配列を戻す
 - 上記以外: $this-&gt;testActionのreturnで指定した内容を戻す</long-description>
          <tag name="param" line="196" description="&lt;p&gt;URL配列&lt;/p&gt;" type="array" variable="$url">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;リクエストパラメータオプション&lt;/p&gt;" type="array" variable="$paramsOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="196" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramsOptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="244" package="NetCommons\NetCommons\TestSuite">
        <name>_testGetAction</name>
        <full_name>\NetCommonsControllerTestCase::_testGetAction()</full_name>
        <docblock line="244">
          <description>viewアクションのテスト</description>
          <long-description></long-description>
          <tag name="param" line="244" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;テストの期待値&lt;/p&gt;" type="array" variable="$assert">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="244" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$assert</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="273" package="NetCommons\NetCommons\TestSuite">
        <name>_testPostAction</name>
        <full_name>\NetCommonsControllerTestCase::_testPostAction()</full_name>
        <docblock line="273">
          <description>addアクションのPOSTテスト</description>
          <long-description></long-description>
          <tag name="param" line="273" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="273" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="293" package="NetCommons\NetCommons\TestSuite">
        <name>_testActionOnValidationError</name>
        <full_name>\NetCommonsControllerTestCase::_testActionOnValidationError()</full_name>
        <docblock line="293">
          <description>addアクションのValidateionErrorテスト</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;ValidationError&lt;/p&gt;" type="string|null" variable="$validationError">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="293" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$validationError</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="335" package="NetCommons\NetCommons\TestSuite">
        <name>generateNc</name>
        <full_name>\NetCommonsControllerTestCase::generateNc()</full_name>
        <docblock line="335">
          <description>Generates a mocked controller and mocks any classes passed to `$mocks`. By
default, `_stop()` is stubbed as is sending the response headers, so to not
interfere with testing.</description>
          <long-description>### Mocks:

- `methods` Methods to mock on the controller. `_stop()` is mocked by default
- `models` Models to mock. Models are added to the ClassRegistry so any
  time they are instantiated the mock will be created. Pass as key value pairs
  with the value being specific methods on the model to mock. If `true` or
  no value is passed, the entire model will be mocked.
- `components` Components to mock. Components are only mocked on this controller
  and not within each other (i.e., components on components)</long-description>
          <tag name="param" line="335" description="&lt;p&gt;Controller name&lt;/p&gt;" type="string" variable="$controller">
            <type>string</type>
          </tag>
          <tag name="param" line="335" description="&lt;p&gt;List of classes and methods to mock&lt;/p&gt;" type="array" variable="$mocks">
            <type>array</type>
          </tag>
          <tag name="return" line="335" description="Mocked controller" type="\Controller">
            <type>\Controller</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mocks</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="357" package="NetCommons\NetCommons\TestSuite">
        <name>asserts</name>
        <full_name>\NetCommonsControllerTestCase::asserts()</full_name>
        <docblock line="357">
          <description>Asserts</description>
          <long-description></long-description>
          <tag name="param" line="357" description="&lt;p&gt;テストAssert&lt;/p&gt;" type="array" variable="$asserts">
            <type>array</type>
          </tag>
          <tag name="param" line="357" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="return" line="357" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$asserts</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="395" package="NetCommons\NetCommons\TestSuite">
        <name>assertInput</name>
        <full_name>\NetCommonsControllerTestCase::assertInput()</full_name>
        <docblock line="395">
          <description>Assert input tag</description>
          <long-description></long-description>
          <tag name="param" line="395" description="&lt;p&gt;タグタイプ(input or textearea or button)&lt;/p&gt;" type="string" variable="$tagType">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのname属性&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのvalue値&lt;/p&gt;" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="395" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tagType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="431" package="NetCommons\NetCommons\TestSuite">
        <name>assertActionLink</name>
        <full_name>\NetCommonsControllerTestCase::assertActionLink()</full_name>
        <docblock line="431">
          <description>Assert アクションリンク</description>
          <long-description></long-description>
          <tag name="param" line="431" description="&lt;p&gt;アクション&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;リンクの有無&lt;/p&gt;" type="boolean" variable="$linkExist">
            <type>boolean</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="431" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$linkExist</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
    </class>
    <source>eJzFVs1u2zgQPsdPwUMBykEiZYue1MSNa7jY/iBNE7eXJDBYeWLRlkmVpGIHRQ91gKLAvshiF2jPfR69SIeS7Ci1nTh/7UWQhjPfzHzfkOLmkziMK97qaoWskh0wDTkYSKHrcdyQwigZRaB8/z0cSwXPeGRAOdX07Es6/pGefcUYG7bNEhNKRXak4n1J6opxssnwuS04d1ng9uJa2W8/lCFwssP6rMcHjGyK4k2HMsGV7e6A8cgN5CAPi7jok9CY2Pe84XDoCjBBXqYrVbdUNdlVsgeBKaICEBoWB3qFh2tGpgzyKjdnIIGMTxXvhoY0pm8PN/56tDY/q1epIHO+n2jQDl1AJ10jpSW3tFB9PD/83KUF2jSYhl8wrHk/4QYsxB2peV2VYhb0WRdKaQ9Lr7bCQ1v54XklGWFBxLReVOvTUqUWgcDIgOiU/We5IR+nFDzjI5Mo0JPWTpgiTCl2mqVeiZP3OAPkwXHhRrbyVafEogbzNp7EK0A/QU4k71xAOE5EYLgUubdTxRJWVmKmQBjfL2yP0XRZ2b4fSdaxX7tR0uXCeWBCri/obFW3DiWLhf10bck/f5tR/crWDCZ+LjowKtrLyluvWXM983DQuEI9a2jjTmsXW23WwC0KXbPuOd00T07JVo3QEw5DWsVFK8I0DQ4JKNP8kLBIO4UtmDa4XrNRyE4OnXE9L9AoPphE24jqDKHPpwA3YbXeY6NbMGvDC3b3ZGJsChwiDU079RpdtVNu7abUv9BSuD18LNTAMouzqyc6YEpLF+4PG9buQCA7UCZyjRiVwGLF6OuXOLwZyAEVbAD0aKFIDzc2pq42z5Wus9OAeznGdmG9pg0zCe42LLd6J6o6f7dau+16o9HcbW2xOEYlmZXAs8xUb6b509N6EEBsCu0973L12/vNvXfNvQNaKoUeoTj013roHU3L0oNyufzzt+07bPIAUXUSIdDRkvOxJNY9DlB69l86/p6O/80HI2Kim+APcAtE+vn/dPw1Hf+DY3XMu/hr8X0FrOPQ3OBOfOnNj+JXBcQ0RacVKpl0wzcJqNOFZ/TSsj8p9YPaFf/FhURe3SketYh0fQpZH/ZB2/n/3SQWaX8/l0u0PI/NC3FDhdfBuVz9wdm8yOgy9Z73eRsB7m2AucDzIYpucaHK4u/gSpXh3NelKge/1bXqHALZ+1T5CcT+BkA=</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Controller/NetCommonsApp/NetCommonsAppControllerThrowBadRequestTest.php" generated-path="Plugin.NetCommons.Test.Case.Controller.NetCommonsApp.NetCommonsAppControllerThrowBadRequestTest.html" hash="cf7ad67254eb2474151f7b7562c79ae3" package="Default">
    <docblock line="0">
      <description>NetCommonsAppController::ThrowBadRequest()テスト</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends>\NetCommonsControllerTestCase</extends>
      <name>NetCommonsAppControllerThrowBadRequestTest</name>
      <full_name>\NetCommonsAppControllerThrowBadRequestTest</full_name>
      <docblock line="21">
        <description>NetCommonsAppController::ThrowBadRequest()テスト</description>
        <long-description></long-description>
        <tag name="author" line="21" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="21" description="NetCommons\NetCommons\Test\Case\Controller"/>
        <tag name="inherited_from" description="\NetCommonsControllerTestCase" refers="\NetCommonsControllerTestCase" link="/classes/NetCommonsControllerTestCase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="28" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$fixtures</name>
        <full_name>\NetCommonsAppControllerThrowBadRequestTest::fixtures</full_name>
        <default>array()</default>
        <docblock line="28">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsControllerTestCase::plugin</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="NetCommons\NetCommons\TestSuite">
        <name>$data</name>
        <full_name>\NetCommonsControllerTestCase::data</full_name>
        <default>null</default>
        <docblock line="42">
          <description>Post data</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="49" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsControllerTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="49">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="NetCommons\NetCommons\TestSuite">
        <name>$_fixtures</name>
        <full_name>\NetCommonsControllerTestCase::_fixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.net_commons.site_setting', 'plugin.pages.languages_page', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.plugin_manager.plugins_role', 'plugin.plugin_manager.plugins_room', 'plugin.roles.default_role_permission', 'plugin.roles.role', 'plugin.rooms.roles_room', 'plugin.rooms.roles_rooms_user', 'plugin.rooms.room', 'plugin.rooms.room_role_permission', 'plugin.rooms.space', 'plugin.users.user')</default>
        <docblock line="56">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>setUp</name>
        <full_name>\NetCommonsAppControllerThrowBadRequestTest::setUp()</full_name>
        <docblock line="35">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\NetCommonsControllerTestCase::setUp()" refers="\NetCommonsControllerTestCase::setUp()" link="/classes/NetCommonsControllerTestCase.html#method_setUp"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testThrowBadRequest</name>
        <full_name>\NetCommonsAppControllerThrowBadRequestTest::testThrowBadRequest()</full_name>
        <docblock line="45">
          <description>NetCommonsAppController::throwBadRequest()のテスト</description>
          <long-description></long-description>
          <tag name="return" line="45" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="58" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testThrowBadRequestAjax</name>
        <full_name>\NetCommonsAppControllerThrowBadRequestTest::testThrowBadRequestAjax()</full_name>
        <docblock line="58">
          <description>NetCommonsAppController::throwBadRequest()のAjaxテスト</description>
          <long-description></long-description>
          <tag name="return" line="58" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsControllerTestCase::__construct()</full_name>
        <docblock line="91">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="91" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The date parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="107" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsControllerTestCase::setUp()</full_name>
        <docblock line="107">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="107" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsControllerTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="138" package="NetCommons\NetCommons\TestSuite">
        <name>loadTestPlugin</name>
        <full_name>\NetCommonsControllerTestCase::loadTestPlugin()</full_name>
        <docblock line="138">
          <description>Load TestPlugin</description>
          <long-description></long-description>
          <tag name="param" line="138" description="&lt;p&gt;CakeTestCase&lt;/p&gt;" type="\CakeTestCase" variable="$test">
            <type>\CakeTestCase</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Plugin name&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Test plugin name&lt;/p&gt;" type="string" variable="$testPlugin">
            <type>string</type>
          </tag>
          <tag name="return" line="138" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default></default>
          <type>\CakeTestCase</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$testPlugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="173" package="NetCommons\NetCommons\TestSuite">
        <name>_testAction</name>
        <full_name>\NetCommonsControllerTestCase::_testAction()</full_name>
        <docblock line="173">
          <description>Lets you do functional tests of a controller action.</description>
          <long-description>### Options:

- `data` Will be used as the request data. If the `method` is GET,
  data will be used a GET params. If the `method` is POST, it will be used
  as POST data. By setting `$options['data']` to a string, you can simulate XML or JSON
  payloads to your controllers allowing you to test REST webservices.
- `method` POST or GET. Defaults to POST.
- `return` Specify the return type you want. Choose from:
    - `vars` Get the set view variables.
    - `view` Get the rendered view, without a layout.
    - `contents` Get the rendered view including the layout.
    - `result` Get the return value of the controller action. Useful
      for testing requestAction methods.
- `type` json or html, Defaults to html.</long-description>
          <tag name="param" line="173" description="&lt;p&gt;The url to test&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="&lt;p&gt;See options&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="173" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="196" package="NetCommons\NetCommons\TestSuite">
        <name>_testNcAction</name>
        <full_name>\NetCommonsControllerTestCase::_testNcAction()</full_name>
        <docblock line="196">
          <description>Assert input tag</description>
          <long-description>### $returnについて
 - viewFile: viewファイル名を戻す
 - json: JSONをでコードした配列を戻す
 - 上記以外: $this-&gt;testActionのreturnで指定した内容を戻す</long-description>
          <tag name="param" line="196" description="&lt;p&gt;URL配列&lt;/p&gt;" type="array" variable="$url">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;リクエストパラメータオプション&lt;/p&gt;" type="array" variable="$paramsOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="196" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramsOptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="244" package="NetCommons\NetCommons\TestSuite">
        <name>_testGetAction</name>
        <full_name>\NetCommonsControllerTestCase::_testGetAction()</full_name>
        <docblock line="244">
          <description>viewアクションのテスト</description>
          <long-description></long-description>
          <tag name="param" line="244" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;テストの期待値&lt;/p&gt;" type="array" variable="$assert">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="244" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$assert</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="273" package="NetCommons\NetCommons\TestSuite">
        <name>_testPostAction</name>
        <full_name>\NetCommonsControllerTestCase::_testPostAction()</full_name>
        <docblock line="273">
          <description>addアクションのPOSTテスト</description>
          <long-description></long-description>
          <tag name="param" line="273" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="273" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="293" package="NetCommons\NetCommons\TestSuite">
        <name>_testActionOnValidationError</name>
        <full_name>\NetCommonsControllerTestCase::_testActionOnValidationError()</full_name>
        <docblock line="293">
          <description>addアクションのValidateionErrorテスト</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;ValidationError&lt;/p&gt;" type="string|null" variable="$validationError">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="293" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$validationError</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="335" package="NetCommons\NetCommons\TestSuite">
        <name>generateNc</name>
        <full_name>\NetCommonsControllerTestCase::generateNc()</full_name>
        <docblock line="335">
          <description>Generates a mocked controller and mocks any classes passed to `$mocks`. By
default, `_stop()` is stubbed as is sending the response headers, so to not
interfere with testing.</description>
          <long-description>### Mocks:

- `methods` Methods to mock on the controller. `_stop()` is mocked by default
- `models` Models to mock. Models are added to the ClassRegistry so any
  time they are instantiated the mock will be created. Pass as key value pairs
  with the value being specific methods on the model to mock. If `true` or
  no value is passed, the entire model will be mocked.
- `components` Components to mock. Components are only mocked on this controller
  and not within each other (i.e., components on components)</long-description>
          <tag name="param" line="335" description="&lt;p&gt;Controller name&lt;/p&gt;" type="string" variable="$controller">
            <type>string</type>
          </tag>
          <tag name="param" line="335" description="&lt;p&gt;List of classes and methods to mock&lt;/p&gt;" type="array" variable="$mocks">
            <type>array</type>
          </tag>
          <tag name="return" line="335" description="Mocked controller" type="\Controller">
            <type>\Controller</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mocks</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="357" package="NetCommons\NetCommons\TestSuite">
        <name>asserts</name>
        <full_name>\NetCommonsControllerTestCase::asserts()</full_name>
        <docblock line="357">
          <description>Asserts</description>
          <long-description></long-description>
          <tag name="param" line="357" description="&lt;p&gt;テストAssert&lt;/p&gt;" type="array" variable="$asserts">
            <type>array</type>
          </tag>
          <tag name="param" line="357" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="return" line="357" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$asserts</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="395" package="NetCommons\NetCommons\TestSuite">
        <name>assertInput</name>
        <full_name>\NetCommonsControllerTestCase::assertInput()</full_name>
        <docblock line="395">
          <description>Assert input tag</description>
          <long-description></long-description>
          <tag name="param" line="395" description="&lt;p&gt;タグタイプ(input or textearea or button)&lt;/p&gt;" type="string" variable="$tagType">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのname属性&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのvalue値&lt;/p&gt;" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="395" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tagType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="431" package="NetCommons\NetCommons\TestSuite">
        <name>assertActionLink</name>
        <full_name>\NetCommonsControllerTestCase::assertActionLink()</full_name>
        <docblock line="431">
          <description>Assert アクションリンク</description>
          <long-description></long-description>
          <tag name="param" line="431" description="&lt;p&gt;アクション&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;リンクの有無&lt;/p&gt;" type="boolean" variable="$linkExist">
            <type>boolean</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="431" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$linkExist</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
    </class>
    <source>eJytU01P20AQPSe/Yg9IdlBwaMXJhJQ0Sk8VQkB7ARRt10O8ibO77AcJqji0SFV/Te/9PfyRztpO4gRS+sHFWs/Oe2/mzWz7jUpVvbW9XSfb5AhsT04mUpiuUj0prJZZBjqOz1Itp29pcgLXDowNGw/33x6+/ny4/44wjzykzqZSkyOp+ViSrqactCl+DwXnEWXRSHWqeaepTIGTIzqmIz6hpC3Kk0mlw5vD4YTyLGJyUsAyLsYktVbFrdZ0Oo0EWFZUGkk9rBROjrUcAbMlioEwsBnYKjMiO7NVkvdFOCdhUt1qPkwt6S1Or3df7TWfVm3V62heHDsDJgw2OBo0SeUqqlw09p+GL1POcAA9amCNw4dPHbfgKV5uoH87KEXZmA6honxROfoiL3zxF8tics9YRo3ZVO5asZ6EwMyCSKqQxw6Rzwsj3vGZdRrMvLsbqgnVmt7m6jXlPuEmkK2rMo0cFLdhxUsD9oOa4zVgniA3kicrDFdOMMulKLLDBpZQqymqQdg4LmP7GPpd2XGcSZr4v+PMDbkIt2zKzcq0/ex9QiXiae+eH7x9NPgvPx7N/tnurB/DOlPea17rTgdb7c8UvghI+jMGyqPCYJm9COZ1z1GetpsrhBisBS0fGOCTHZRv9onAahVB0wOL2QVFGwE56JDghsM0aODlf/jUHdHZi3jliUq/TqSzXg93xEDfL7VBkAlf1hYvGI0M2r3JH4a945KauUdLdXyYoG3/2tHMhINBEgYVIb+IKEPm9jeapISxhZk7HW/+R2zwHCWNy1Dl8jwQdALBZbXPFaW93d0/52Iy+RcuZFDYBOC+WmodvsUEwka5IXf1XwH7c+g=</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/Controller/NetCommonsApp/NetCommonsAppControllerTest.php" generated-path="Plugin.NetCommons.Test.Case.Controller.NetCommonsApp.NetCommonsAppControllerTest.html" hash="9d64af43ec30305b00e16640f1fb88c4" package="Default">
    <docblock line="0">
      <description>NetCommonsAppControllerテスト</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="NetCommons\NetCommons\Test\Case\Controller">
      <extends>\NetCommonsControllerTestCase</extends>
      <name>NetCommonsAppControllerTest</name>
      <full_name>\NetCommonsAppControllerTest</full_name>
      <docblock line="21">
        <description>NetCommonsAppControllerテスト</description>
        <long-description></long-description>
        <tag name="author" line="21" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="21" description="NetCommons\NetCommons\Test\Case\Controller"/>
        <tag name="inherited_from" description="\NetCommonsControllerTestCase" refers="\NetCommonsControllerTestCase" link="/classes/NetCommonsControllerTestCase.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="28" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>$fixtures</name>
        <full_name>\NetCommonsAppControllerTest::fixtures</full_name>
        <default>array()</default>
        <docblock line="28">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="NetCommons\NetCommons\TestSuite">
        <name>$plugin</name>
        <full_name>\NetCommonsControllerTestCase::plugin</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Plugin name</description>
          <long-description></long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="NetCommons\NetCommons\TestSuite">
        <name>$data</name>
        <full_name>\NetCommonsControllerTestCase::data</full_name>
        <default>null</default>
        <docblock line="42">
          <description>Post data</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="49" package="NetCommons\NetCommons\TestSuite">
        <name>$_isFixtureMerged</name>
        <full_name>\NetCommonsControllerTestCase::_isFixtureMerged</full_name>
        <default>true</default>
        <docblock line="49">
          <description>Fixture merge</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="56" package="NetCommons\NetCommons\TestSuite">
        <name>$_fixtures</name>
        <full_name>\NetCommonsControllerTestCase::_fixtures</full_name>
        <default>array('plugin.blocks.block', 'plugin.blocks.block_role_permission', 'plugin.boxes.box', 'plugin.boxes.boxes_page', 'plugin.containers.container', 'plugin.containers.containers_page', 'plugin.frames.frame', 'plugin.m17n.language', 'plugin.net_commons.site_setting', 'plugin.pages.languages_page', 'plugin.pages.page', 'plugin.plugin_manager.plugin', 'plugin.plugin_manager.plugins_role', 'plugin.plugin_manager.plugins_room', 'plugin.roles.default_role_permission', 'plugin.roles.role', 'plugin.rooms.roles_room', 'plugin.rooms.roles_rooms_user', 'plugin.rooms.room', 'plugin.rooms.room_role_permission', 'plugin.rooms.space', 'plugin.users.user')</default>
        <docblock line="56">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>setUp</name>
        <full_name>\NetCommonsAppControllerTest::setUp()</full_name>
        <docblock line="35">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\NetCommonsControllerTestCase::setUp()" refers="\NetCommonsControllerTestCase::setUp()" link="/classes/NetCommonsControllerTestCase.html#method_setUp"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="NetCommons\NetCommons\Test\Case\Controller">
        <name>testSingletonViewBlockHtmlHelper</name>
        <full_name>\NetCommonsAppControllerTest::testSingletonViewBlockHtmlHelper()</full_name>
        <docblock line="45">
          <description>HtmlHelperの代わりにNetCommons.SingletonViewBlockHtmlHelperを利用するためのテスト</description>
          <long-description></long-description>
          <tag name="return" line="45" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="NetCommons\NetCommons\TestSuite">
        <name>__construct</name>
        <full_name>\NetCommonsControllerTestCase::__construct()</full_name>
        <docblock line="91">
          <description>Fixtures load</description>
          <long-description></long-description>
          <tag name="param" line="91" description="&lt;p&gt;The name parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The date parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The dataName parameter on PHPUnit_Framework_TestCase::__construct()&lt;/p&gt;" type="string" variable="$dataName">
            <type>string</type>
          </tag>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$dataName</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="107" package="NetCommons\NetCommons\TestSuite">
        <name>setUp</name>
        <full_name>\NetCommonsControllerTestCase::setUp()</full_name>
        <docblock line="107">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="107" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="NetCommons\NetCommons\TestSuite">
        <name>tearDown</name>
        <full_name>\NetCommonsControllerTestCase::tearDown()</full_name>
        <docblock line="122">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="122" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="138" package="NetCommons\NetCommons\TestSuite">
        <name>loadTestPlugin</name>
        <full_name>\NetCommonsControllerTestCase::loadTestPlugin()</full_name>
        <docblock line="138">
          <description>Load TestPlugin</description>
          <long-description></long-description>
          <tag name="param" line="138" description="&lt;p&gt;CakeTestCase&lt;/p&gt;" type="\CakeTestCase" variable="$test">
            <type>\CakeTestCase</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Plugin name&lt;/p&gt;" type="string" variable="$plugin">
            <type>string</type>
          </tag>
          <tag name="param" line="138" description="&lt;p&gt;Test plugin name&lt;/p&gt;" type="string" variable="$testPlugin">
            <type>string</type>
          </tag>
          <tag name="return" line="138" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default></default>
          <type>\CakeTestCase</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$plugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$testPlugin</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="173" package="NetCommons\NetCommons\TestSuite">
        <name>_testAction</name>
        <full_name>\NetCommonsControllerTestCase::_testAction()</full_name>
        <docblock line="173">
          <description>Lets you do functional tests of a controller action.</description>
          <long-description>### Options:

- `data` Will be used as the request data. If the `method` is GET,
  data will be used a GET params. If the `method` is POST, it will be used
  as POST data. By setting `$options['data']` to a string, you can simulate XML or JSON
  payloads to your controllers allowing you to test REST webservices.
- `method` POST or GET. Defaults to POST.
- `return` Specify the return type you want. Choose from:
    - `vars` Get the set view variables.
    - `view` Get the rendered view, without a layout.
    - `contents` Get the rendered view including the layout.
    - `result` Get the return value of the controller action. Useful
      for testing requestAction methods.
- `type` json or html, Defaults to html.</long-description>
          <tag name="param" line="173" description="&lt;p&gt;The url to test&lt;/p&gt;" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="173" description="&lt;p&gt;See options&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="173" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="196" package="NetCommons\NetCommons\TestSuite">
        <name>_testNcAction</name>
        <full_name>\NetCommonsControllerTestCase::_testNcAction()</full_name>
        <docblock line="196">
          <description>Assert input tag</description>
          <long-description>### $returnについて
 - viewFile: viewファイル名を戻す
 - json: JSONをでコードした配列を戻す
 - 上記以外: $this-&gt;testActionのreturnで指定した内容を戻す</long-description>
          <tag name="param" line="196" description="&lt;p&gt;URL配列&lt;/p&gt;" type="array" variable="$url">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;リクエストパラメータオプション&lt;/p&gt;" type="array" variable="$paramsOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="196" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$paramsOptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="244" package="NetCommons\NetCommons\TestSuite">
        <name>_testGetAction</name>
        <full_name>\NetCommonsControllerTestCase::_testGetAction()</full_name>
        <docblock line="244">
          <description>viewアクションのテスト</description>
          <long-description></long-description>
          <tag name="param" line="244" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;テストの期待値&lt;/p&gt;" type="array" variable="$assert">
            <type>array</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="244" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="244" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$assert</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="273" package="NetCommons\NetCommons\TestSuite">
        <name>_testPostAction</name>
        <full_name>\NetCommonsControllerTestCase::_testPostAction()</full_name>
        <docblock line="273">
          <description>addアクションのPOSTテスト</description>
          <long-description></long-description>
          <tag name="param" line="273" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;Exception&lt;/p&gt;" type="string|null" variable="$exception">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="273" description="&lt;p&gt;testActionの実行後の結果&lt;/p&gt;" type="string" variable="$return">
            <type>string</type>
          </tag>
          <tag name="return" line="273" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$return</name>
          <default>'view'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="293" package="NetCommons\NetCommons\TestSuite">
        <name>_testActionOnValidationError</name>
        <full_name>\NetCommonsControllerTestCase::_testActionOnValidationError()</full_name>
        <docblock line="293">
          <description>addアクションのValidateionErrorテスト</description>
          <long-description></long-description>
          <tag name="param" line="293" description="&lt;p&gt;リクエストのmethod(post put delete)&lt;/p&gt;" type="array" variable="$method">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;POSTデータ&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="293" description="&lt;p&gt;ValidationError&lt;/p&gt;" type="string|null" variable="$validationError">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="293" description="テスト結果" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$validationError</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="335" package="NetCommons\NetCommons\TestSuite">
        <name>generateNc</name>
        <full_name>\NetCommonsControllerTestCase::generateNc()</full_name>
        <docblock line="335">
          <description>Generates a mocked controller and mocks any classes passed to `$mocks`. By
default, `_stop()` is stubbed as is sending the response headers, so to not
interfere with testing.</description>
          <long-description>### Mocks:

- `methods` Methods to mock on the controller. `_stop()` is mocked by default
- `models` Models to mock. Models are added to the ClassRegistry so any
  time they are instantiated the mock will be created. Pass as key value pairs
  with the value being specific methods on the model to mock. If `true` or
  no value is passed, the entire model will be mocked.
- `components` Components to mock. Components are only mocked on this controller
  and not within each other (i.e., components on components)</long-description>
          <tag name="param" line="335" description="&lt;p&gt;Controller name&lt;/p&gt;" type="string" variable="$controller">
            <type>string</type>
          </tag>
          <tag name="param" line="335" description="&lt;p&gt;List of classes and methods to mock&lt;/p&gt;" type="array" variable="$mocks">
            <type>array</type>
          </tag>
          <tag name="return" line="335" description="Mocked controller" type="\Controller">
            <type>\Controller</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mocks</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="357" package="NetCommons\NetCommons\TestSuite">
        <name>asserts</name>
        <full_name>\NetCommonsControllerTestCase::asserts()</full_name>
        <docblock line="357">
          <description>Asserts</description>
          <long-description></long-description>
          <tag name="param" line="357" description="&lt;p&gt;テストAssert&lt;/p&gt;" type="array" variable="$asserts">
            <type>array</type>
          </tag>
          <tag name="param" line="357" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="return" line="357" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$asserts</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="395" package="NetCommons\NetCommons\TestSuite">
        <name>assertInput</name>
        <full_name>\NetCommonsControllerTestCase::assertInput()</full_name>
        <docblock line="395">
          <description>Assert input tag</description>
          <long-description></long-description>
          <tag name="param" line="395" description="&lt;p&gt;タグタイプ(input or textearea or button)&lt;/p&gt;" type="string" variable="$tagType">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのname属性&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;inputタグのvalue値&lt;/p&gt;" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="395" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="395" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tagType</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="431" package="NetCommons\NetCommons\TestSuite">
        <name>assertActionLink</name>
        <full_name>\NetCommonsControllerTestCase::assertActionLink()</full_name>
        <docblock line="431">
          <description>Assert アクションリンク</description>
          <long-description></long-description>
          <tag name="param" line="431" description="&lt;p&gt;アクション&lt;/p&gt;" type="string" variable="$action">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;URLオプション&lt;/p&gt;" type="array" variable="$urlOptions">
            <type>array</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;リンクの有無&lt;/p&gt;" type="boolean" variable="$linkExist">
            <type>boolean</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;Result data&lt;/p&gt;" type="string" variable="$result">
            <type>string</type>
          </tag>
          <tag name="param" line="431" description="&lt;p&gt;メッセージ&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="431" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$action</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$urlOptions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$linkExist</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$result</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsControllerTestCase</inherited_from>
      </method>
    </class>
    <source>eJydU0Fv0zAUPre/wodJaactBcQp68pGAe2AqkkFLuuEvPQt8eLYxnbWTmiHdhKa4ICEuHDiwAWExB3xcwLib2AnWeeu6xBcIuf5e9/7/L732vdELOqt1dU6WkU90F2eppypbSG6nGnJKQWZn73Kp9/zs3ODsbAtnOmYS9TjkiQcbUtMUBub7xYjxMehfyQ6Lq4f8xgI6uEEH5EUozarTirmmbnZilJMqB/ytEyjhCUo1loErdZoNPIZ6LCU5XMZOSrRruRHEOoqKwSmYHliq0L4eqxdksdluCAJuTiRJIo16s5Od27dvrt2fdVWvW46FQSZAtXwlrTPW0POle9cNDeuT7+EPAGlu1jBFQ4b7mdEg6X4T/f+1RWBwwRH4JQZOEeraGCVDi4rFw0KKVZqmTabhWCsgQ1dzOL70cvZMx+Rsc4kqIvnHGOJsJT4pChXE9mB8RmtHFYwtFneNpxOKdBPxUW+BINj6JiT4RzDYcZCTTgr0Y2mkVCrCSyB6SCoYhsmdJPsIKAcD+3fLs0iwhorOiZqzkvrrAU4EUt7OhO7o1O6A1QYJyfffv74lE/f5tPX+eSrMw99wiIKmrNnBEb3KQ8TJ2v67tf5l9/vP+eTD/n0TT75mE8nhmphLv7aCG2n7oZKVY+KkT7ICB02ys6bWM1zxh5tdipPujiBsjNBILCO3SXwmsgvW+OZw4O+/bMKnmMhLiMurY01TbFm4YuzWZaklDi/lfOraHJW4isoMz0MRug6gtL9wtD1jplxkPrhiwzTuU1e4owpvlBqvVNG1J5XQPb3vGJ3ejgFb7+aidP6H883/4k=</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/View/Helper/TokenHelperTest.php" generated-path="Plugin.NetCommons.Test.Case.View.Helper.TokenHelperTest.html" hash="fb064e90bd67f3534df1edca8ee3056a" package="Default">
    <docblock line="0">
      <description>TokenHelper Test Case</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="17" package="Default">
      <extends>\CakeTestCase</extends>
      <name>TokenHelperTest</name>
      <full_name>\TokenHelperTest</full_name>
      <docblock line="17">
        <description>Summary for TokenHelper Test Case</description>
        <long-description></long-description>
        <tag name="package" line="17" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="Default">
        <name>setUp</name>
        <full_name>\TokenHelperTest::setUp()</full_name>
        <docblock line="24">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="24" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="50" package="Default">
        <name>tearDown</name>
        <full_name>\TokenHelperTest::tearDown()</full_name>
        <docblock line="50">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="50" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="61" package="Default">
        <name>testGetToken</name>
        <full_name>\TokenHelperTest::testGetToken()</full_name>
        <docblock line="61">
          <description>testGetToken method</description>
          <long-description></long-description>
          <tag name="return" line="61" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="77" package="Default">
        <name>testGetTokenUnlocked</name>
        <full_name>\TokenHelperTest::testGetTokenUnlocked()</full_name>
        <docblock line="77">
          <description>testGetTokenUnlocked method</description>
          <long-description></long-description>
          <tag name="return" line="77" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="94" package="Default">
        <name>testGetTokenBlacklist</name>
        <full_name>\TokenHelperTest::testGetTokenBlacklist()</full_name>
        <docblock line="94">
          <description>testGetTokenBlacklist method</description>
          <long-description></long-description>
          <tag name="return" line="94" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="120" package="Default">
        <name>testGetTokenBlacklistPass</name>
        <full_name>\TokenHelperTest::testGetTokenBlacklistPass()</full_name>
        <docblock line="120">
          <description>testGetTokenUnlocked method</description>
          <long-description></long-description>
          <tag name="return" line="120" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzVVt9P2zAQfm7/Cj8gJbD+ooKHZdDBGBsSDKEN9oIQMsm18ZrYwXZWqon/fec4SUNpNhgdGy9pcnff5/Pdd3a33iZh0uyurTXJGjkVY+AHECUgySkoTfaoAnQY344vkqlkoxCt5Vu/t77RIseg90QcC67IiRTfwNcZgKY6FJIcihAY0kk6Sv2Qka2xLt6RM4Nx0B0hR4MMFjE+JqHWidftTiaTDjrzMBNTt1jEfOAK6oHdPKKjb3SV5MiakaTbbO4mieelCpTrfGUwcVrE/q6+qboqZTIRM7KOCe7mHsQUdf2SxjGVUzLEctTVuNv0I6pU1Z+54UYDDxSGjcEYTDj5UVIr0GcJiQFLHRSdkqBTycl3wYKMuJGkV7h7Mky5r5ngFuSuIk2jkVAJXHtebsOkG40Vsw+yTTg+zasxo1WHTLUHWYK5s5Ksm4HuBbYHEq5TsxGLMNv4bC2uo/GJFRzSSEE9sj0IqKaIp1LSqYthDcdU4pMIIHLI9qDiaDgsyEzrLfs5ZFLpS05jyMzOMdXg5D6sd9W1ewVR6YOYMkvucITswA2Nkwg6qKgixJeAHrucYyahvd5vb5Leptfb8Db6c2GXqB1pY9cLVywCNmTzFL3X9ziKwApJ3zGuVXzUV+7cucwMzkVZPWcMU0tgin+IHwZ+W+pJA5XvxYQ/VlIFLldViiOl3WpSVlmF2mbhc6sr/RG0ldijM5hh8yxWtPn4wCDCAdomB1SFnjeMqMaRcn+hNVvRkAVBBZ3Xr1Rex0okn5hsJRN2l3ZUJFRRbIsUwq/mh1/VBQvajAzPBZB6/zrFQXHLxhV4NWvzedbei6oiLPYUj5E9wTVlXN3fw0KmYZbHIrL9ONFTdwEk5ZHwx6jni/q2nuUxT2lvwfG8bf79kL0q4UUlLK0duJepnGOxROHkeTyI5iFiehdRfxwxvF2eoKaS5O/J6e6dVex6zlrcJ/P28paoAdhLoQ5lvfaaeAFyW5rWanRbFnkpbLPWLDO5vKFLzfCPOP/5QV+O5gkm9IynfYsskIwluDIpHWFKz/+fAD9nq//Hx/wS5+7BCrxt/gQNzcF3</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/View/Helper/DateHelperTest.php" generated-path="Plugin.NetCommons.Test.Case.View.Helper.DateHelperTest.html" hash="653922c4d95d91357121e94098ed7309" package="Default">
    <docblock line="0">
      <description>DateHelper Test Case</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Kotaro Hokada" link="mailto:kotaro.hokada@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="NetCommons\NetCommons\Test\View\Helper">
      <extends>\CakeTestCase</extends>
      <name>DateHelperTest</name>
      <full_name>\DateHelperTest</full_name>
      <docblock line="21">
        <description>Summary for DateHelper Test Case</description>
        <long-description></long-description>
        <tag name="author" line="21" description="Kotaro Hokada" link="mailto:kotaro.hokada@gmail.com"/>
        <tag name="package" line="21" description="NetCommons\NetCommons\Test\View\Helper"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="NetCommons\NetCommons\Test\View\Helper">
        <name>setUp</name>
        <full_name>\DateHelperTest::setUp()</full_name>
        <docblock line="28">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="28" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="40" package="NetCommons\NetCommons\Test\View\Helper">
        <name>tearDown</name>
        <full_name>\DateHelperTest::tearDown()</full_name>
        <docblock line="40">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="40" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="NetCommons\NetCommons\Test\View\Helper">
        <name>testDateFormat</name>
        <full_name>\DateHelperTest::testDateFormat()</full_name>
        <docblock line="51">
          <description>testDateFormat method</description>
          <long-description></long-description>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="NetCommons\NetCommons\Test\View\Helper">
        <name>testDateFormatNotThisYear</name>
        <full_name>\DateHelperTest::testDateFormatNotThisYear()</full_name>
        <docblock line="65">
          <description>testDateFormatNotThisYear method</description>
          <long-description></long-description>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="79" package="NetCommons\NetCommons\Test\View\Helper">
        <name>testDateFormatLastDate</name>
        <full_name>\DateHelperTest::testDateFormatLastDate()</full_name>
        <docblock line="79">
          <description>testDateFormatLastDate method</description>
          <long-description></long-description>
          <tag name="return" line="79" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="NetCommons\NetCommons\Test\View\Helper">
        <name>testDateFormatIncrrectDate</name>
        <full_name>\DateHelperTest::testDateFormatIncrrectDate()</full_name>
        <docblock line="93">
          <description>testDateFormatIncrrectDate method</description>
          <long-description></long-description>
          <tag name="return" line="93" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJytVGFP2zAQ/dz+CgshpSCajGqfMsaKYBvTEJo0NqlSv3jJ0ZomtmdfaKuJ/75z4qQeHRsIpCi1z/fevXu+9Oidnut+sr/fZ/vsjCOcQ6HBsCuwyE65BYq7ozGvcK4Mu1RGLBQ7MVywI07vsRQi5ll8o4/DvM8KuVHsXC14ztnRot7G83o7npVcFHGmygZSCLlgc0SdJslyuYwlIJ2VStpYmRm7BDxttuyLUTeQoUdlIC08DEx8RowrDEkumnBNkim9NmI2p1671ejV4euDv1dN+v0TrdO0smAH0XcBy+iANb97b8KjjZMuYcMVu9zEnxCkdf5rVZbcrNk1WfeIW3iKu5pnCz6DoKFpsHQVpk7UtClZN5kV3NpARy0DVggytyRnAS7gZLFfXQcW8JtmJZC+vFVrACsj2a0Sec3b09UPuhR2XckMhZINaLBHNL2e5gYkpqmPkTe93q5Txt4ySW+3dGGK4lzY4bHT5882Ugc1xKXdddIQuDlTS/lUdS3OC6xoaHAQFG80tro32feKW3TJH5QpOT5dQoj2QnZR5XxNred0Mogmw3KYs/NUpDby/ngUpQRyh8f5hqnh8C7DStN8Q95RfkwFza1FgwpFCW22T28oaUTA4PufFS/soKM4YF31f/lwqfCKWCbk2fMsCYhad/Km84i+49GwftjhKK2f6NH25N39brszScokv+dP2/PLWXTBvcpn+dOytOYUvOt9e3rClnaG7JBS1nZn7/FD1bI/5NyWbx3g5Xz7JDNjCPB870Km7tP7vwuR8Li66Sj8y/qjMVkVxVZPd/3fZChn4g==</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/View/Helper/SingletonViewBlockHtml/SingletonViewBlockHtmlHelperTest.php" generated-path="Plugin.NetCommons.Test.Case.View.Helper.SingletonViewBlockHtml.SingletonViewBlockHtmlHelperTest.html" hash="a8b5c5a30051fb187b7b4cbdff6705e2" package="Default">
    <docblock line="0">
      <description>SingletonViewBlockHtmlHelper Test Case</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="17" package="Default">
      <extends>\SingletonViewBlockHtmlHelperTestBase</extends>
      <name>SingletonViewBlockHtmlHelperTest</name>
      <full_name>\SingletonViewBlockHtmlHelperTest</full_name>
      <docblock line="17">
        <description>Summary for TokenHelper Test Case</description>
        <long-description></long-description>
        <tag name="package" line="17" description="Default"/>
        <tag name="inherited_from" description="\SingletonViewBlockHtmlHelperTestBase" refers="\SingletonViewBlockHtmlHelperTestBase" link="/classes/SingletonViewBlockHtmlHelperTestBase.html"/>
      </docblock>
      <property static="true" visibility="protected" namespace="" line="25" package="Default">
        <name>$_ViewBlock</name>
        <full_name>\SingletonViewBlockHtmlHelperTestBase::_ViewBlock</full_name>
        <default>null</default>
        <docblock line="25">
          <description>ViewBlock for test</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\ViewBlock" variable="">
            <type>\ViewBlock</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="Default">
        <name>testSameViewInstance</name>
        <full_name>\SingletonViewBlockHtmlHelperTest::testSameViewInstance()</full_name>
        <docblock line="24">
          <description>testSameViewInstance method</description>
          <long-description></long-description>
          <tag name="return" line="24" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="34" package="Default">
        <name>testAnotherViewInstance</name>
        <full_name>\SingletonViewBlockHtmlHelperTest::testAnotherViewInstance()</full_name>
        <docblock line="34">
          <description>testAnotherViewInstance method</description>
          <long-description></long-description>
          <tag name="return" line="34" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="47" package="Default">
        <name>testCopyBlock</name>
        <full_name>\SingletonViewBlockHtmlHelperTest::testCopyBlock()</full_name>
        <docblock line="47">
          <description>testCopyBlock method</description>
          <long-description></long-description>
          <tag name="return" line="47" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="57" package="Default">
        <name>testNotCopyBlock</name>
        <full_name>\SingletonViewBlockHtmlHelperTest::testNotCopyBlock()</full_name>
        <docblock line="57">
          <description>testNotCopyBlock method</description>
          <long-description></long-description>
          <tag name="return" line="57" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="32" package="Default">
        <name>setUp</name>
        <full_name>\SingletonViewBlockHtmlHelperTestBase::setUp()</full_name>
        <docblock line="32">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="32" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\SingletonViewBlockHtmlHelperTestBase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Default">
        <name>tearDown</name>
        <full_name>\SingletonViewBlockHtmlHelperTestBase::tearDown()</full_name>
        <docblock line="51">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\SingletonViewBlockHtmlHelperTestBase</inherited_from>
      </method>
    </class>
    <source>eJytlFFv2jAQx5+bT+EHpAQEZJv2lHVstNrEtKlCatfXyISDeCS2Z1+gqOp3nx1DCFuACvaCwvn+f9/97pLrTzKVXtjpeKRD7hmfZ4CCPzJY3WQiWYwwz0aQSVDkATSSW6rBZNrkz4mQa8XmqYlWT+/evH3fJXeAtyLPBddkrMQvSLAU0AJToch3kQIzdorOiyRl5HqB22fjWco4YF+o+aCUZYwvSIooozBcrVZ9c7hJszmHLstYAlzDYWG4yejjE9ZNfriwMQk9byhlFBUadOAfg2PZ3Bg0fpf4O6u+DYcWWWg1ocsNm4389gevmkOR51StyczQehAL4M0jCL0ko1ofHVspgScEPj2daFsgz1UZaEL3NAeb/Y1rpDwBkoMZ4nS7AwqwUJwsBZuWBV3JYmK4klnBE2SCN3oEbXPJ1VVrua2CfCTj0fgnZxh/VSZ5JdQiHmoNCqNIAZ0OERWbFAhBC1Ome4PmTgz9ODZ3IEuquOVq7nIyWnp++V3QTAdzwLgEGGjIZlHUiitRu0t2p7s629brZY/PkAtMQV2KqMGmTskA4ubXHgeuH72cpJutcGfHZutacMKzoO9uO4T4JOPy4t6gFOjX87WfFlfuGVQr8V8s/9uy2cDhBfOplOa9s2/WI80K+3XYo9AbGAj1LL8BwJ24jEFdf3ylXGmumsDnTleWZVqt/XW9XLKG54xifwVPgP+n2mby9R7bDW65xHXwypG9eH8ACsF4mQ==</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/View/Helper/SingletonViewBlockHtml/SingletonViewBlockHtmlHelperTestBase.php" generated-path="Plugin.NetCommons.Test.Case.View.Helper.SingletonViewBlockHtml.SingletonViewBlockHtmlHelperTestBase.html" hash="f1f80c112c6f4ceee8828cd9db8e4956" package="Default">
    <docblock line="0">
      <description>SingletonViewBlockHtmlHelper test case base</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="18" package="Default">
      <extends>\CakeTestCase</extends>
      <name>SingletonViewBlockHtmlHelperTestBase</name>
      <full_name>\SingletonViewBlockHtmlHelperTestBase</full_name>
      <docblock line="18">
        <description>Summary for SingletonViewBlockHtmlHelperTestBase test case base</description>
        <long-description></long-description>
        <tag name="package" line="18" description="Default"/>
      </docblock>
      <property static="true" visibility="protected" namespace="" line="25" package="Default">
        <name>$_ViewBlock</name>
        <full_name>\SingletonViewBlockHtmlHelperTestBase::_ViewBlock</full_name>
        <default>null</default>
        <docblock line="25">
          <description>ViewBlock for test</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\ViewBlock" variable="">
            <type>\ViewBlock</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="32" package="Default">
        <name>setUp</name>
        <full_name>\SingletonViewBlockHtmlHelperTestBase::setUp()</full_name>
        <docblock line="32">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="32" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Default">
        <name>tearDown</name>
        <full_name>\SingletonViewBlockHtmlHelperTestBase::tearDown()</full_name>
        <docblock line="51">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJyVUl1v00AQfLZ/xSJVshMlMUU8uSVAw0MlEEJQ+oIQujqb+Mj57rhbJ61Q/zt7/ogjkUYgWT7f7s7s7owvX9vSxtl4HMMYvki9VkhG30rcXSlTbK6pUteoLDog9ASF8Ah3/OLygHhTGPvg5LokWOy/Xjw/fzmBj0gLU1VGe/jkzE8sqAGImkrj4L0pUcINOrGui1LC5Yb6b+ZsYBppZtx63sCU1BsoiWyeZbvdbsbJrizUPNVMyQI1T/wkMOsqZnRPhyQf2jCTZHH81to8rz36NAnCJBNoz9HFYeqUeAEysM9CRdZlmGQvf11Vwj3AivU5xXbDTlwFI45ZksWFEt7/GwHeE+qlh4XYYAguQvD3fqA9tBkpdOtt3wo3ZJuukXWGWHdcgidBsoCzHwP+FehaqWFVj/TVQoX8Lyx7TodUOw1bI5cdY33H9sCq1gVJo1tQOuIBo8gKh5ryvIsxcxSdbblfaMXv0DqEu+h0LqzlVdOkPcOywZThditUjckhwuGvOgjcEgaJPreRNOwygZVQHo8ApnMeTlT+W9IFcJl8Z5bzppRK6afz4+50rU5Zlza92n3lCtJn0rMEqUe1yvMDxUetTNFfCe7RjdtcfRjqMeant4ZQuHdmp//XnR7XGVTrMNfJddsteicH/EUzzmP8B4jzguk=</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/View/Helper/SingletonViewBlockHtml/SingletonViewBlockHtmlHelperMethodTest.php" generated-path="Plugin.NetCommons.Test.Case.View.Helper.SingletonViewBlockHtml.SingletonViewBlockHtmlHelperMethodTest.html" hash="c9ac674525dfdfd3b432b9ef951b2710" package="Default">
    <docblock line="0">
      <description>SingletonViewBlockHtmlHelper Test Case</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="17" package="Default">
      <extends>\SingletonViewBlockHtmlHelperTestBase</extends>
      <name>SingletonViewBlockHtmlHelperMethodTest</name>
      <full_name>\SingletonViewBlockHtmlHelperMethodTest</full_name>
      <docblock line="17">
        <description>Summary for TokenHelper Test Case</description>
        <long-description></long-description>
        <tag name="package" line="17" description="Default"/>
        <tag name="inherited_from" description="\SingletonViewBlockHtmlHelperTestBase" refers="\SingletonViewBlockHtmlHelperTestBase" link="/classes/SingletonViewBlockHtmlHelperTestBase.html"/>
      </docblock>
      <property static="true" visibility="protected" namespace="" line="25" package="Default">
        <name>$_ViewBlock</name>
        <full_name>\SingletonViewBlockHtmlHelperTestBase::_ViewBlock</full_name>
        <default>null</default>
        <docblock line="25">
          <description>ViewBlock for test</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="\ViewBlock" variable="">
            <type>\ViewBlock</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="Default">
        <name>testMeta</name>
        <full_name>\SingletonViewBlockHtmlHelperMethodTest::testMeta()</full_name>
        <docblock line="24">
          <description>testMeta method</description>
          <long-description></long-description>
          <tag name="return" line="24" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="39" package="Default">
        <name>testMetaWithBlock</name>
        <full_name>\SingletonViewBlockHtmlHelperMethodTest::testMetaWithBlock()</full_name>
        <docblock line="39">
          <description>testMetaWithBlock method</description>
          <long-description></long-description>
          <tag name="return" line="39" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="54" package="Default">
        <name>testCss</name>
        <full_name>\SingletonViewBlockHtmlHelperMethodTest::testCss()</full_name>
        <docblock line="54">
          <description>testCss method</description>
          <long-description></long-description>
          <tag name="return" line="54" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="Default">
        <name>testCssWithBlockSamePath</name>
        <full_name>\SingletonViewBlockHtmlHelperMethodTest::testCssWithBlockSamePath()</full_name>
        <docblock line="74">
          <description>testCssWithBlockSamePath method</description>
          <long-description></long-description>
          <tag name="return" line="74" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="94" package="Default">
        <name>testCssWithBlockAnotherPath</name>
        <full_name>\SingletonViewBlockHtmlHelperMethodTest::testCssWithBlockAnotherPath()</full_name>
        <docblock line="94">
          <description>testCssWithBlockAnotherPath method</description>
          <long-description>Unnecessary if under 2.6.0</long-description>
          <tag name="return" line="94" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="109" package="Default">
        <name>testScript</name>
        <full_name>\SingletonViewBlockHtmlHelperMethodTest::testScript()</full_name>
        <docblock line="109">
          <description>testScript method</description>
          <long-description></long-description>
          <tag name="return" line="109" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="129" package="Default">
        <name>testScriptWithBlockSameUrl</name>
        <full_name>\SingletonViewBlockHtmlHelperMethodTest::testScriptWithBlockSameUrl()</full_name>
        <docblock line="129">
          <description>testScriptWithBlockSameUrl method</description>
          <long-description></long-description>
          <tag name="return" line="129" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="144" package="Default">
        <name>testScriptWithBlockAnotherUrl</name>
        <full_name>\SingletonViewBlockHtmlHelperMethodTest::testScriptWithBlockAnotherUrl()</full_name>
        <docblock line="144">
          <description>testScriptWithBlockAnotherUrl method</description>
          <long-description></long-description>
          <tag name="return" line="144" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="159" package="Default">
        <name>testScriptBlock</name>
        <full_name>\SingletonViewBlockHtmlHelperMethodTest::testScriptBlock()</full_name>
        <docblock line="159">
          <description>testScriptBlock method</description>
          <long-description></long-description>
          <tag name="return" line="159" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="174" package="Default">
        <name>testScriptBlockWithBlock</name>
        <full_name>\SingletonViewBlockHtmlHelperMethodTest::testScriptBlockWithBlock()</full_name>
        <docblock line="174">
          <description>testMetaReturnWithBlock method</description>
          <long-description></long-description>
          <tag name="return" line="174" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="32" package="Default">
        <name>setUp</name>
        <full_name>\SingletonViewBlockHtmlHelperTestBase::setUp()</full_name>
        <docblock line="32">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="32" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\SingletonViewBlockHtmlHelperTestBase</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Default">
        <name>tearDown</name>
        <full_name>\SingletonViewBlockHtmlHelperTestBase::tearDown()</full_name>
        <docblock line="51">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\SingletonViewBlockHtmlHelperTestBase</inherited_from>
      </method>
    </class>
    <source>eJzdWG1v4kYQ/hx+xQqdZBMRfE2rfiBAS6I7pbr0LspL+6E5RXv2gBfMrm93HYKq+++d9drGBMMlTtI0/WKZ8cyzM/PMi3HvlziMG97uboPsknPGxxFowf9gMD+MhD891rPoGKIYJLkApckRVYCaRvlXX8QLycYhSou7/bc//NQmH0EfidlMcEVOpZiAr1MDmuhQSPJBhMAQTtJx4oeM9KY6v0fM1IyD7gg5HqRmEeNTEmoddz1vPp938GGmZnQ2HRYxH7iCzYZeptHRt7oMcmLFCOI1GsM47nYTBcp1tiXH5OYQU+O0ibOE6hixZ1LmGRvP6nrVQE7roFHwkMxmVC7ICLN1IabAqynwGn5EldpK2++AOQ9SQ7jVwIPt6nkg5O/CGY0iRKFklkLl7EvQieTkRrAgdWUnTr5gRsko4b5mghd2bgvBdnbewG2M3EBA+sTpzQwgpzPoN6ewmAsZqCbxBUcPdb+pQ1DQJlTiRYkZXo1+mxSq3sA5MJjU1wmNEPGNDpnaG1SHtjcw5q6TmxuWvneEoQMPsLCYZJD63Vc8S7lFIG2SnW+YQ10OEERgnMk1Uoib3BV8cnp8esmZvn4vMXQ8Z3o9TKG7XQk0GGot2ZdEg7s1HPT++lppqplfyCvc/SiwDrmmjKPP1jf0uPBmbzAG7TomaqdlrL+tMf4n06H1vCb1BUBeAyI2zxVmgkpJF67DOHY3OKQ/ICNMLrQeTmuGZIopxXHOPh1+ujg3JGcFZcXDkxOn1SY8iTCDuScVacPn7gZiV+rWHlOqWjygKMyXIv0RjB/hJKnBM5pVdbjXS8e2hKjfVHoRgQoBdJPoRYy50ziLrjxfYdOHEkb9Zmc3/Zle3rMIrjrm4ZU38B7W6GjlOhlGRXrOYPzuNr5HCzvGkdwZ48vL0nq/XjZutrJIioQ9tZu/cT9KAggMis7H5JIee/eXs1wp3a7x6/NaTEPTt8dUfYDFkrIyIXf0L2QCboGfG3yuLORi8Jxj0KdUhzUrew1n0yBD2c7aMGunUsF9K9MYAEoeNuJWCrr23HrN1byF3SEXuMflOsGXnIMPSpmXKDYiCQ/w7Wm/83Pnbe0KKJ31TNusTHV22tMwnoG9PPH1WT/3JYt1nS62ltUrSlnU8k6a0BtqxU2ipG830wQXkxXa3TRRzUEvFz10RVkr11kCPmZRvaZ3TRvxf3JFZa59Z0uVKLv3oirZVOwqW50ra+ZSRvXr/C7SM42qihquP6kmqtRc2FuvYTmVSnk7o9nsfRpSl2D/Gq+PX0Qr9Oar6KVZfgKKa/8zLplXraU544GYd0ZC4K/9OrvFQt8BOtiahf/rnqn4qnGWcvSobxslBp/7E8dmRn88qN+U2ZvPYBWwl7/RvMIJ/K3xD+7glqI=</source>
  </file>
  <file path="Plugin/NetCommons/Test/Case/View/Elements/JsonTemplateTest.php" generated-path="Plugin.NetCommons.Test.Case.View.Elements.JsonTemplateTest.html" hash="3cb97be810fdc0e27991d292aa5a8c42" package="Default">
    <docblock line="0">
      <description>Json CakePHP template test case</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="17" package="Default">
      <extends>\CakeTestCase</extends>
      <name>JsonTemplateTest</name>
      <full_name>\JsonTemplateTest</full_name>
      <docblock line="17">
        <description>Json CakePHP template test case</description>
        <long-description></long-description>
        <tag name="package" line="17" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="24" package="Default">
        <name>testJson</name>
        <full_name>\JsonTemplateTest::testJson()</full_name>
        <docblock line="24">
          <description>testJson method</description>
          <long-description></long-description>
          <tag name="return" line="24" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJyNkk9v00AQxc/xp5gDkp0ojQFxSdoGKqsqtKhENDeEkGNPYzebXbM7WzdC/e7Mrv+QRBRxG8++95udtz57XxVVEI9GAYzg2igJSbrBxccFEG4rkRJyYQiy1CBLnOpDpqqdLtcFQdJXb1+/eTeGW6REbbdKGlho9YAZeUNqqVAablSBJSxRp2ubFSWcbairmeltEmmi9HrubaKUGyiIqlkc13U94cNW5jQvDRNlhtLgy8a4VUzoifYhn5s2Q+IguKiq2cwaNFGYKElaCYE6HMP+1/D0QMa5fUVTMQqdkMm10hun+v984yATqTFeuWwFS3eOT4QyN97tGgnr4VdPdgxP3yJHnXcvpZGslvCoytzDB5Vd8fZwb2VGJcs7XzRk2GAQx/CJoDSwQuK3AY33qFFmCFdKrQXC9d2XW7ijHZdXtsyRPa90uzScg8Qa9nOIeHlWZH1mnaZvRNIKMYYecmw4mT+WWCc+lHMI3V1DL5Hp1k0M3QZNx1BK1qum02nTYqoV5Htd2eqPpxikiP+RKs0oCh3bPWFDdFXrDofD06OVDyicVc47hX/+qsmlwC1KMvGDu3pjd+WF1umO/a7+kWOmcox67sl8pfJdNBwDaesycS4qSnMy5yBQ0+VPmwoT+RQ4vR74rbn792bO3xzNToceN/xfnnb7Q1MXifc9B8Fz8BuevWln</source>
  </file>
  <file path="Plugin/NetCommons/Test/test_app/Controller/TestHelperController.php" generated-path="Plugin.NetCommons.Test.test_app.Controller.TestHelperController.html" hash="bfdafdf306120debf6f322d2a3d5b745" package="Default">
    <docblock line="0">
      <description>TestHelper Controller</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="Default">
      <extends>\AppController</extends>
      <name>TestHelperController</name>
      <full_name>\TestHelperController</full_name>
      <docblock line="21">
        <description>TestHelper Controller</description>
        <long-description>Add your application-wide methods in the class below, your controllers
will inherit them.</long-description>
        <tag name="copyright" line="21" description="Copyright 2014, NetCommons Project"/>
        <tag name="author" line="21" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
        <tag name="link" line="21" description="NetCommons Project" link="http://www.netcommons.org"/>
        <tag name="license" line="21" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
        <tag name="package" line="21" description="Default"/>
        <tag name="inherited_from" description="\AppController" refers="\AppController" link="/classes/AppController.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="28" package="Default">
        <name>$helpers</name>
        <full_name>\TestHelperController::helpers</full_name>
        <default>array('Html')</default>
        <docblock line="28">
          <description>An array containing the names of helpers</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="29" package="NetCommons\NetCommons\Controller">
        <name>$layout</name>
        <full_name>\NetCommonsAppController::layout</full_name>
        <default>'NetCommons.default'</default>
        <docblock line="29">
          <description>use layout</description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="36" package="NetCommons\NetCommons\Controller">
        <name>$theme</name>
        <full_name>\NetCommonsAppController::theme</full_name>
        <default>'default'</default>
        <docblock line="36">
          <description>use theme</description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Controller">
        <name>$components</name>
        <full_name>\NetCommonsAppController::components</full_name>
        <default>array('Asset', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; 'auth', 'controller' =&gt; 'auth', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index')), 'DebugKit.Toolbar', 'Flash', 'NetCommons.NetCommons', 'NetCommons.Permission' =&gt; array('allow' =&gt; array('index' =&gt; null, 'view' =&gt; null)), 'RequestHandler', 'Session', 'Workflow.Workflow')</default>
        <docblock line="43">
          <description>use components</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="82" package="NetCommons\NetCommons\Controller">
        <name>$uses</name>
        <full_name>\NetCommonsAppController::uses</full_name>
        <default>array('M17n.Language', 'NetCommons.SiteSetting')</default>
        <docblock line="82">
          <description>use model</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="92" package="NetCommons\NetCommons\Controller">
        <name>$helpers</name>
        <full_name>\NetCommonsAppController::helpers</full_name>
        <default>array('Html' =&gt; array('className' =&gt; 'NetCommons.SingletonViewBlockHtml'), 'NetCommons.BackTo', 'NetCommons.Button', 'NetCommons.Date', 'NetCommons.NetCommonsForm', 'NetCommons.NetCommonsHtml')</default>
        <docblock line="92">
          <description>use helpers</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="NetCommons\NetCommons\Controller">
        <name>__construct</name>
        <full_name>\NetCommonsAppController::__construct()</full_name>
        <docblock line="110">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="110" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="110" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="124" package="NetCommons\NetCommons\Controller">
        <name>beforeFilter</name>
        <full_name>\NetCommonsAppController::beforeFilter()</full_name>
        <docblock line="124">
          <description>beforeFilter</description>
          <long-description></long-description>
          <tag name="return" line="124" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="166" package="NetCommons\NetCommons\Controller">
        <name>beforeRender</name>
        <full_name>\NetCommonsAppController::beforeRender()</full_name>
        <docblock line="166">
          <description>beforeRender</description>
          <long-description></long-description>
          <tag name="return" line="166" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="192" package="NetCommons\NetCommons\Controller">
        <name>beforeRedirect</name>
        <full_name>\NetCommonsAppController::beforeRedirect()</full_name>
        <docblock line="192">
          <description>The beforeRedirect method is invoked when the controller's redirect method is called but before any
further action.</description>
          <long-description>If this method returns false the controller will not continue on to redirect the request.
The $url, $status and $exit variables have same meaning as for the controller's method. You can also
return a string which will be interpreted as the URL to redirect to or return associative array with
key 'url' and optionally 'status' and 'exit'.</long-description>
          <tag name="param" line="192" description="&lt;p&gt;A string or array-based URL pointing to another location within the app,&#10;or an absolute URL&lt;/p&gt;" type="string|array" variable="$url">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;Optional HTTP status code (eg: 404)&lt;/p&gt;" type="integer" variable="$status">
            <type>integer</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;If true, exit() will be called after the redirect&lt;/p&gt;" type="boolean" variable="$exit">
            <type>boolean</type>
          </tag>
          <tag name="return" line="192" description="false to stop redirection event,&#10;  string controllers a new redirection URL or&#10;  array with the keys url, status and exit to be used by the redirect method." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="192" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="link" line="192" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
          <tag name="SuppressWarnings" line="192" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exit</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="207" package="NetCommons\NetCommons\Controller">
        <name>ping</name>
        <full_name>\NetCommonsAppController::ping()</full_name>
        <docblock line="207">
          <description>Keep connection alive</description>
          <long-description></long-description>
          <tag name="author" line="207" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
          <tag name="return" line="207" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="218" package="NetCommons\NetCommons\Controller">
        <name>camelizeKeyRecursive</name>
        <full_name>\NetCommonsAppController::camelizeKeyRecursive()</full_name>
        <docblock line="218">
          <description>camelizeKeyRecursive</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;data to camelize&lt;/p&gt;" type="array" variable="$orig">
            <type>array</type>
          </tag>
          <tag name="return" line="218" description="camelized data" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orig</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="239" package="NetCommons\NetCommons\Controller">
        <name>throwBadRequest</name>
        <full_name>\NetCommonsAppController::throwBadRequest()</full_name>
        <docblock line="239">
          <description>throw bad request</description>
          <long-description></long-description>
          <tag name="return" line="239" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="239" description="" type="\BadRequestException">
            <type>\BadRequestException</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="256" package="NetCommons\NetCommons\Controller">
        <name>emptyRender</name>
        <full_name>\NetCommonsAppController::emptyRender()</full_name>
        <docblock line="256">
          <description>Empty render</description>
          <long-description></long-description>
          <tag name="return" line="256" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
    </class>
    <source>eJztkUtOwzAQhtf4FLNASomqBBCrUB5VN5VAiAUXMGaITR3bsiekFeLuuE5Cw6I3YDf2/xjr8+LOScfKPGeQwwsGWqN26GFlDXmrNfoo7LV7Yd3Oq1pS1Mbp8vziag5PSCvbNNYEePb2AwWlAG9JWg8PVqKK1Z7XrZAKFhsa59iZYgapsL6+TTGtzAYkkavKsuu6IoqDbe85tkwrgSbg8WA5OAra0rTksb+OJSVjS+eqqg0YZlkcDwyyOWST09k1+0fWIxOahzChcIAAuCU0bwH+kISvX3RLA9x7vgMRVa6MMjWQRDC8wQD2HWRqDCPNT+77QFp84trX+D44HVxw04uzbE2NTl/0zX4Af8n5bw==</source>
  </file>
  <file path="Plugin/NetCommons/Test/test_app/Plugin/TestPlugin/Controller/TestPluginController.php" generated-path="Plugin.NetCommons.Test.test_app.Plugin.TestPlugin.Controller.TestPluginController.html" hash="bbaf435f04c30c332d81896b874994f9" package="Default">
    <docblock line="0">
      <description>TestPlugin Controller</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="NetCommons\NetCommons\Test\test_app\TestPlugin\Controller">
      <extends>\AppController</extends>
      <name>TestPluginController</name>
      <full_name>\TestPluginController</full_name>
      <docblock line="19">
        <description>IframesApp Controller</description>
        <long-description>Add your application-wide methods in the class below, your controllers
will inherit them.</long-description>
        <tag name="author" line="19" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="19" description="NetCommons\NetCommons\Test\test_app\TestPlugin\Controller"/>
        <tag name="inherited_from" description="\AppController" refers="\AppController" link="/classes/AppController.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="29" package="NetCommons\NetCommons\Controller">
        <name>$layout</name>
        <full_name>\NetCommonsAppController::layout</full_name>
        <default>'NetCommons.default'</default>
        <docblock line="29">
          <description>use layout</description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="36" package="NetCommons\NetCommons\Controller">
        <name>$theme</name>
        <full_name>\NetCommonsAppController::theme</full_name>
        <default>'default'</default>
        <docblock line="36">
          <description>use theme</description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Controller">
        <name>$components</name>
        <full_name>\NetCommonsAppController::components</full_name>
        <default>array('Asset', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; 'auth', 'controller' =&gt; 'auth', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index')), 'DebugKit.Toolbar', 'Flash', 'NetCommons.NetCommons', 'NetCommons.Permission' =&gt; array('allow' =&gt; array('index' =&gt; null, 'view' =&gt; null)), 'RequestHandler', 'Session', 'Workflow.Workflow')</default>
        <docblock line="43">
          <description>use components</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="82" package="NetCommons\NetCommons\Controller">
        <name>$uses</name>
        <full_name>\NetCommonsAppController::uses</full_name>
        <default>array('M17n.Language', 'NetCommons.SiteSetting')</default>
        <docblock line="82">
          <description>use model</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="92" package="NetCommons\NetCommons\Controller">
        <name>$helpers</name>
        <full_name>\NetCommonsAppController::helpers</full_name>
        <default>array('Html' =&gt; array('className' =&gt; 'NetCommons.SingletonViewBlockHtml'), 'NetCommons.BackTo', 'NetCommons.Button', 'NetCommons.Date', 'NetCommons.NetCommonsForm', 'NetCommons.NetCommonsHtml')</default>
        <docblock line="92">
          <description>use helpers</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="26" package="NetCommons\NetCommons\Test\test_app\TestPlugin\Controller">
        <name>index</name>
        <full_name>\TestPluginController::index()</full_name>
        <docblock line="26">
          <description>index</description>
          <long-description></long-description>
          <tag name="return" line="26" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="NetCommons\NetCommons\Controller">
        <name>__construct</name>
        <full_name>\NetCommonsAppController::__construct()</full_name>
        <docblock line="110">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="110" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="110" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="124" package="NetCommons\NetCommons\Controller">
        <name>beforeFilter</name>
        <full_name>\NetCommonsAppController::beforeFilter()</full_name>
        <docblock line="124">
          <description>beforeFilter</description>
          <long-description></long-description>
          <tag name="return" line="124" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="166" package="NetCommons\NetCommons\Controller">
        <name>beforeRender</name>
        <full_name>\NetCommonsAppController::beforeRender()</full_name>
        <docblock line="166">
          <description>beforeRender</description>
          <long-description></long-description>
          <tag name="return" line="166" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="192" package="NetCommons\NetCommons\Controller">
        <name>beforeRedirect</name>
        <full_name>\NetCommonsAppController::beforeRedirect()</full_name>
        <docblock line="192">
          <description>The beforeRedirect method is invoked when the controller's redirect method is called but before any
further action.</description>
          <long-description>If this method returns false the controller will not continue on to redirect the request.
The $url, $status and $exit variables have same meaning as for the controller's method. You can also
return a string which will be interpreted as the URL to redirect to or return associative array with
key 'url' and optionally 'status' and 'exit'.</long-description>
          <tag name="param" line="192" description="&lt;p&gt;A string or array-based URL pointing to another location within the app,&#10;or an absolute URL&lt;/p&gt;" type="string|array" variable="$url">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;Optional HTTP status code (eg: 404)&lt;/p&gt;" type="integer" variable="$status">
            <type>integer</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;If true, exit() will be called after the redirect&lt;/p&gt;" type="boolean" variable="$exit">
            <type>boolean</type>
          </tag>
          <tag name="return" line="192" description="false to stop redirection event,&#10;  string controllers a new redirection URL or&#10;  array with the keys url, status and exit to be used by the redirect method." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="192" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="link" line="192" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
          <tag name="SuppressWarnings" line="192" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exit</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="207" package="NetCommons\NetCommons\Controller">
        <name>ping</name>
        <full_name>\NetCommonsAppController::ping()</full_name>
        <docblock line="207">
          <description>Keep connection alive</description>
          <long-description></long-description>
          <tag name="author" line="207" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
          <tag name="return" line="207" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="218" package="NetCommons\NetCommons\Controller">
        <name>camelizeKeyRecursive</name>
        <full_name>\NetCommonsAppController::camelizeKeyRecursive()</full_name>
        <docblock line="218">
          <description>camelizeKeyRecursive</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;data to camelize&lt;/p&gt;" type="array" variable="$orig">
            <type>array</type>
          </tag>
          <tag name="return" line="218" description="camelized data" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orig</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="239" package="NetCommons\NetCommons\Controller">
        <name>throwBadRequest</name>
        <full_name>\NetCommonsAppController::throwBadRequest()</full_name>
        <docblock line="239">
          <description>throw bad request</description>
          <long-description></long-description>
          <tag name="return" line="239" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="239" description="" type="\BadRequestException">
            <type>\BadRequestException</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="256" package="NetCommons\NetCommons\Controller">
        <name>emptyRender</name>
        <full_name>\NetCommonsAppController::emptyRender()</full_name>
        <docblock line="256">
          <description>Empty render</description>
          <long-description></long-description>
          <tag name="return" line="256" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
    </class>
    <source>eJytUcFOAjEQPdOvmBuwIbtqPCFRDCcTQ0j0uImpZdgWdtumncoaw79bll1ZEr15aV775s30vZk9WGlZliQMEnhFT6syFErDwmhypizRReLIzXkgaRy8SCNRwZLv+FZVHGa6RV6aEJl5UXFVpsJU942sVHoHkshOs2y/36caKXKV0T41roAl0uJ0hZUzWxTUqgRqj38Ls7YipZr6TZ5Pz00TYeynU4Wk6KZDN1fXt5Pfp2aMPVo7nQaPfjSM8JzBcALD3m18x7rInjaOV+hj9f9FZrnY8QJ7v8x78LiknOLxxq3NzyvLL+ZnTJTc+95KzzRgTajXHi48wtePKaXXWHcmHFJwGj6MWjd9Bza8x/BhE7QgZfSpejSO+sGBsQP7BoVGyds=</source>
  </file>
  <file path="Plugin/NetCommons/Test/test_app/Plugin/TestNetCommons/Controller/TestNetCommonsController.php" generated-path="Plugin.NetCommons.Test.test_app.Plugin.TestNetCommons.Controller.TestNetCommonsController.html" hash="158cc5f0bc6558b81745ae9bd5dc18cd" package="Default">
    <docblock line="0">
      <description>TestNetCommons Controller</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="19" package="NetCommons\NetCommons\Test\test_app\TestNetCommons\Controller">
      <extends>\AppController</extends>
      <name>TestNetCommonsController</name>
      <full_name>\TestNetCommonsController</full_name>
      <docblock line="19">
        <description>TestNetCommons Controller</description>
        <long-description>Add your application-wide methods in the class below, your controllers
will inherit them.</long-description>
        <tag name="author" line="19" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="19" description="NetCommons\NetCommons\Test\test_app\TestNetCommons\Controller"/>
        <tag name="inherited_from" description="\AppController" refers="\AppController" link="/classes/AppController.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="29" package="NetCommons\NetCommons\Controller">
        <name>$layout</name>
        <full_name>\NetCommonsAppController::layout</full_name>
        <default>'NetCommons.default'</default>
        <docblock line="29">
          <description>use layout</description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="36" package="NetCommons\NetCommons\Controller">
        <name>$theme</name>
        <full_name>\NetCommonsAppController::theme</full_name>
        <default>'default'</default>
        <docblock line="36">
          <description>use theme</description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Controller">
        <name>$components</name>
        <full_name>\NetCommonsAppController::components</full_name>
        <default>array('Asset', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; 'auth', 'controller' =&gt; 'auth', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index')), 'DebugKit.Toolbar', 'Flash', 'NetCommons.NetCommons', 'NetCommons.Permission' =&gt; array('allow' =&gt; array('index' =&gt; null, 'view' =&gt; null)), 'RequestHandler', 'Session', 'Workflow.Workflow')</default>
        <docblock line="43">
          <description>use components</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="82" package="NetCommons\NetCommons\Controller">
        <name>$uses</name>
        <full_name>\NetCommonsAppController::uses</full_name>
        <default>array('M17n.Language', 'NetCommons.SiteSetting')</default>
        <docblock line="82">
          <description>use model</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="92" package="NetCommons\NetCommons\Controller">
        <name>$helpers</name>
        <full_name>\NetCommonsAppController::helpers</full_name>
        <default>array('Html' =&gt; array('className' =&gt; 'NetCommons.SingletonViewBlockHtml'), 'NetCommons.BackTo', 'NetCommons.Button', 'NetCommons.Date', 'NetCommons.NetCommonsForm', 'NetCommons.NetCommonsHtml')</default>
        <docblock line="92">
          <description>use helpers</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="26" package="NetCommons\NetCommons\Test\test_app\TestNetCommons\Controller">
        <name>beforeFilter</name>
        <full_name>\TestNetCommonsController::beforeFilter()</full_name>
        <docblock line="26">
          <description>beforeFilter</description>
          <long-description></long-description>
          <tag name="return" line="26" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="40" package="NetCommons\NetCommons\Test\test_app\TestNetCommons\Controller">
        <name>index</name>
        <full_name>\TestNetCommonsController::index()</full_name>
        <docblock line="40">
          <description>index</description>
          <long-description></long-description>
          <tag name="return" line="40" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="NetCommons\NetCommons\Test\test_app\TestNetCommons\Controller">
        <name>indexJson</name>
        <full_name>\TestNetCommonsController::indexJson()</full_name>
        <docblock line="48">
          <description>indexJson</description>
          <long-description></long-description>
          <tag name="return" line="48" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="58" package="NetCommons\NetCommons\Test\test_app\TestNetCommons\Controller">
        <name>throwBadRequestAjax</name>
        <full_name>\TestNetCommonsController::throwBadRequestAjax()</full_name>
        <docblock line="58">
          <description>throw bad request</description>
          <long-description></long-description>
          <tag name="return" line="58" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="NetCommons\NetCommons\Test\test_app\TestNetCommons\Controller">
        <name>install</name>
        <full_name>\TestNetCommonsController::install()</full_name>
        <docblock line="68">
          <description>install</description>
          <long-description></long-description>
          <tag name="return" line="68" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="NetCommons\NetCommons\Controller">
        <name>__construct</name>
        <full_name>\NetCommonsAppController::__construct()</full_name>
        <docblock line="110">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="110" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="110" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="124" package="NetCommons\NetCommons\Controller">
        <name>beforeFilter</name>
        <full_name>\NetCommonsAppController::beforeFilter()</full_name>
        <docblock line="124">
          <description>beforeFilter</description>
          <long-description></long-description>
          <tag name="return" line="124" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="166" package="NetCommons\NetCommons\Controller">
        <name>beforeRender</name>
        <full_name>\NetCommonsAppController::beforeRender()</full_name>
        <docblock line="166">
          <description>beforeRender</description>
          <long-description></long-description>
          <tag name="return" line="166" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="192" package="NetCommons\NetCommons\Controller">
        <name>beforeRedirect</name>
        <full_name>\NetCommonsAppController::beforeRedirect()</full_name>
        <docblock line="192">
          <description>The beforeRedirect method is invoked when the controller's redirect method is called but before any
further action.</description>
          <long-description>If this method returns false the controller will not continue on to redirect the request.
The $url, $status and $exit variables have same meaning as for the controller's method. You can also
return a string which will be interpreted as the URL to redirect to or return associative array with
key 'url' and optionally 'status' and 'exit'.</long-description>
          <tag name="param" line="192" description="&lt;p&gt;A string or array-based URL pointing to another location within the app,&#10;or an absolute URL&lt;/p&gt;" type="string|array" variable="$url">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;Optional HTTP status code (eg: 404)&lt;/p&gt;" type="integer" variable="$status">
            <type>integer</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;If true, exit() will be called after the redirect&lt;/p&gt;" type="boolean" variable="$exit">
            <type>boolean</type>
          </tag>
          <tag name="return" line="192" description="false to stop redirection event,&#10;  string controllers a new redirection URL or&#10;  array with the keys url, status and exit to be used by the redirect method." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="192" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="link" line="192" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
          <tag name="SuppressWarnings" line="192" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exit</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="207" package="NetCommons\NetCommons\Controller">
        <name>ping</name>
        <full_name>\NetCommonsAppController::ping()</full_name>
        <docblock line="207">
          <description>Keep connection alive</description>
          <long-description></long-description>
          <tag name="author" line="207" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
          <tag name="return" line="207" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="218" package="NetCommons\NetCommons\Controller">
        <name>camelizeKeyRecursive</name>
        <full_name>\NetCommonsAppController::camelizeKeyRecursive()</full_name>
        <docblock line="218">
          <description>camelizeKeyRecursive</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;data to camelize&lt;/p&gt;" type="array" variable="$orig">
            <type>array</type>
          </tag>
          <tag name="return" line="218" description="camelized data" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orig</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="239" package="NetCommons\NetCommons\Controller">
        <name>throwBadRequest</name>
        <full_name>\NetCommonsAppController::throwBadRequest()</full_name>
        <docblock line="239">
          <description>throw bad request</description>
          <long-description></long-description>
          <tag name="return" line="239" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="239" description="" type="\BadRequestException">
            <type>\BadRequestException</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="256" package="NetCommons\NetCommons\Controller">
        <name>emptyRender</name>
        <full_name>\NetCommonsAppController::emptyRender()</full_name>
        <docblock line="256">
          <description>Empty render</description>
          <long-description></long-description>
          <tag name="return" line="256" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
    </class>
    <source>eJy1U9Fu0zAUfW6+wg+T3FVbA4insJaVUTTQmEZbYNKKKje5TdwmtmffkCLUf8d1sjYpIG1CPCRyfM8599x7lLPXKlGe3+l4pEMmYPAa8EJmmRSGXEiBWqYpaFvc1s9ZjonUZJzIBDi5Ziu25BkjZ6I6mUTmtnIeZ4yn3VBmfUdLuViRBFEFvl8URVcAhmWPrtQxqbW80XIJIVasEISBvxP9CtHFNdZFrsprJxJK9UPzOEE7zcPpxbPnL0/+3NX3vIFSQZAbMG1qj/sd0BNCa1/Hr7z/vTbFwhWLoeZ0Wjtuu07RvmZMqWnTw7ThwffClBlz4HMPIbBGEJEhjXnJz92Ac1hIDe94ivuZNGCuBfkueeRatFQ+t3mQRS5C5FI0SO1jq9Zq8QVpH2HCzWlfMc0yc0eZA9NvpNfrEcqFQZamtIS3rJkFj3MNQVBojtCme/vdCguRDWbBUgM2Ecs50FdpHnOnv1ff4jb2sRgQGARNp9tqJTKwuZ32LUUW7n6z2wgXEawfvQqHLndwIPHBSPE0mS2jWufRbDwcfRmO7ujlZHIzu52Nhp8+D8eT4dvZ1/eTy3Lo249Xl/YHGsF9buOntekM4MAJt6lTps0RMdGyIHMWEV1yH+3TMd+wqOo5WLL1Pzp+SOpA+bdQXL5P2KfD74LZeL8AajuhVw==</source>
  </file>
  <file path="Plugin/NetCommons/Test/Fixture/TrackablesUserFixture.php" generated-path="Plugin.NetCommons.Test.Fixture.TrackablesUserFixture.html" hash="9dfe10b087190500cfd72dc235c0da62" package="Default">
    <docblock line="0">
      <description>TrackablesUserFixture</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="14" package="Default">
      <extends>\CakeTestFixture</extends>
      <name>TrackablesUserFixture</name>
      <full_name>\TrackablesUserFixture</full_name>
      <docblock line="14">
        <description>Summary for TrackablesUserFixture</description>
        <long-description></long-description>
        <tag name="package" line="14" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="21" package="Default">
        <name>$fields</name>
        <full_name>\TrackablesUserFixture::fields</full_name>
        <default>array('id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null, 'key' =&gt; 'primary'), 'trackable_id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null), 'user_id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null), 'indexes' =&gt; array('PRIMARY' =&gt; array('column' =&gt; 'id', 'unique' =&gt; 1)), 'tableParameters' =&gt; array('charset' =&gt; 'utf8', 'collate' =&gt; 'utf8_unicode_ci', 'engine' =&gt; 'InnoDB'))</default>
        <docblock line="21">
          <description>Fields</description>
          <long-description></long-description>
          <tag name="var" line="21" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="36" package="Default">
        <name>$records</name>
        <full_name>\TrackablesUserFixture::records</full_name>
        <default>array(array('id' =&gt; 1, 'trackable_id' =&gt; 1, 'user_id' =&gt; 1), array('id' =&gt; 2, 'trackable_id' =&gt; 1, 'user_id' =&gt; 2), array('id' =&gt; 3, 'trackable_id' =&gt; 2, 'user_id' =&gt; 1), array('id' =&gt; 4, 'trackable_id' =&gt; 2, 'user_id' =&gt; 2))</default>
        <docblock line="36">
          <description>Records</description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <source>eJytkk2P0zAQhs/Nr/ABybSqGlr2sILd5aNopRUfqrrlwKnyOpPExLGDPaaNEP8dx0lK0BKxSHuL35l53vnIxasqr6J4NovIjOwM4wW7k2A/WzDX4ojOgA80sddcV7URWY5kffpaPVuezcknwLUuS60s2Rj9FTiGAuYw14a81zkIsgPDMsdzQS4K7L89M5QpwIU22VUok0IVJEesXsTx4XBY+GCX1uSMmUnBQVkYL4y7jAUecQj50MoeEkf9Hm5dWTJTk9S3P7aTOOKSWfv3OIEjgkosWbMCdmCx13+cPK4FyMT2y/3ODGHGsDqQJ5W78+2SJ2lIIpdt7Gk0mVCRUHJ51QkU6wrCmwqFkIGhc0KVkzKIKZMWvJBAypzEoDVBLxVQt3WVEc2sdDpv6NhPs38Mn5bp/F4eESdUAkewA5xXJ3Szvfn4Zvtl6MK1dKXqfJLGwinxzbXOy6kv64ZuBt4ww0rwv6b9A5EzY6FtgTpMzxuK50qG8Fvcey7XCey5aOKgMqG68I1S+t1b6s2mL0+33wLX5p/HN23W8PqDebuFLufhde9unT7c/bIf+D5l9XDKapzyfISy+q9ezh5OCb2Ezf6MfgEpTGUr</source>
  </file>
  <file path="Plugin/NetCommons/Test/Fixture/PublishableFixture.php" generated-path="Plugin.NetCommons.Test.Fixture.PublishableFixture.html" hash="7e3aeebff512d58a695c2bce6889c243" package="Default">
    <docblock line="0">
      <description>PublishableFixture</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="15" package="Default">
      <extends>\CakeTestFixture</extends>
      <name>PublishableFixture</name>
      <full_name>\PublishableFixture</full_name>
      <docblock line="15">
        <description>Summary for PublishableFixture</description>
        <long-description></long-description>
        <tag name="package" line="15" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="22" package="Default">
        <name>$fields</name>
        <full_name>\PublishableFixture::fields</full_name>
        <default>array('id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null, 'key' =&gt; 'primary'), 'key' =&gt; array('type' =&gt; 'string', 'null' =&gt; true, 'default' =&gt; null), 'origin_id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null), 'title' =&gt; array('type' =&gt; 'string', 'null' =&gt; true, 'default' =&gt; null), 'status' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null, 'length' =&gt; 4), 'is_active' =&gt; array('type' =&gt; 'boolean', 'null' =&gt; false, 'default' =&gt; '0'), 'is_latest' =&gt; array('type' =&gt; 'boolean', 'null' =&gt; false, 'default' =&gt; '0'), 'created_user' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null), 'created' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true, 'default' =&gt; null), 'modified_user' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null), 'modified' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true, 'default' =&gt; null), 'indexes' =&gt; array('PRIMARY' =&gt; array('column' =&gt; 'id', 'unique' =&gt; 1)), 'tableParameters' =&gt; array('charset' =&gt; 'utf8', 'collate' =&gt; 'utf8_unicode_ci', 'engine' =&gt; 'InnoDB'))</default>
        <docblock line="22">
          <description>Fields</description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <source>eJytlE1v2kAQhs/4V+yhkgtCdlLlULUkJaWKFKlFKOmlJ7SsB3tgP9zd2QCK+t+7/oASFdocfLHW7zvzzOx45NGnsiijdDCI2IDN/EKiK/hCwh1uyVsIamWMuafCWDY1FteG3VqObMTDc6wREy6SVXlzHPdYmAKQTfmar1BxNtLtyRXGB2ecK44yEUY1acKUO4t5QWxyOL27uLwasinQxChltGMza1YgqE6QqNesICo/pOlms0k0kGjCEmPz81kCtIPziWkbkdCWjiFfGzlA0mg/rEevFLc7tgz3PTm4NBKSO3fCZLAl0JljE76G7+Borz8f6HcIMnP78T9xy7i1fFdje2VFFOzNsg5i1433Nur1Ysxidn3TCjHtSqjfY9QEOdh4yGLtpazFJZcOgpDBkntJtVaZQVrDrskrLVa3jPvDir6X/8I7sqjzF3Sy/hS8AYU9ylHPu+i2ARKShG56c8TJu07GKEHnVNTKVQNHN+eC8OlMrwtjJHD9X358ER94klNYoY54wkLAZXPvwi1fPYJ/zrNFnqZlwSJU8HqcMhmGxe+0xT2zqx5RZ7CF4x0Kai+ePdx/u334cVxFGOmVbtvOqgpe40/fVL7sh7R2v6vfxyz8chUQ2BfbKQpuHbTf0dPyfUUJ3Gov/ojzwBUmg7nAyg+Libq177U2Xz7HoVj/Y/Qr+g1t893E</source>
  </file>
  <file path="Plugin/NetCommons/Test/Fixture/OriginalWithoutKeyFixture.php" generated-path="Plugin.NetCommons.Test.Fixture.OriginalWithoutKeyFixture.html" hash="01ed1d6f5d4e25d4fafd098df9fc9195" package="Default">
    <docblock line="0">
      <description>OriginalKeyFixture</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="15" package="Default">
      <extends>\CakeTestFixture</extends>
      <name>OriginalWithoutKeyFixture</name>
      <full_name>\OriginalWithoutKeyFixture</full_name>
      <docblock line="15">
        <description>Summary for TrackableFixture</description>
        <long-description></long-description>
        <tag name="package" line="15" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="22" package="Default">
        <name>$fields</name>
        <full_name>\OriginalWithoutKeyFixture::fields</full_name>
        <default>array('id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null, 'key' =&gt; 'primary'), 'origin_id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null), 'title' =&gt; array('type' =&gt; 'string', 'null' =&gt; true, 'default' =&gt; null), 'created_user' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null), 'created' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true, 'default' =&gt; null), 'modified_user' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null), 'modified' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true, 'default' =&gt; null), 'indexes' =&gt; array('PRIMARY' =&gt; array('column' =&gt; 'id', 'unique' =&gt; 1)), 'tableParameters' =&gt; array('charset' =&gt; 'utf8', 'collate' =&gt; 'utf8_unicode_ci', 'engine' =&gt; 'InnoDB'))</default>
        <docblock line="22">
          <description>Fields</description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <source>eJytlE1r20AQhs/Wr9hDQbUxUlN6KImTOnUJhLauSQKlJ7NZja2x9kPdna0tSv97Vx/+CMTggy9i9c7MM+/OSjv6VOZllA4GERuwHxaXqLn8CtUdbshbCGodGHNPubFsaiwWht1ajmzEw3OsERMuklV5c5j3mJsckE15wVeoOBvpbuVy40NkvFQcZSKMasuEKavQOyc22a3ev7v4MGRToIlRymjHZtasQFBTIFEXLCcqL9N0vV4nGki0aYmxy+NVArSD44Vpl5HQhg4h31o5QNJoO6xHrxS3FVuE/T5ZLgr+LGE/tjQSkju3m+lPDJPxtB8tgw2Bzhyb8AKewNFW/7trcYcgM7c9gz/cMm4trxp6r/TPwS17s2iS2HUbexv1ejFmMbu+6YSYqhKa9xg1wRJsPGSx9lI24oJLB0HIYMG9pEarg0EqoGrrSov1VuP+sKabZkfzczRpgYQk4XWYI4t6+YJF1h9HCQucIJt7FxycbO8U5Ou0LIQIFZyOUybDcGRntbhlnssj6gw24A5wQe3Fs4f777cPvw67CCO90p3trO7gNf72beeLfijrjrj+OWbhxlBAYN0LRM6tg9ZC7GnxsaYErgy29+I8cIXJYC6wjoMOn2AXvtfafPkch2b9q+hf9B/cjoAd</source>
  </file>
  <file path="Plugin/NetCommons/Test/Fixture/SiteSettingFixture.php" generated-path="Plugin.NetCommons.Test.Fixture.SiteSettingFixture.html" hash="a54ed3339f5cdce52b760a70ea0f056c" package="Default">
    <docblock line="0">
      <description>SiteSettingFixture</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="13" package="Default">
      <extends>\CakeTestFixture</extends>
      <name>SiteSettingFixture</name>
      <full_name>\SiteSettingFixture</full_name>
      <docblock line="13">
        <description>Summary for SiteSettingFixture</description>
        <long-description></long-description>
        <tag name="package" line="13" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="20" package="Default">
        <name>$fields</name>
        <full_name>\SiteSettingFixture::fields</full_name>
        <default>array('id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null, 'key' =&gt; 'primary'), 'language_id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null, 'length' =&gt; 6), 'key' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'default' =&gt; null, 'collate' =&gt; 'utf8_general_ci', 'comment' =&gt; 'Key of the record.\\ne.g.) theme_name, site_name', 'charset' =&gt; 'utf8'), 'value' =&gt; array('type' =&gt; 'text', 'null' =&gt; true, 'default' =&gt; null, 'collate' =&gt; 'utf8_general_ci', 'comment' =&gt; 'Value of the record.\\ne.g.) default, My Homepage', 'charset' =&gt; 'utf8'), 'label' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'default' =&gt; null, 'collate' =&gt; 'utf8_general_ci', 'comment' =&gt; 'Human friendly label for the record.\\ne.g.) Theme, Site Name', 'charset' =&gt; 'utf8'), 'weight' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null, 'comment' =&gt; 'Display order.'), 'created_user' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null), 'created' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true, 'default' =&gt; null), 'modified_user' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null), 'modified' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true, 'default' =&gt; null), 'indexes' =&gt; array('PRIMARY' =&gt; array('column' =&gt; 'id', 'unique' =&gt; 1)), 'tableParameters' =&gt; array('charset' =&gt; 'utf8', 'collate' =&gt; 'utf8_general_ci', 'engine' =&gt; 'InnoDB'))</default>
        <docblock line="20">
          <description>Fields</description>
          <long-description></long-description>
          <tag name="var" line="20" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$records</name>
        <full_name>\SiteSettingFixture::records</full_name>
        <default>array(array('id' =&gt; 1, 'language_id' =&gt; 1, 'key' =&gt; 'Lorem ipsum dolor sit amet', 'label' =&gt; 'Lorem ipsum dolor sit amet', 'value' =&gt; 'Lorem ipsum dolor sit amet', 'weight' =&gt; 1, 'created_user' =&gt; 1, 'created' =&gt; '2014-04-15 02:46:23', 'modified_user' =&gt; 1, 'modified' =&gt; '2014-04-15 02:46:23'), array('id' =&gt; 2, 'language_id' =&gt; 2, 'key' =&gt; 'theme', 'value' =&gt; 'UnitTestTheme', 'label' =&gt; 'Theme', 'weight' =&gt; 1, 'created_user' =&gt; 1, 'created' =&gt; '2014-04-15 02:46:23', 'modified_user' =&gt; 1, 'modified' =&gt; '2014-04-15 02:46:23'))</default>
        <docblock line="42">
          <description>Records</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <source>eJzNVW1P2zAQ/tz+ivswKSsq6csYmhgwNhCCDRACNmkSUmWSa+LVcYJ9pu2m/fc5TlpSWmilVdMiRYqf8z33ftn9kMVZvbWxUYcNuOaE10jEZXTMR2QUWjQXHDBDcaoA4LORcMF1zAdsyGCX0oz97B4kbdnOXz9Ik32nILgcQP7ERNlOqzUcDn2JZOVJKrWfqggukA6LI1yq9AcGVGoGKDW+oNkqr/g0oirLWQFbllZ9GpJJEqbG0LfeLwyvVQ8E03qBEHBEKEMNh2yAN6hpgv+ash9zFKGeJOmBKWBKsbGjrWXmzjoKr/ruEuwVstf1Ws3joQd7+yXg0ThDd/a4JIxQeU3wpBHCgX0mNFogxD4zghyWCy00wHGhlymeR+k1mjm7YDIyLMLemswIlBHFDtkuLEwMzzFrUjaBqxIHqRCMSlVD/Xe9CCUqJnoB95w8SVAWKt4XHEPaB4oRFAapCv3bW4l+5DdyLMGeZIm1o20d3acjiJnSSI8Gygw9MGFwcQRkqz7jPymzDve/5SafC6Akb8L5GE7SBDNbvZf8F+wOxT+vwIlJmIS+4nYqxBicE26wFoV0k9ek6cYKLpaUY4g8imn1Xn2pJBV/j7jOBLNdo0JUfmkrUGgDDntGW9K/tThDuZgttCLiRfyr0SVpyO3OWKuLE851+chliCPUFTqL1rzLq9Pzj1ffq1Zsh5lElm6HuQUj+X05fZ2GVSsYid0JvGTKtgqh0jMUc22zQufancVlKT6VMj365FljjffT3X3lGnbZ8i7aemZ7V+ItF2yn6U5P924JT7f0WaowAZ5pk0CYCjs4dllBHrA3IZiM9fK7jyts+d3KfJU+zU3BLF7wdtudrc321mbnLbS7O1vbO903JeF8i3ZmBc8TTAo+n8Xu4ix2n2TRLfv5JHyVnPKf9E1FXMlnFf4P05H35e/6H9oJzMI=</source>
  </file>
  <file path="Plugin/NetCommons/Test/Fixture/TrackableFixture.php" generated-path="Plugin.NetCommons.Test.Fixture.TrackableFixture.html" hash="8516f69c09d7314bc65b93b1a687c0db" package="Default">
    <docblock line="0">
      <description>TrackableFixture</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="14" package="Default">
      <extends>\CakeTestFixture</extends>
      <name>TrackableFixture</name>
      <full_name>\TrackableFixture</full_name>
      <docblock line="14">
        <description>Summary for TrackableFixture</description>
        <long-description></long-description>
        <tag name="package" line="14" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="21" package="Default">
        <name>$fields</name>
        <full_name>\TrackableFixture::fields</full_name>
        <default>array('id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null, 'key' =&gt; 'primary'), 'title' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'default' =&gt; null, 'length' =&gt; 60), 'user_id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null), 'created_user' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null), 'created' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true, 'default' =&gt; null), 'modified_user' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null), 'modified' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true, 'default' =&gt; null), 'indexes' =&gt; array('PRIMARY' =&gt; array('column' =&gt; 'id', 'unique' =&gt; 1)), 'tableParameters' =&gt; array('charset' =&gt; 'utf8', 'collate' =&gt; 'utf8_unicode_ci', 'engine' =&gt; 'InnoDB'))</default>
        <docblock line="21">
          <description>Fields</description>
          <long-description></long-description>
          <tag name="var" line="21" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <source>eJytk19v0zAUxZ+bT+EHJNOqajaEEIJt/CmaNDGmavSFp8qzbxITxw72NW2E+O6znWQU0UlD6ptzzr2/e+zYZ+/aqs3y2SwjM7K2jNfsTsGl3KG3ELQov+em7awsKyTLh9WLk9OXc3IDuDRNY7QjK2u+A8fUwDxWxpLPpgJJ1mBZ6XklyVmN4zowU5sGXBhbXqQ2JXVNKsT2TZ5vt9tFMIeyWPPYMCU5aAePN+ZDxQJ3uA+57uUAybPxCL76pmG2I0WIf+A48owr5tw/FoEdghaOLFkNa3A46r8eyJcSlHDjkf5kljBrWZegk9bfhZDkWZGKyHnvPc8mEyoFJecXg0CxayF9U6kRSrB0Tqj2SiWxYMpBEAQUzCtMWjSDVEPX97VWxh3S6TzSUaKCwwMcWqnLp/IV6BKrpLw66dnegd38T3y0/hC9p3ELDEFsIvW4yMM0ESyUDTwd1xghww88asSReayMUgvYgdvDBXVCV7dXXz7cftufwo3yjR5iizjBa/nD95NPp6FtuEHxGayYZQ2E1+3+QlTMOugjUI/F60gJXBVi/xE3gcuNgA2X0Q/3SOrBvtLafPpIw7Dp2+x3dg9/FnIU</source>
  </file>
  <file path="Plugin/NetCommons/Test/Fixture/PluginFixture.php" generated-path="Plugin.NetCommons.Test.Fixture.PluginFixture.html" hash="966895a486c3305f86726eae74c40e04" package="Default">
    <docblock line="0">
      <description>PluginFixture</description>
      <long-description></long-description>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="author" line="0" description="Kohei Teraguchi" link="mailto:kteraguchi@commonsnet.org"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="14" package="Default">
      <extends>\CakeTestFixture</extends>
      <name>PluginFixture</name>
      <full_name>\PluginFixture</full_name>
      <docblock line="14">
        <description>Summary for PluginFixture</description>
        <long-description></long-description>
        <tag name="package" line="14" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="21" package="Default">
        <name>$fields</name>
        <full_name>\PluginFixture::fields</full_name>
        <default>array('id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null, 'unsigned' =&gt; false, 'key' =&gt; 'primary'), 'language_id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null, 'length' =&gt; 6, 'unsigned' =&gt; false), 'key' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'default' =&gt; null, 'collate' =&gt; 'utf8_general_ci', 'comment' =&gt; 'Key to identify plugin.
Must be equivalent to plugin name used in router url.
e.g.) user_manager, auth, pages', 'charset' =&gt; 'utf8'), 'name' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'default' =&gt; null, 'collate' =&gt; 'utf8_general_ci', 'comment' =&gt; 'Human friendly name for the plugin.
e.g.) User Manager, Auth, Pages', 'charset' =&gt; 'utf8'), 'namespace' =&gt; array('type' =&gt; 'string', 'null' =&gt; false, 'default' =&gt; null, 'collate' =&gt; 'utf8_general_ci', 'comment' =&gt; 'Unique namespace for package management system.
e.g.) packagist', 'charset' =&gt; 'utf8'), 'weight' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null, 'unsigned' =&gt; false, 'comment' =&gt; 'Display order.'), 'type' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null, 'unsigned' =&gt; false, 'comment' =&gt; '1:for frame,2:for control panel'), 'default_action' =&gt; array('type' =&gt; 'string', 'default' =&gt; null, 'collate' =&gt; 'utf8_general_ci', 'comment' =&gt; 'Default action for content rendering', 'charset' =&gt; 'utf8'), 'default_setting_action' =&gt; array('type' =&gt; 'string', 'default' =&gt; null, 'collate' =&gt; 'utf8_general_ci', 'comment' =&gt; 'Default action for frame settings', 'charset' =&gt; 'utf8'), 'created_user' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null, 'unsigned' =&gt; false), 'created' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true, 'default' =&gt; null), 'modified_user' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null, 'unsigned' =&gt; false), 'modified' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true, 'default' =&gt; null), 'indexes' =&gt; array('PRIMARY' =&gt; array('column' =&gt; 'id', 'unique' =&gt; 1)), 'tableParameters' =&gt; array('charset' =&gt; 'utf8', 'collate' =&gt; 'utf8_general_ci', 'engine' =&gt; 'InnoDB'))</default>
        <docblock line="21">
          <description>Fields</description>
          <long-description></long-description>
          <tag name="var" line="21" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="Default">
        <name>$records</name>
        <full_name>\PluginFixture::records</full_name>
        <default>array(array('id' =&gt; 1, 'language_id' =&gt; 2, 'key' =&gt; 'test_plugin', 'name' =&gt; 'Lorem ipsum dolor sit amet', 'namespace' =&gt; 'Lorem ipsum dolor sit amet', 'weight' =&gt; 1, 'type' =&gt; 1, 'default_action' =&gt; null, 'default_setting_action' =&gt; null, 'created_user' =&gt; 1, 'created' =&gt; '2015-05-25 09:16:05', 'modified_user' =&gt; 1, 'modified' =&gt; '2015-05-25 09:16:05'), array('id' =&gt; 2, 'language_id' =&gt; 2, 'key' =&gt; 'test_plugin', 'name' =&gt; 'Lorem ipsum dolor sit amet', 'namespace' =&gt; 'Lorem ipsum dolor sit amet', 'weight' =&gt; 1, 'type' =&gt; 1, 'default_action' =&gt; null, 'default_setting_action' =&gt; null, 'created_user' =&gt; 1, 'created' =&gt; '2015-05-25 09:16:05', 'modified_user' =&gt; 1, 'modified' =&gt; '2015-05-25 09:16:05'), array('id' =&gt; 3, 'language_id' =&gt; 1, 'key' =&gt; 'model_with_after_frame_save_test_plugin', 'name' =&gt; 'Lorem ipsum dolor sit amet', 'namespace' =&gt; 'Lorem ipsum dolor sit amet', 'weight' =&gt; 3, 'type' =&gt; 1, 'default_action' =&gt; null, 'default_setting_action' =&gt; null, 'created_user' =&gt; 1, 'created' =&gt; '2015-05-25 09:16:05', 'modified_user' =&gt; 1, 'modified' =&gt; '2015-05-25 09:16:05'), array('id' =&gt; 4, 'language_id' =&gt; 2, 'key' =&gt; 'model_with_after_frame_save_test_plugin', 'name' =&gt; 'Lorem ipsum dolor sit amet', 'namespace' =&gt; 'Lorem ipsum dolor sit amet', 'weight' =&gt; 4, 'type' =&gt; 1, 'default_action' =&gt; null, 'default_setting_action' =&gt; null, 'created_user' =&gt; 1, 'created' =&gt; '2015-05-25 09:16:05', 'modified_user' =&gt; 1, 'modified' =&gt; '2015-05-25 09:16:05'), array('id' =&gt; 5, 'language_id' =&gt; 2, 'key' =&gt; 'test_plugin', 'name' =&gt; 'Lorem ipsum dolor sit amet', 'namespace' =&gt; 'Lorem ipsum dolor sit amet', 'weight' =&gt; 5, 'type' =&gt; 1, 'created_user' =&gt; 5, 'created' =&gt; '2014-07-25 08:16:24', 'modified_user' =&gt; 5, 'modified' =&gt; '2014-07-25 08:16:24'), array('id' =&gt; 6, 'language_id' =&gt; 2, 'key' =&gt; 'test_plugin', 'name' =&gt; 'Lorem ipsum dolor sit amet', 'namespace' =&gt; 'Lorem ipsum dolor sit amet', 'weight' =&gt; 6, 'type' =&gt; 1, 'created_user' =&gt; 6, 'created' =&gt; '2014-07-25 08:16:24', 'modified_user' =&gt; 6, 'modified' =&gt; '2014-07-25 08:16:24'), array('id' =&gt; 7, 'language_id' =&gt; 2, 'key' =&gt; 'test_plugin', 'name' =&gt; 'Lorem ipsum dolor sit amet', 'namespace' =&gt; 'Lorem ipsum dolor sit amet', 'weight' =&gt; 7, 'type' =&gt; 1, 'created_user' =&gt; 7, 'created' =&gt; '2014-07-25 08:16:24', 'modified_user' =&gt; 7, 'modified' =&gt; '2014-07-25 08:16:24'), array('id' =&gt; 8, 'language_id' =&gt; 2, 'key' =&gt; 'test_plugin', 'name' =&gt; 'Lorem ipsum dolor sit amet', 'namespace' =&gt; 'Lorem ipsum dolor sit amet', 'weight' =&gt; 8, 'type' =&gt; 1, 'created_user' =&gt; 8, 'created' =&gt; '2014-07-25 08:16:24', 'modified_user' =&gt; 8, 'modified' =&gt; '2014-07-25 08:16:24'), array('id' =&gt; 9, 'language_id' =&gt; 2, 'key' =&gt; 'test_plugin', 'name' =&gt; 'Lorem ipsum dolor sit amet', 'namespace' =&gt; 'Lorem ipsum dolor sit amet', 'weight' =&gt; 9, 'type' =&gt; 1, 'created_user' =&gt; 9, 'created' =&gt; '2014-07-25 08:16:24', 'modified_user' =&gt; 9, 'modified' =&gt; '2014-07-25 08:16:24'), array('id' =&gt; 10, 'language_id' =&gt; 2, 'key' =&gt; 'test_plugin', 'name' =&gt; 'Lorem ipsum dolor sit amet', 'namespace' =&gt; 'Lorem ipsum dolor sit amet', 'weight' =&gt; 10, 'type' =&gt; 1, 'created_user' =&gt; 10, 'created' =&gt; '2014-07-25 08:16:24', 'modified_user' =&gt; 10, 'modified' =&gt; '2014-07-25 08:16:24'))</default>
        <docblock line="50">
          <description>Records</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <source>eJztV0tv20YQPlu/Yg4FWBuyXtHTTdKmNoIEiQvBTQ49EWtyRG29XDL7sEwU/e8dLklZsqSYreJEQHrjzszOfPPN7Ozy+c/pPG20T04acAJTYSMuX/M7YxWSIJf9EiRppng0N3C+/Op1uv0m/IbmPInjRGqYquRPDIzbwKyZJwreJXPk8AEVi2ww5/D8xlTf5NNtk2haiYpeum2CyxuYG5OetduLxaJFytIst9kVTPAApcbdG9ulRcvcmVUn7wsxOWk3qvx/t3HMVAYzgv+Qi3YjEEzrdTngnUEZajhnN/gBtankfy19vuYoQl2RecsUMKVY5jwepfaa4MEPM2cELwrdj42jI4+HHrx4WQo8k6Xo1h6XBiNUXhM8aYVwwhkTGkkQ4oxZYZwsV5LISs0jieGa3Q1mhbNU8Txh77iZhxRMRpZF6H+h2AJlZOZOMtwKpQhbodkIp43iMqobLUiEYKbcas1s7EcoqeOEH3DP6eMYZbHFe4cZmAR4SBI+yyB1VW01Lq02cE11/WT5LaMETG5WaEGyGMFqDIEWKrHUz2CVaDWwFbWOc43yYyaJQdWE/BQ0IaWFdtHnTGk09+hKznOfXz37N5Zgwkxx6l2RFXnlPW/muGSiyOkj5QSXVU6vXE7TOjnplAVfP7GPkn+yCEsALiv6uCHIUJQmNwadaYNxlWRhwLX5XFILzCdf/XNhlP03R3ItjQuuU8EySFSIqlUCWIZ78vDds5y2mSIWmz33HSTSqEQQUxJFiad07bPA8EQ+Vup9K3tR7IciGlSg8mIq6mKs4uwqX4WWdIZMvx1qRyuUMD57jAKFFCj087nyNIVfi7M9REgqw2lG1YhRuIuTkNN99vS4q0BfCjinNrqjyXbvjqRH3vTq7eWrqz9Wo1AP2FiWuYSew5gPHifpHtO28siya4FTllec7gq95mKj6DV6i+5TLkv1WymTi189Cnb80/KxcYUBzYzHXhuqsFp9bqzkW17+3aZbPXwT9Arx8gVh6NHjF3eGV6iWN5r3PlEYA0+1jSFMBDW/5nQWiIwV0/uL4nH7lRlcwlvWu1xvGUqui9aUW2bAvdHGqeuuyQuk9P4dnHYGp70BdCZn3eFZZ1BC3Oz+7rpit4OqbTZr0fu/FgdTi2fba9F9UAsKgcJfcDP32YwOv+/mvq/ZLfrfqk7Pvqc69eudmUOsU/97qtPgsGfbYHstNpgcbGeyf9oZOSLGORG9/k4mBzuY3HCwm8nhYTM5rMnkcE8mh/szOTpsJkc1mRztyeRofybHh83kuCaT4z2ZHO/P5OSwmZzUZHKyJ5OT/Znsdg6bygrfo1xWhv+ZzMpBPTaLP82/G/8AtE3d3Q==</source>
  </file>
  <file path="Plugin/NetCommons/Test/Fixture/OriginalKeyFixture.php" generated-path="Plugin.NetCommons.Test.Fixture.OriginalKeyFixture.html" hash="c7c70bd611c340aec463cdbaa7bce8af" package="Default">
    <docblock line="0">
      <description>OriginalKeyFixture</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="15" package="Default">
      <extends>\CakeTestFixture</extends>
      <name>OriginalKeyFixture</name>
      <full_name>\OriginalKeyFixture</full_name>
      <docblock line="15">
        <description>Summary for TrackableFixture</description>
        <long-description></long-description>
        <tag name="package" line="15" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="22" package="Default">
        <name>$fields</name>
        <full_name>\OriginalKeyFixture::fields</full_name>
        <default>array('id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null, 'key' =&gt; 'primary'), 'key' =&gt; array('type' =&gt; 'string', 'null' =&gt; true, 'default' =&gt; null), 'origin_id' =&gt; array('type' =&gt; 'integer', 'null' =&gt; false, 'default' =&gt; null), 'title' =&gt; array('type' =&gt; 'string', 'null' =&gt; true, 'default' =&gt; null), 'created_user' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null), 'created' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true, 'default' =&gt; null), 'modified_user' =&gt; array('type' =&gt; 'integer', 'null' =&gt; true, 'default' =&gt; null), 'modified' =&gt; array('type' =&gt; 'datetime', 'null' =&gt; true, 'default' =&gt; null), 'indexes' =&gt; array('PRIMARY' =&gt; array('column' =&gt; 'id', 'unique' =&gt; 1)), 'tableParameters' =&gt; array('charset' =&gt; 'utf8', 'collate' =&gt; 'utf8_unicode_ci', 'engine' =&gt; 'InnoDB'))</default>
        <docblock line="22">
          <description>Fields</description>
          <long-description></long-description>
          <tag name="var" line="22" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
    </class>
    <source>eJytlE1v2zAMhs/xr9BhgJcgsNdhh6FNu3QZChTbsqDtZadAlZmYsT48iVpiDPvvk7/aFEuBHHIx5Jfkw1eUrcmnMi+jdDSK2Ij9sLhGzeVXqG5wR95CUOvAlHvKjWVzY7Ew7NpyZBMenlONmHCRbMqr/bz73OSAbM4LvkHF2UR3K5cbHyLTteIoE2FUWyZMWYXeObHZ0+r9u7MPYzYHmhmljHZsYc0GBDUFEnXBcqLyPE23222igUSblhi7fr1KgHbwemHaZSS0o33It1YOkDTqh3XvleK2Yquw3wfLRcEfJTyPLY2E5M4dmCmDHYHOHJvxAh7AUa//eWLfIMjM9cP/zS3j1vKqwQ5K/xhssjerJoldtrG30WAQYxazy6tOiKkqoXmPUROswcZjFmsvZSOuuHQQhAxW3EtqtDoYpAKqtq60WO8xHo5rei//h3dkUa9f0Mn6Q/AWZJqZLE/htgUSkoTTeBMWOEG29C44ONreMcjDtCyECBUcj1Mmw3D2J7XYM0/lEXUGO3B7uKAO4sXd7ffru5/7XYSRXunOdlZ38Bp/+bbz2TCUdUdc/16LcOcoILDuBSLn1kFrIfa0+lhTAlcG28/iMnCFyWApsI6DDp9gF77V2nz5HIdmw4vob/QPlSOSqA==</source>
  </file>
  <file path="Plugin/NetCommons/Utility/CurrentPage.php" generated-path="Plugin.NetCommons.Utility.CurrentPage.html" hash="249a76b7e91b19dd10dec16792ac191b" package="Default">
    <docblock line="0">
      <description>CurrentPage Utility</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="18" package="NetCommons\NetCommons\Utility">
      <extends/>
      <name>CurrentPage</name>
      <full_name>\CurrentPage</full_name>
      <docblock line="18">
        <description>CurrentPage Utility</description>
        <long-description></long-description>
        <tag name="author" line="18" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="18" description="NetCommons\NetCommons\Utility"/>
      </docblock>
      <constant namespace="" line="25" package="NetCommons\NetCommons\Utility">
        <name>DEFAULT_ROOM_ROLE_KEY</name>
        <full_name>\CurrentPage::DEFAULT_ROOM_ROLE_KEY</full_name>
        <value>'visitor'</value>
        <docblock line="25">
          <description>Constant default room_role_key</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="" line="30" package="NetCommons\NetCommons\Utility">
        <name>PLUGIN_PAGES</name>
        <full_name>\CurrentPage::PLUGIN_PAGES</full_name>
        <value>'pages'</value>
        <docblock line="30">
          <description>Constant Plugin value</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="true" visibility="private" namespace="" line="37" package="NetCommons\NetCommons\Utility">
        <name>$__request</name>
        <full_name>\CurrentPage::__request</full_name>
        <default></default>
        <docblock line="37">
          <description>Request object</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="44" package="NetCommons\NetCommons\Utility">
        <name>$__instance</name>
        <full_name>\CurrentPage::__instance</full_name>
        <default></default>
        <docblock line="44">
          <description>Instance object</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="52" package="NetCommons\NetCommons\Utility">
        <name>initialize</name>
        <full_name>\CurrentPage::initialize()</full_name>
        <docblock line="52">
          <description>setup current data</description>
          <long-description></long-description>
          <tag name="param" line="52" description="&lt;p&gt;CakeRequest&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="52" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="75" package="NetCommons\NetCommons\Utility">
        <name>setRolesRoomsUser</name>
        <full_name>\CurrentPage::setRolesRoomsUser()</full_name>
        <docblock line="75">
          <description>Set RolesRoomsUser</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="94" package="NetCommons\NetCommons\Utility">
        <name>setDefaultRolePermissions</name>
        <full_name>\CurrentPage::setDefaultRolePermissions()</full_name>
        <docblock line="94">
          <description>Set BlockRolePermissions</description>
          <long-description></long-description>
          <tag name="return" line="94" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="121" package="NetCommons\NetCommons\Utility">
        <name>setRoomRolePermissions</name>
        <full_name>\CurrentPage::setRoomRolePermissions()</full_name>
        <docblock line="121">
          <description>Set RoomRolePermissions</description>
          <long-description></long-description>
          <tag name="return" line="121" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="143" package="NetCommons\NetCommons\Utility">
        <name>setPage</name>
        <full_name>\CurrentPage::setPage()</full_name>
        <docblock line="143">
          <description>Set Page</description>
          <long-description></long-description>
          <tag name="return" line="143" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="198" package="NetCommons\NetCommons\Utility">
        <name>setPageByRoomPageTopId</name>
        <full_name>\CurrentPage::setPageByRoomPageTopId()</full_name>
        <docblock line="198">
          <description>Set Page</description>
          <long-description></long-description>
          <tag name="return" line="198" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzVV1FT2zgQfk5+hTrD1AkTHHpzTwFyUMr1mHI0A+XhhmMywlESNbblSjKQa/nvt5ItR7FlJxx9uZeMY+1++nb302p9+FsyT9r93d022kWnKeckliM8I+hG0pDKJbxWK8c4lXPG0SXjdMHQCccUHWL4PY4p9XHgf02Gtt31nM0JRZd4gb/SCKPDOH8Sc5bCyvEswjT0AxZlbiGNF2guZTLo9x8fH/2YSFiLWCx8xmfoksjT7C8acfaVBDL3CkgsSL1jP7fw5ZO0QS6y1xokYMmS09lcotPi6Zf9d7/23Lv229tn66VZSHCwUGirjf+2Hld79NtBiIVYY/B9xQuMJY4lmpApTkOJOGPRmLOQjBekoPiAORKS03imAVuB8kIfzn4/ubn4Mr76/PlP+Lk4G386+wsdIe+BCioZ9w6q24zCdEZj9IDDlNhYo4ubj+eX49HJx7NrBZEATWEBXJFvKQE7dp+ntuAV0ScyyaASTh+wJEAVSxqgnfGYZ24rnHPNIyAvBaK53wpJEJkmKMiyiiZYYgOWgNYjdIoXxLDeyXnYL7UpBxAO6WDU7JzegwzNxtM0DiRlMaIxlRSH9B/SceF2oaKtFp2izhvgFU4HA4tyttiqvIc0x+TR1kWnewCWz+22ZW2YHxWbHaytG7S9ISTEgDQavF9egcbU0xeWnE8a7a9AiEKZixtBeKPph0zAymNEeESFgMSJDegsctirDORFviYSrXMwRa6rXFEyB3tdCAeVdTtI9ak6sVdkRuHQLQcDVf2Opw38dVsvC09VHgIgspNXEzbIlXnrabu7W49OvLsuevsW1Voq2DXLN022azzuurnMQCVC9ZGjqhDLge4NZ+UciQ7mHC87CqlV2sNP4WcM3NDREG2Is2cAWOTXe9jxKoeu1r/OZh5GHlSr4gzx/QGdeTCICAfNV9Z7KEe43b/LUJ/10Spp633IgkVJgi9RWJ3o65TmtK8XHKTfd7psozu3YyGULLys4WxAKnRgyyw/u5/IUvFvdLr1zIXm3ekNEQkFcQJlOXPebIZqo8KdQe8NpzSedDwchl4PrRTucQJ0BX0gWqF777RsPbgRJ1RVWOjX9oko4lALNnXt2W0bDVclvH2BCmnDqHFPY2KAesj7Hj+79eAnK4AmOy+/YSotttKIX9ZnHX28vtmWjTc13LL9NuJ3eEFL/fFjq5Zad0g29Nbyjj9XdmKsR8OmbmoduKIJv1CTrrxtEGTVxaFGdxUdUlRzSUl794yFtdrLRp46selpu0Zeak346ncbQWk7py7WPMtz295QTaaFu7rUm03M7Z81RzWGn09swTU46WtuZyUjcMtEpK3MPZxjZiFnnVjRr26gx2hx6yX6k0HJ4MjwsL8WcqrNGFjXK8fw4FSQJ8/c7TtTSkIVY0ZTaQerT0wvu7atu6JsChEVV3tjDYpQQAaQrf2ijq0d/SXkTHDFycHHeHsWEVcFDHFIv3axs+9UVGOrUcGb5jKlXMim9rLv7C4WyV7eIdqvGbOKDvPaA1Q7JhaThyO9WZe0Vd4wbSr9QxsdS5bkY+fBxsG5OePulG/KuRl3X5n0n9JBK9+ExQftpnpuvFPrrtN2fSn/ayV1Pv6PJwey8dz+FwNlTG4=</source>
  </file>
  <file path="Plugin/NetCommons/Utility/CurrentControlPanel.php" generated-path="Plugin.NetCommons.Utility.CurrentControlPanel.html" hash="985800624a704481708f897bc85876c2" package="Default">
    <docblock line="0">
      <description>CurrentControlPanel Utility</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="18" package="NetCommons\NetCommons\Utility">
      <extends/>
      <name>CurrentControlPanel</name>
      <full_name>\CurrentControlPanel</full_name>
      <docblock line="18">
        <description>CurrentControlPanel Utility</description>
        <long-description></long-description>
        <tag name="author" line="18" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="18" description="NetCommons\NetCommons\Utility"/>
      </docblock>
      <constant namespace="" line="23" package="NetCommons\NetCommons\Utility">
        <name>PLUGIN_CONTROL_PANEL</name>
        <full_name>\CurrentControlPanel::PLUGIN_CONTROL_PANEL</full_name>
        <value>'control_panel'</value>
        <docblock line="23">
          <description>Constant Plugin value</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="true" visibility="private" namespace="" line="30" package="NetCommons\NetCommons\Utility">
        <name>$__request</name>
        <full_name>\CurrentControlPanel::__request</full_name>
        <default></default>
        <docblock line="30">
          <description>Request object</description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="37" package="NetCommons\NetCommons\Utility">
        <name>$__instance</name>
        <full_name>\CurrentControlPanel::__instance</full_name>
        <default></default>
        <docblock line="37">
          <description>Instance object</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="45" package="NetCommons\NetCommons\Utility">
        <name>initialize</name>
        <full_name>\CurrentControlPanel::initialize()</full_name>
        <docblock line="45">
          <description>setup current data</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;CakeRequest&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="45" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="64" package="NetCommons\NetCommons\Utility">
        <name>setLanguage</name>
        <full_name>\CurrentControlPanel::setLanguage()</full_name>
        <docblock line="64">
          <description>Set Language</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="87" package="NetCommons\NetCommons\Utility">
        <name>setPlugin</name>
        <full_name>\CurrentControlPanel::setPlugin()</full_name>
        <docblock line="87">
          <description>Set Plugin</description>
          <long-description></long-description>
          <tag name="return" line="87" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="117" package="NetCommons\NetCommons\Utility">
        <name>setPluginRole</name>
        <full_name>\CurrentControlPanel::setPluginRole()</full_name>
        <docblock line="117">
          <description>Set PluginRole</description>
          <long-description></long-description>
          <tag name="return" line="117" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzNVstuEzEUXSdfYSSkSap0hiIkpGkTWkU8KqUhaumqVJE7cRI3M/bg8aQN0A0sWLKDn0HwMRX/wfVjHm2SpkEs2FTT+zg+PvdcKzvP4nFc9TY2qmgDtVMhCJNtzqTgYQ8zEqJjSUMqZ5BWFbs4lWMuUJcLOuFoT2CKdjD83WWUujhwz+NWue5ozMeEoi6e4HMaYbTD7Fcy5ilkdkcRpqEb8Mi0hZRN0FjK2Pe8i4sLlxEJuYizxOVihLoEyOl/UU/wcxJI2xUQlpDljZ6tcOWlLIN0TFiDBDyeCToaS9TOvx4/2nrSWHyqV11ftXXViHEwwSNSIvC29Fmc4VWDECfJQiYfCp7QJDGTqBemI8rQFIcp0d2VQKVQr3P8cr/bb7/uvjl83en39rrPO6iJnMDg9WMF6GzngIfkXUqgj59ZTTTpKRYoopdkYKBjQadYEgRHSxqgh/2+MG0Fzr7mFZB1gajtK5ASItMYBUYGNMASZ2AxmDRCbTwhGeuHlkc5qEsFgAiQh9Ps5PQM/JMdPExZIClniDIqKQ7pe1JbhFsH6SsVOkS1B8ArHPp+ibJJVubiIDcjF4sGWatvQ8dVtVrqym7QzA/dvpHPUDdbIEwHs1EKblJAS4uMNe5RcshDjaQYWfGPiETZIZnsy7TMRbxBLFeMJhCvWRWAgp3oiZPVOqd1K6E5YV6bgnPWAzK11ZockhFNpJj5vppgzTnYesrcHFjLDHImaaiEvQNvszWkbFBzhlQk0mkgLASe1RQnRxBgnNApcVCzhTa3GjoKezSg6taJDhf1KjUwtTDyIR2lgvi+IBjQTcANc36qoa4A65qqMZglvECTSmVORrjWK3hyfD8iAmSfyzdyuLn5muGvM93MUatnayqLyaZsVWE+dYV7eys2W3rnkxMntvWo2Wxmq/UCUqCxffJ6ey+fH6GPH/Uw1gMq72iOd+MJXWxUzzPXuP785frzj+tPv35//fb75/fFFrYv9hIDm+wBZuAP4Vp1VvvYFP5LF0/ITMdWK9gwDZmr+3Rg3H/Xxp84UHX6H9hfvX3rr4B5Me+7BokqL3bB81ZsQ1a/fYfVdM0aftP165jOkMjnsoDscUKEmiRsDOkru5zaC97DqRo9sysOwxtmXeLWu+xaKVgs8d4824btND7Oew2qk0J9PzKSADvo41FiXmzjWWvaK0RC+Ll66+JDDMHMtX/h61tWyG0OPyfPKCM1Cwa8PrCr8sRc2Kv5qGPsf1X9A08N3rQ=</source>
  </file>
  <file path="Plugin/NetCommons/Utility/NetCommonsUrl.php" generated-path="Plugin.NetCommons.Utility.NetCommonsUrl.html" hash="dceb501286e947d0a5794f5434bbc490" package="Default">
    <docblock line="0">
      <description>NetCommons Utility</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="18" package="NetCommons\NetCommons\Utility">
      <extends/>
      <name>NetCommonsUrl</name>
      <full_name>\NetCommonsUrl</full_name>
      <docblock line="18">
        <description>NetCommons Utility</description>
        <long-description></long-description>
        <tag name="author" line="18" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="18" description="NetCommons\NetCommons\Utility"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="28" package="NetCommons\NetCommons\Utility">
        <name>backToPageUrl</name>
        <full_name>\NetCommonsUrl::backToPageUrl()</full_name>
        <docblock line="28">
          <description>ページに戻るURLを生成</description>
          <long-description></long-description>
          <tag name="param" line="28" description="&lt;p&gt;セッティングモード&lt;/p&gt;" type="boolean" variable="$settingMode">
            <type>boolean</type>
          </tag>
          <tag name="param" line="28" description="&lt;p&gt;If (bool) true, the full base URL will be prepended to the result.&lt;/p&gt;" type="boolean|array" variable="$full">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="return" line="28" description="Full translated URL with base path." type="string">
            <type>string</type>
          </tag>
          <tag name="SuppressWarnings" line="28" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settingMode</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$full</name>
          <default>false</default>
          <type>boolean|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="50" package="NetCommons\NetCommons\Utility">
        <name>backToIndexUrl</name>
        <full_name>\NetCommonsUrl::backToIndexUrl()</full_name>
        <docblock line="50">
          <description>デフォルトのアクションに戻るURLを生成</description>
          <long-description></long-description>
          <tag name="param" line="50" description="&lt;p&gt;Plugin table's default action field. The value is &quot;default_action&quot; or &quot;default_setting_action&quot;&lt;/p&gt;" type="string" variable="$defaultField">
            <type>string</type>
          </tag>
          <tag name="param" line="50" description="&lt;p&gt;If (bool) true, the full base URL will be prepended to the result.&lt;/p&gt;" type="boolean|array" variable="$full">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="return" line="50" description="Full translated URL with base path." type="string">
            <type>string</type>
          </tag>
          <tag name="SuppressWarnings" line="50" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$defaultField</name>
          <default>'default_action'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$full</name>
          <default>false</default>
          <type>boolean|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="71" package="NetCommons\NetCommons\Utility">
        <name>actionUrl</name>
        <full_name>\NetCommonsUrl::actionUrl()</full_name>
        <docblock line="71">
          <description>NetCommonsプラグインのアクションURLを生成</description>
          <long-description></long-description>
          <tag name="param" line="71" description="&lt;p&gt;Action url array&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="param" line="71" description="&lt;p&gt;If (bool) true, the full base URL will be prepended to the result.&lt;/p&gt;" type="boolean|array" variable="$full">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="return" line="71" description="Full translated URL with base path." type="string">
            <type>string</type>
          </tag>
          <tag name="SuppressWarnings" line="71" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$full</name>
          <default>false</default>
          <type>boolean|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="84" package="NetCommons\NetCommons\Utility">
        <name>actionUrlAsArray</name>
        <full_name>\NetCommonsUrl::actionUrlAsArray()</full_name>
        <docblock line="84">
          <description>NetCommonsプラグインのアクションURL配列を生成</description>
          <long-description></long-description>
          <tag name="param" line="84" description="&lt;p&gt;Action url array&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="param" line="84" description="&lt;p&gt;If (bool) true, the full base URL will be prepended to the result.&lt;/p&gt;" type="boolean|array" variable="$full">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="return" line="84" description="Full translated URL with base path as array." type="array">
            <type>array</type>
          </tag>
          <tag name="SuppressWarnings" line="84" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$full</name>
          <default>false</default>
          <type>boolean|array</type>
        </argument>
      </method>
    </class>
    <source>eJzlV1tvG0UUfo5/xaGyunZUrQHx5CQkbtLQSE1q5aI+lCoar8feicc725lZUgvy0F0BQQgJIVAlXpAKEqoqARIPIJV/M6KIf8HMXrzrzdoJQpUQPNjePZfvnDnnO2fk1XXf9Wut5eUaLMMelptsPGaegCNJKJETLTWKDRRIl3HYY5yMGHQ4IrCK9PeGR4iNHPvEf7tod+AyFxPYQyN0QsYIVr30Sbgs0JqN4RgRajtsnLhR4o3AldJvt1qnp6e2h6WTJGIzPizm1eXsBDsy9XKwJ/B8x1ZqYctHsghyJxHHIA7zJ5wMXQmb06c3X3/jrRvVUVu1Kxfr7xbBR84IDXEB+N3CYx6jVXMoEqJgd8QpvD9NTEVfq+g3Ff6qHj9/ef5ChZ8e7d9R4Rd/fPnNy/PPsyR93b4x9BijUBdYSuINd1kfgwpfqChS0Ucq/FZFP6vwJxU9NXjRJyW/DxDnaAL1QUAp7AygYYRNkDzAN0C6GGJFD+kO6QTglJg3DD7HPvb6uA+SxWYci4BKO0bnWAbcAyG5zge2DYDkyBMUSe2QwEg3AfWRdBOvg8DXqELcQ9zTfqLRvd3d3bJv6nww8jp8GIyxJ7cpGjbj+i35QU9TQ4dBUv8MAs+RhHka1hkdsq5ugq5oY6YsazBAVOiDJcdNX5u67EtL9YAbidWyVvQb0ZV4DTYDznXMdpuITeZJzmgXeZg2molLbFUMkIoTLHst9z+4dXi4s/fO8e7drVvH9+7ub4GdRVo6q2VQU3OOUb9hmSPYPuZjZCbLas5FrzafCZF80sa4jX0WSMzb7cBUSH+lFWk2tflZgYMfq+grFT5T0XMVnavHP6jwqQp/VOEvKvre8OpybqYkqPfxAGmCbBNM+9ClwZB4IFGPYktAqgOUNHBgbGw41Kx6D9EAAxFwLbU5TmyugR7NqSztQKb7nzB8Ryf3KKb4TG01hWdrZV1Cd82TMpPi9tgjPMlYNNfGaGbiN7Ppuao9XL8OV5u0EuJNypyRTfoXB6My4dx8OhJVqNuaNrgadX1gdMekv1YBn/v9k4nLbwMVPVHRM7O4w+/iSSvP3vyRS/kevwjoJJwxh4gV//npSFgfD0ZagrXk5I3mokkQmA7a7alzR3RinxQja9fKq+7pnx9+9vv5k395ZxPkyxsLSCS2r6jDpSZdrdGpielk/WGA+eS+tW490ApPe+R3PxH6WsmQ71t+vL+sB9laMGC5FC7exoUdakDPAOtE5vheiLKSro/KVJxkQVLMy+kUNUXYonwhdHpjlGAzaREykyVwKV4JrWdWrt6XJbwZnNwm3puBNw+hmHcpjinyghCxugo98VsArP8o6XZccoKCUVWQIsaiYmWXSyFUzs6iuhg7l1aFLkCuzN5Ht/Xfl3Z7jPkQZ5truufiqOkKO6v9BaOU2G8=</source>
  </file>
  <file path="Plugin/NetCommons/Utility/Current.php" generated-path="Plugin.NetCommons.Utility.Current.html" hash="33a15bd458079e5723e82c02b006a208" package="Default">
    <docblock line="0">
      <description>Current Utility</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="NetCommons\NetCommons\Utility">
      <extends/>
      <name>Current</name>
      <full_name>\Current</full_name>
      <docblock line="22">
        <description>Current Utility</description>
        <long-description></long-description>
        <tag name="author" line="22" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="22" description="NetCommons\NetCommons\Utility"/>
      </docblock>
      <constant namespace="" line="27" package="NetCommons\NetCommons\Utility">
        <name>SETTING_MODE_WORD</name>
        <full_name>\Current::SETTING_MODE_WORD</full_name>
        <value>'setting'</value>
        <docblock line="27">
          <description>Constant setting mode value</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="true" visibility="private" namespace="" line="34" package="NetCommons\NetCommons\Utility">
        <name>$__isSettingMode</name>
        <full_name>\Current::__isSettingMode</full_name>
        <default>null</default>
        <docblock line="34">
          <description>is setting mode true</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="41" package="NetCommons\NetCommons\Utility">
        <name>$__request</name>
        <full_name>\Current::__request</full_name>
        <default></default>
        <docblock line="41">
          <description>Request object</description>
          <long-description></long-description>
          <tag name="var" line="41" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="48" package="NetCommons\NetCommons\Utility">
        <name>$__instance</name>
        <full_name>\Current::__instance</full_name>
        <default></default>
        <docblock line="48">
          <description>Instance object</description>
          <long-description></long-description>
          <tag name="var" line="48" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="" line="55" package="NetCommons\NetCommons\Utility">
        <name>$current</name>
        <full_name>\Current::current</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Current data</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="63" package="NetCommons\NetCommons\Utility">
        <name>initialize</name>
        <full_name>\Current::initialize()</full_name>
        <docblock line="63">
          <description>setup current data</description>
          <long-description></long-description>
          <tag name="param" line="63" description="&lt;p&gt;CakeRequest&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="63" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="85" package="NetCommons\NetCommons\Utility">
        <name>read</name>
        <full_name>\Current::read()</full_name>
        <docblock line="85">
          <description>Get the current data.</description>
          <long-description></long-description>
          <tag name="param" line="85" description="&lt;p&gt;field to retrieve. Leave null to get entire Current data&lt;/p&gt;" type="string|null" variable="$key">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="85" description="Current data." type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="102" package="NetCommons\NetCommons\Utility">
        <name>permission</name>
        <full_name>\Current::permission()</full_name>
        <docblock line="102">
          <description>Get the permission value.</description>
          <long-description></long-description>
          <tag name="param" line="102" description="&lt;p&gt;field to retrieve. Leave null to get entire Current data&lt;/p&gt;" type="string|array" variable="$key">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="102" description="permission value" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="125" package="NetCommons\NetCommons\Utility">
        <name>isLogin</name>
        <full_name>\Current::isLogin()</full_name>
        <docblock line="125">
          <description>Is login</description>
          <long-description></long-description>
          <tag name="return" line="125" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="135" package="NetCommons\NetCommons\Utility">
        <name>isSettingMode</name>
        <full_name>\Current::isSettingMode()</full_name>
        <docblock line="135">
          <description>Check setting mode</description>
          <long-description></long-description>
          <tag name="param" line="135" description="&lt;p&gt;Setting mode&lt;/p&gt;" type="boolean|null" variable="$settingMode">
            <type>boolean</type>
            <type>null</type>
          </tag>
          <tag name="return" line="135" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settingMode</name>
          <default>null</default>
          <type>boolean|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="159" package="NetCommons\NetCommons\Utility">
        <name>hasSettingMode</name>
        <full_name>\Current::hasSettingMode()</full_name>
        <docblock line="159">
          <description>Has setting mode</description>
          <long-description></long-description>
          <tag name="return" line="159" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="168" package="NetCommons\NetCommons\Utility">
        <name>isControlPanel</name>
        <full_name>\Current::isControlPanel()</full_name>
        <docblock line="168">
          <description>Check control panel</description>
          <long-description></long-description>
          <tag name="return" line="168" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="189" package="NetCommons\NetCommons\Utility">
        <name>hasControlPanel</name>
        <full_name>\Current::hasControlPanel()</full_name>
        <docblock line="189">
          <description>Has Control panel</description>
          <long-description></long-description>
          <tag name="return" line="189" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJytVl1v4kYUfYZfcStFshOlpq36RMI2EZvdRmIJIomqKq3QxFzwBOPxzozJpm3+e+cLMzYmBLUvyIzvOffr3Ds+/yVP8nbn5KQNJ9AvOMdMwr2kKZUv6kifXpBCJozDkHG6YHDJCYVzon4vMkojEkdP+Qff7jZhCVIYkgV5oksC55l7Egkr1JuL+ZLQNIrZ0sJSmi0gkTLvdjrPz89RhlK9W7JMRIzPYYiyb//CiLMnjKVDxZgJ3A3sOItIfpM+ycAeG5KY5S+czhMJ/fLppx9+/Pm02Wun3b7M8263ECjCwFWrzzLJWToiGabBKQQbZOTqGByfNeA+cbLEQwAjMn/D/n09PLQ3OYkXyq1Xjj+8x42PTjtOiRCl97838ShDSdSRQClpNoclmyKsSFqgwbVibQC3V3d318PPky83H68mv92MP0IPAgcJNtlRUeWR3NCYWFeEwyNjqaXNOV0RiaCcSxrD0WRCxa2FftHIHmRFmm6Yx/i1QBUIe3TNLjmX9BtOd5FyC9vwXJt0YzyUiDrcdienRBKfhnBOXhxN8ahUXrLEDtGzNqEnC1W1Ioe4gTJXo7yEPlngugRHLin/0JhyRcIzWDE6bfI/K7JYUpYBzaikJKV/YdjEe6zk0WrRGYTfqbjSWbfr5W9ftrbOdcPweV0UnVqr9dpue5brqHulozPvvUv9IbgXyIM/ldWlGgml5Jxl6tzMGjcVa7UaJrvb9ZKqu7QoPyEqfHB47LLyR38fo05PZ+ga+BklyAQrLYyqPRSSK3X/o3UNRwt8gRnFdAqSgWocp7jCCAZIVmikr8/nilSRUY51tZXNNkqynP2a690C4EimoQnBjpnfcSqUFsNqV9b1cT6rL8tO+3hN/g5U+fJXteG63fmW51NTKV3u7VLnyJfKm07I7KvmcpsC/X/11htsy/Obxd4Y26ocVusZSQVWSkzFxK4Pv8YzpnoaJ2C7SoRK2L0xGOuiEskaWXrSu/rMnOi+2J/tIFqto5zIRK//UUkXBRDZEkcQRKYkgZk5hw911Y7f6LGmrDb5WkDK5jRb99Qr/9u7TQw0LLTZVfw3LZSAToOq436C8aJyi1VlpancDAvvvrqtAg4J2Lv2wgpnfTjdaHkmx1vruHaJ+sY1FXnSq+GaB7dmVLLp5klUdj3IOc4nXwsmMQw6WhMWuv3xoGTS0d9KHVN8E5DBLomME4cteZ3xmBXqr+ob1wt7X+JrNb8CKu3uMa4O2b60N1pRim5Uynt7n5BK8yua3RrZIFdfehOcUkkeU2xUbWwvNcj1rXb45FTvxFJ29cvv+w9mEsRDkKeFmjV9W/d60Hgrjwb3n6+Hk/7N8G58M5iMLodXg6q6ykbVr5D6h8HIOdu7IHcBHwL5kqOL1h6WAd79PrqafLoZvytST1INC7Iqj/5/aYnSx46evF0kMWZKIbsrtZ2A3ZAxK7J9nJssX9v/AjBinoQ=</source>
  </file>
  <file path="Plugin/NetCommons/Utility/CurrentFrame.php" generated-path="Plugin.NetCommons.Utility.CurrentFrame.html" hash="03ddb7e5cdbf3912222d38bae6a91112" package="Default">
    <docblock line="0">
      <description>CurrentFrame Utility</description>
      <long-description></long-description>
      <tag name="author" line="0" description="Noriko Arai" link="mailto:arai@nii.ac.jp"/>
      <tag name="author" line="0" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
      <tag name="link" line="0" description="NetCommons Project" link="http://www.netcommons.org"/>
      <tag name="license" line="0" description="NetCommons License" link="http://www.netcommons.org/license.txt"/>
      <tag name="copyright" line="0" description="Copyright 2014, NetCommons Project"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="18" package="NetCommons\NetCommons\Utility">
      <extends/>
      <name>CurrentFrame</name>
      <full_name>\CurrentFrame</full_name>
      <docblock line="18">
        <description>CurrentFrame Utility</description>
        <long-description></long-description>
        <tag name="author" line="18" description="Shohei Nakajima" link="mailto:nakajimashouhei@gmail.com"/>
        <tag name="package" line="18" description="NetCommons\NetCommons\Utility"/>
      </docblock>
      <constant namespace="" line="23" package="NetCommons\NetCommons\Utility">
        <name>PLUGIN_PAGES</name>
        <full_name>\CurrentFrame::PLUGIN_PAGES</full_name>
        <value>'pages'</value>
        <docblock line="23">
          <description>Constant Plugin value</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="true" visibility="private" namespace="" line="30" package="NetCommons\NetCommons\Utility">
        <name>$__request</name>
        <full_name>\CurrentFrame::__request</full_name>
        <default></default>
        <docblock line="30">
          <description>Request object</description>
          <long-description></long-description>
          <tag name="var" line="30" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="private" namespace="" line="37" package="NetCommons\NetCommons\Utility">
        <name>$__instance</name>
        <full_name>\CurrentFrame::__instance</full_name>
        <default></default>
        <docblock line="37">
          <description>Instance object</description>
          <long-description></long-description>
          <tag name="var" line="37" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="45" package="NetCommons\NetCommons\Utility">
        <name>initialize</name>
        <full_name>\CurrentFrame::initialize()</full_name>
        <docblock line="45">
          <description>setup current data</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;CakeRequest&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="return" line="45" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CakeRequest</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="76" package="NetCommons\NetCommons\Utility">
        <name>setFrame</name>
        <full_name>\CurrentFrame::setFrame()</full_name>
        <docblock line="76">
          <description>Set Frame</description>
          <long-description></long-description>
          <tag name="return" line="76" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="NetCommons\NetCommons\Utility">
        <name>setPageByBox</name>
        <full_name>\CurrentFrame::setPageByBox()</full_name>
        <docblock line="102">
          <description>Set PageByBox</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="134" package="NetCommons\NetCommons\Utility">
        <name>setBlock</name>
        <full_name>\CurrentFrame::setBlock()</full_name>
        <docblock line="134">
          <description>Set Block</description>
          <long-description></long-description>
          <tag name="param" line="134" description="&lt;p&gt;Blocks.id&lt;/p&gt;" type="integer" variable="$blockId">
            <type>integer</type>
          </tag>
          <tag name="return" line="134" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blockId</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="176" package="NetCommons\NetCommons\Utility">
        <name>setBlockRolePermissions</name>
        <full_name>\CurrentFrame::setBlockRolePermissions()</full_name>
        <docblock line="176">
          <description>Set BlockRolePermissions</description>
          <long-description></long-description>
          <tag name="return" line="176" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJytWN1uIjcUvoancKRoByIC2apXJNBsaLuNtIpQor2iETKDAYf5q8eThK64yKqvUPUd+g59mvRBemzPj+c3M0tvWGKf853P53zn2OzFD97Gaw9OTtroBE0CxojDf2bYJugzpxblO1gXW5c44BuXoRuX0a2LPjBM0QWGz0uH0j42+w/eWLe727gbQtEN3uIHamN04YTf/I0bwM7l2sbU6puurdws6mzRhnNvOBg8PT31HcJhz3Ydv++yNbohfKL+RFPmPhCTh14mcXxS7jgILfr8mesgn9SyBDFdb8foesPRJP723dn773vFUQftBulqmgYPm1u8JlrkX7WvSYxB27Sw76cpfEmYgTXHDkdTK1hTBz1iKyDSrWWKLTT99Pnj9c18+uHjT3dohAwPgvrGeQxwS34LCNi5i/DUkt0jZsimz2SpoDxGHzEnCEJxaqLj+ZwptwTnWvIwSVMgGvolSD7hgYdMdV60xBxHYB7I0EYTvCUR6+OQh74oTRmAMEiHS6PIwQIUEgVeBY7Jqesg6lBOsUV/J50i3C6kutWiK9Q5Al7WajjUKKvNVm4d0uyQp1TFOt1zMN2325p5RH0URztvh8GoD0nohABgHCZjZkgw474bhg6cN+xU1DdAryzX3NYAjezqg966FpkSZoMVJLtuiJyXHjCbvtOxVIU/MzzZAcY9OhqNwmLp4i+r1ukYuGhFKrGQzLQyhuSn0E7DoaaiLL/uearoecz0aX0ZYh83wx3hSJKLeqBM2LGik9PE2lVFymdO9FaiFfTuHaplOTPoMqnl8UqsXi/RCNXykxlExPJJFTX4h+1mhsSe1w6X88p3XVIANUpHaCLm6y1ZU5+znaplR1H2+4q5rHoBwpX7XOYPW+AOn0Y309XRAeIDMeIHFtfPk+F4Ol5RZ3m1u14mzlKpuQYCkF/gwhkObcLWJN9gPRRGU/6VDSyUnaS9pXQn3fYVSQUw4Xi1g6MXSDneayJnDTAj6aIJAinPKnThPkvBVJvXE+Y39wyQmBeyqu3ZhKA8Vw16Vemq4ZNQUr6JSqRAKrUNMErZHWNFmc+NHsKM4V1HABnwellSoQDfQKOxttMS8fsQXCwrrj2x3hWfXSlsdV9HUs8zK+icSO/qNhZ+0crs7D7u4CNUqrtb17WTHJYa6PhqJaSU7hN5M6SfPRTa+3gh1qE4ct/vy6ap/9iJr7EYB14qgWUp0kUlEmalI05xUK+C7JQr1Y56Q4SKE/qsaRlKM+Zdy62oYyKMqFSDwb///Pn69evry1+vL3+/vvxRq8viRwckRmqkW4dizuug/hGBKjqIEdCeTx+J7JSz3pttJfCSxlLHKGqtdGMdeglljlzn+QsjUbBLj9MDUlWcq6pkZbJVj6pC7aqUJjdwOp0H53NfOk8yL80mV3DxS7VybKSt6wyRzLs/O1Ka/shoIiyB4YcjPLk0y38DzYwt2TURX5pkJEVsWZVCPH1fQ4lMcJ8zID8vl6N2QDUae6G3kqc4TYln+sShhhtKuKRSsbJN115Qh0Q4PWR8cfZFouh7iXu5laF3ghijnq5Dlbx4mpWW+keywkCmTF5pUL1DtZ1eUUbLgGv9rhY1/P8pFaIe/jv/2wlV/UdAyfstLSwtgPoVsm//B6cgq10=</source>
  </file>
  <file path="Plugin/DebugKit/Model/DebugKitAppModel.php" generated-path="Plugin.DebugKit.Model.DebugKitAppModel.html" hash="7befc5fd845d9c455146f9d4730d3266" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="Default">
      <extends>\AppModel</extends>
      <name>DebugKitAppModel</name>
      <full_name>\DebugKitAppModel</full_name>
      <docblock line="22">
        <description>Class DebugKitAppModel</description>
        <long-description>Add your application-wide methods in the class below, your models
will inherit them.</long-description>
        <tag name="since" line="22" description="DebugKit 0.1"/>
        <tag name="package" line="22" description="Default"/>
        <tag name="inherited_from" description="\AppModel" refers="\AppModel" link="/classes/AppModel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Model">
        <name>$actsAs</name>
        <full_name>\NetCommonsAppModel::actsAs</full_name>
        <default>array('NetCommons.DateTime', 'NetCommons.Trackable')</default>
        <docblock line="43">
          <description>use behaviors</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="53" package="NetCommons\NetCommons\Model">
        <name>$validate</name>
        <full_name>\NetCommonsAppModel::validate</full_name>
        <default>array()</default>
        <docblock line="53">
          <description>Validation rules</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="65" package="NetCommons\NetCommons\Model">
        <name>__construct</name>
        <full_name>\NetCommonsAppModel::__construct()</full_name>
        <docblock line="65">
          <description>Constructor. Binds the model's database table to the object.</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;Set this ID for this model on startup,&#10;can also be an array of options, see above.&lt;/p&gt;" type="boolean|integer|string|array" variable="$id">
            <type>boolean</type>
            <type>integer</type>
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;Name of database table to use.&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;DataSource connection name.&lt;/p&gt;" type="string" variable="$ds">
            <type>string</type>
          </tag>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="SuppressWarnings" line="65" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default>false</default>
          <type>boolean|integer|string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ds</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="146" package="NetCommons\NetCommons\Model">
        <name>setDataSource</name>
        <full_name>\NetCommonsAppModel::setDataSource()</full_name>
        <docblock line="146">
          <description>Sets the DataSource to which this model is bound.</description>
          <long-description></long-description>
          <tag name="param" line="146" description="&lt;p&gt;The name of the DataSource, as defined in app/Config/database.php&lt;/p&gt;" type="string" variable="$dataSource">
            <type>string</type>
          </tag>
          <tag name="return" line="146" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="146" description="" type="\MissingConnectionException">
            <type>\MissingConnectionException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dataSource</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="175" package="NetCommons\NetCommons\Model">
        <name>create</name>
        <full_name>\NetCommonsAppModel::create()</full_name>
        <docblock line="175">
          <description>Initializes the model for writing a new record, loading the default values
for those fields that are not defined in $data, and clearing previous validation errors.</description>
          <long-description>Especially helpful for saving data in loops.</long-description>
          <tag name="param" line="175" description="&lt;p&gt;Optional data array to assign to the model after it is created. If null or false,&#10;  schema data defaults are not merged.&lt;/p&gt;" type="boolean|array" variable="$data">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="param" line="175" description="&lt;p&gt;If true, overwrites any primary key input with an empty value&lt;/p&gt;" type="boolean" variable="$filterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="175" description="The current Model::data; after merging $data and/or defaults from database" type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="175" description="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array" link="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array"/>
          <tag name="SuppressWarnings" line="175" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>boolean|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="195" package="NetCommons\NetCommons\Model">
        <name>createAll</name>
        <full_name>\NetCommonsAppModel::createAll()</full_name>
        <docblock line="195">
          <description>Initializes the model for writing a new record, loading the default values
for those fields that are not defined in $data, and clearing previous validation errors.</description>
          <long-description>Especially helpful for saving data in loops.</long-description>
          <tag name="param" line="195" description="&lt;p&gt;Optional data array to assign to the model after it is created. If null or false,&#10;  schema data defaults are not merged.&lt;/p&gt;" type="boolean|array" variable="$data">
            <type>boolean</type>
            <type>array</type>
          </tag>
          <tag name="param" line="195" description="&lt;p&gt;If true, overwrites any primary key input with an empty value&lt;/p&gt;" type="boolean" variable="$filterKey">
            <type>boolean</type>
          </tag>
          <tag name="return" line="195" description="The current Model::data; after merging $data and/or defaults from database" type="array">
            <type>array</type>
          </tag>
          <tag name="link" line="195" description="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array" link="http://book.cakephp.org/2.0/en/models/saving-your-data.html#model-create-array-data-array"/>
          <tag name="SuppressWarnings" line="195" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>boolean|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filterKey</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="233" package="NetCommons\NetCommons\Model">
        <name>begin</name>
        <full_name>\NetCommonsAppModel::begin()</full_name>
        <docblock line="233">
          <description>transaction begin</description>
          <long-description></long-description>
          <tag name="return" line="233" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="246" package="NetCommons\NetCommons\Model">
        <name>commit</name>
        <full_name>\NetCommonsAppModel::commit()</full_name>
        <docblock line="246">
          <description>transaction commit</description>
          <long-description></long-description>
          <tag name="return" line="246" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="258" package="NetCommons\NetCommons\Model">
        <name>rollback</name>
        <full_name>\NetCommonsAppModel::rollback()</full_name>
        <docblock line="258">
          <description>transaction rollback</description>
          <long-description></long-description>
          <tag name="param" line="258" description="&lt;p&gt;Exception&lt;/p&gt;" type="mixed" variable="$ex">
            <type>mixed</type>
          </tag>
          <tag name="return" line="258" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="258" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ex</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="274" package="NetCommons\NetCommons\Model">
        <name>loadModels</name>
        <full_name>\NetCommonsAppModel::loadModels()</full_name>
        <docblock line="274">
          <description>Load models</description>
          <long-description></long-description>
          <tag name="param" line="274" description="&lt;p&gt;models to load&lt;/p&gt;" type="array" variable="$models">
            <type>array</type>
          </tag>
          <tag name="param" line="274" description="&lt;p&gt;data source&lt;/p&gt;" type="string" variable="$source">
            <type>string</type>
          </tag>
          <tag name="return" line="274" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$models</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$source</name>
          <default>'master'</default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="290" package="NetCommons\NetCommons\Model">
        <name>equalToField</name>
        <full_name>\NetCommonsAppModel::equalToField()</full_name>
        <docblock line="290">
          <description>Check field1 matches field2</description>
          <long-description></long-description>
          <tag name="param" line="290" description="&lt;p&gt;field1 parameters&lt;/p&gt;" type="array" variable="$field1">
            <type>array</type>
          </tag>
          <tag name="param" line="290" description="&lt;p&gt;field2 key&lt;/p&gt;" type="string" variable="$field2">
            <type>string</type>
          </tag>
          <tag name="return" line="290" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field1</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field2</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="301" package="NetCommons\NetCommons\Model">
        <name>_getDefaultValue</name>
        <full_name>\NetCommonsAppModel::_getDefaultValue()</full_name>
        <docblock line="301">
          <description>全カラムのデフォルト値をセットした配列を返す。</description>
          <long-description></long-description>
          <tag name="param" line="301" description="&lt;p&gt;デフォルトを上書きするカラム配列&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="301" description="デフォルト値をセットした配列" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="327" package="NetCommons\NetCommons\Model">
        <name>_getCurrentValue</name>
        <full_name>\NetCommonsAppModel::_getCurrentValue()</full_name>
        <docblock line="327">
          <description>Currentで取れる値を返す。</description>
          <long-description></long-description>
          <tag name="return" line="327" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppModel</inherited_from>
      </method>
    </class>
    <source>eJytksFOwzAMhu95Ct/WTtDCtSAxxDQxwaRp7AWy1F3D2iRK3BWEeHfS0gYNECd8cmz/X5xfub4xpWHpdMpgCnf8gOv7dUR1DBlsuJE5zPGIlTY1KoKF5TW22h4gKolMlqbCKzwg0XYf9wRtXq3clwSRiHsePOmCWm4RFrpROSep1RkslUhOIEVojqwO9ygFKoc5+CZa2JYIq+V2LHcTG8ylIyt3Tad1oAsoZIUO6sYRWCQuFZDX8Z0+Ioiwn9LkKclw0eyr0cU/PgNmlVQHCPHTuBPb11Y/o6Be6KQSGIRz3DX7B0lwkVwO3N6FU27btok2vq4b65/n8ekw59Ja0vlwSPzd36xMGbs1JssaPxpNfLrSOVaTM5h8JvEVC/+k4s6FhcbR0co/106Z+FUM+EKocgeh8MbYO/sAdxnVSQ==</source>
  </file>
  <file path="Plugin/DebugKit/Model/Behavior/TimedBehavior.php" generated-path="Plugin.DebugKit.Model.Behavior.TimedBehavior.html" hash="3ed125dbdbfe34988d4c9193191dc350" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 1.3"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="Default">
      <extends>\ModelBehavior</extends>
      <name>TimedBehavior</name>
      <full_name>\TimedBehavior</full_name>
      <docblock line="22">
        <description>Class TimedBehavior</description>
        <long-description></long-description>
        <tag name="since" line="22" description="DebugKit 1.3"/>
        <tag name="package" line="22" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="29" package="Default">
        <name>$settings</name>
        <full_name>\TimedBehavior::settings</full_name>
        <default>array()</default>
        <docblock line="29">
          <description>Behavior settings</description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="36" package="Default">
        <name>$_defaults</name>
        <full_name>\TimedBehavior::_defaults</full_name>
        <default>array()</default>
        <docblock line="36">
          <description>Default setting values</description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="45" package="Default">
        <name>setup</name>
        <full_name>\TimedBehavior::setup()</full_name>
        <docblock line="45">
          <description>Setup the behavior and import required classes.</description>
          <long-description></long-description>
          <tag name="param" line="45" description="&lt;p&gt;Model using the behavior&lt;/p&gt;" type="\Model|object" variable="$Model">
            <type>\Model</type>
            <type>object</type>
          </tag>
          <tag name="param" line="45" description="&lt;p&gt;Settings to override for model.&lt;/p&gt;" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="return" line="45" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Model</name>
          <default></default>
          <type>\Model|object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="60" package="Default">
        <name>beforeFind</name>
        <full_name>\TimedBehavior::beforeFind()</full_name>
        <docblock line="60">
          <description>beforeFind, starts a timer for a find operation.</description>
          <long-description></long-description>
          <tag name="param" line="60" description="" type="\Model" variable="$Model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="60" description="&lt;p&gt;Array of query data (not modified)&lt;/p&gt;" type="array" variable="$queryData">
            <type>array</type>
          </tag>
          <tag name="return" line="60" description="true" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$queryData</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>afterFind</name>
        <full_name>\TimedBehavior::afterFind()</full_name>
        <docblock line="73">
          <description>afterFind, stops a timer for a find operation.</description>
          <long-description></long-description>
          <tag name="param" line="73" description="" type="\Model" variable="$Model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="73" description="&lt;p&gt;Array of results&lt;/p&gt;" type="array" variable="$results">
            <type>array</type>
          </tag>
          <tag name="param" line="73" description="" type="" variable="$primary"/>
          <tag name="return" line="73" description="true." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$results</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$primary</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="85" package="Default">
        <name>beforeSave</name>
        <full_name>\TimedBehavior::beforeSave()</full_name>
        <docblock line="85">
          <description>beforeSave, starts a time before a save is initiated.</description>
          <long-description></long-description>
          <tag name="param" line="85" description="" type="\Model" variable="$Model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="85" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="85" description="true" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="97" package="Default">
        <name>afterSave</name>
        <full_name>\TimedBehavior::afterSave()</full_name>
        <docblock line="97">
          <description>afterSave, stop the timer started from a save.</description>
          <long-description></long-description>
          <tag name="param" line="97" description="" type="\Model" variable="$Model">
            <type>\Model</type>
          </tag>
          <tag name="param" line="97" description="" type="string" variable="$created">
            <type>string</type>
          </tag>
          <tag name="return" line="97" description="Always true" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Model</name>
          <default></default>
          <type>\Model</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$created</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="97" code="PPC:ERR-50015">Argument $options is missing from the Docblock of afterSave</error>
    </parse_markers>
    <source>eJytlm1v2zgMx18nn4IvAsQpUgfD3mW33npXFDdsA4q1726HQrbpRFdb0igpWbDbdz9Kfqjz0GIbFgRITEp/Uj9STH773azNeHF2NoYz+FM84M1fN4mrZ7CEj8LIAq5wg5U2NSoH1yRq3Gp6gGTtnFkuFjnvYIFU02oWFbTZkVytHST5LOrBrS7dVhDCtfaqEE5qNYe3Kk/3RMre2WkFufcyR2WxAHYiwd0a4cPbu84cVnzEQlpHMvNhrwVdQikrtFB764DQCanA8T6R6Q1C3uentGOVtA305tERXr/wGPCmkuoB+tcxuD3sN6T/xdzFjVaqHPuNV5j51Tvp4EX6stWNFPZ1t9ttqg3btSc+Hssv2nV2UUt33j6kHPsA5WI8vjRmufS8NJl20eLnCmk6h96WvpfZdPZq3LdNJayFO1lj8QeuxUZq6rA+e4TFOD/eCfjFoSosfNAFVr31ax+tN1l0TqqV7WJtBIEgErsoPTI+48PCpFsGrxtvMsj8CkvhK9dJwUZUHp8UJO24NNyNk/ui2XhS9BadN7Hnsi5VoQqQtdEUWvKzl8Qi8exo+w40gm8XfIrH/k9noQtgEp8aFOBtSHGoO9gXsxgc9rb74jRw4xPJAqHkVOqglcadfDs8KdhoWewhK73KQwsHLN4kTfQmlfkeT+WrasalGY1kCYm09w2LfsmscY4mbi3t+UVn/rvROr8QlRT2n47hfY20wqRd3CMehGTIo9E3wIq7/vuED8WiwJjfXbEyvrKE11IVc7BOEJdUgOOGpEhL8DTh2vGNouZW71driOa4GJ890u5KOAGX0cCzKZqgCLaEJ1CohiwlFrNhQTKtKxQ8tsjj6cI8Zn1YnT5mg/7wGi+X8ZDhxlGyRwtSmN6Hw/JNP3KcXwRPMpvGCrRphvReDVmK0iF1KLX5hSQJbbxtPcfWMFg5MSRrQbunQKanSfY5H4JsI8x7Ye6mUnDnPQ1Wm2e5Psuuqeit2OBBH7YefrLsBGlBKumk4Dn0Qwi1iT+QP9NnIatDPK3c4/z7qX4LRzrdb8HzXf3WIdPNyG0aLgblGVuSrltyJ+fsMa3wX4Kn7CQnDIhP4bqstmJnn6HW53UIrRX9MXxPd1Wkd5rQt/H/N4Arcw==</source>
  </file>
  <file path="Plugin/DebugKit/Model/ToolbarAccess.php" generated-path="Plugin.DebugKit.Model.ToolbarAccess.html" hash="d46b00658e8e82e99ef00e9beb7f9e23" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 1.3"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="Default">
      <extends>\Object</extends>
      <name>ToolbarAccess</name>
      <full_name>\ToolbarAccess</full_name>
      <docblock line="22">
        <description>Class ToolbarAccess</description>
        <long-description>Contains logic for accessing DebugKit specific information.</long-description>
        <tag name="package" line="22" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="32" package="Default">
        <name>explainQuery</name>
        <full_name>\ToolbarAccess::explainQuery()</full_name>
        <docblock line="32">
          <description>Runs an explain on a query if the connection supports EXPLAIN.</description>
          <long-description>currently only PostgreSQL and MySQL are supported.</long-description>
          <tag name="param" line="32" description="&lt;p&gt;Connection name&lt;/p&gt;" type="string" variable="$connection">
            <type>string</type>
          </tag>
          <tag name="param" line="32" description="&lt;p&gt;SQL query to explain / find query plan for.&lt;/p&gt;" type="string" variable="$query">
            <type>string</type>
          </tag>
          <tag name="return" line="32" description="Array of explain information or empty array if connection is unsupported." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJytVF1P20AQfI5/xT5Eso0gpupbWloQHyoqoSHQqhWK0MXeOFfsu+vdmTRq+e/dsy+OU6h4aaRY9u3O7Mzu2m/fq4UKkp2dAHbgmN3j+MM4smUMQ5gwxTM4wQcspCpRWDjTrMSl1PcQLaxVwyRJCUEEA6nzuGaQaqV5vrAQpXHNB9dybpdMI5zJSmTMcil24Vykgy2SeRtcczm6C56iMJgBBVHDzQJhdH6zPnYZE8y4sZrPKoc1IOcw5wUaKCtjQaNlXIAlHJvJB4S01SekJZaBL3S4Cbjff7QBhwUX99D+njZuq+1jLb9jamug4SLFFniCsyr/yC28Grz2vHUXtnmXy+VAKjqXlSZ7RJ/4PJOU3O75hwHV/quVSRAcKTUcVpQahcdSCNJBRkZMsBx1uAvhSGZYhPGboF2YghkDN1IWM6aP0hSN8Q0lvGu9gULmPIW51MDqOBf5xopRmPI5xbmgjLJpXK0lfcoM+NOiyAx8mrkWwa9WxqSiQkxQgircvKUABj8q1Cvg83r6aWsHTKWU1NbA6dfxxdH5pasHaaU1bXixIixdxtLYXOP11QXRZjBa1Xc0fA/GrF0cxeilALeCZKzfqbPpIAh6bZ5JbhQ66ubOytZBQltMhZtzOhKug7XSQ9rpSpNBrdkKjuorLf0a2GkkUM+xVHblc6kVHXnc0Eu1ZScJeqqaFW5alWiSPOuVkxF1zO168TENodfrZzM4gCcbMxzmaE+YZdf1LnbxtEIORrFmTwlOJHvvKGPO89twEwmntG2U610fNF6imoAMRUpjfkd+00UUJtFoZX4Uv/30TNxPaGs7ZeJGb6/vfdGHxReu3UShXwkIYbB26Ao9rbQu8a8KvQY9dpPb0tzr0XyQpQuIOiqYgb5qKL+wosI1S4fmdtoSbaXe7k9vw6vPp5NvQNovw6kv89jI2O7bXYk6x6ihaa5hGMfrcbo6DfwRsKBPi/dyjyvTUriHjnZXf3/6grfSzeVlZ3cPLoXYN/kb7pcN1TqfMxM0fw/1FBR6DILH4A+OHULY</source>
  </file>
  <file path="Plugin/DebugKit/Controller/Component/ToolbarComponent.php" generated-path="Plugin.DebugKit.Controller.Component.ToolbarComponent.html" hash="5efa74e0e29dd7e8019432d64e41eab8" package="Default">
    <docblock line="0">
      <description>DebugKit DebugToolbar Component</description>
      <long-description>Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="29" package="Default">
      <extends>\Component</extends>
      <implements>\CakeEventListener</implements>
      <name>ToolbarComponent</name>
      <full_name>\ToolbarComponent</full_name>
      <docblock line="29">
        <description>Class ToolbarComponent</description>
        <long-description></long-description>
        <tag name="since" line="29" description="DebugKit 0.1"/>
        <tag name="package" line="29" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="40" package="Default">
        <name>$settings</name>
        <full_name>\ToolbarComponent::settings</full_name>
        <default>array('forceEnable' =&gt; false, 'autoRun' =&gt; true)</default>
        <docblock line="40">
          <description>Settings for the Component</description>
          <long-description>- forceEnable - Force the toolbar to display even if debug == 0. Default = false
- autoRun - Automatically display the toolbar. If set to false, toolbar display can be triggered by adding
   `?debug=true` to your URL.</long-description>
          <tag name="var" line="40" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="Default">
        <name>$controller</name>
        <full_name>\ToolbarComponent::controller</full_name>
        <default></default>
        <docblock line="50">
          <description>Controller instance reference</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$components</name>
        <full_name>\ToolbarComponent::components</full_name>
        <default>array('RequestHandler', 'Session')</default>
        <docblock line="57">
          <description>Components used by DebugToolbar</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="65" package="Default">
        <name>$_defaultPanels</name>
        <full_name>\ToolbarComponent::_defaultPanels</full_name>
        <default>array('DebugKit.History', 'DebugKit.Session', 'DebugKit.Request', 'DebugKit.SqlLog', 'DebugKit.Timer', 'DebugKit.Log', 'DebugKit.Variables', 'DebugKit.Environment', 'DebugKit.Include')</default>
        <docblock line="65">
          <description>The default panels the toolbar uses.</description>
          <long-description>which panels are used can be configured when attaching the component</long-description>
          <tag name="var" line="65" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="82" package="Default">
        <name>$panels</name>
        <full_name>\ToolbarComponent::panels</full_name>
        <default>array()</default>
        <docblock line="82">
          <description>Loaded panel objects.</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="89" package="Default">
        <name>$javascript</name>
        <full_name>\ToolbarComponent::javascript</full_name>
        <default>array('libs' =&gt; 'DebugKit./js/js_debug_toolbar')</default>
        <docblock line="89">
          <description>javascript files component will be using</description>
          <long-description></long-description>
          <tag name="var" line="89" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="98" package="Default">
        <name>$css</name>
        <full_name>\ToolbarComponent::css</full_name>
        <default>array('DebugKit./css/debug_toolbar.css')</default>
        <docblock line="98">
          <description>CSS files component will be using</description>
          <long-description></long-description>
          <tag name="var" line="98" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="105" package="Default">
        <name>$cacheKey</name>
        <full_name>\ToolbarComponent::cacheKey</full_name>
        <default>'toolbar_cache'</default>
        <docblock line="105">
          <description>CacheKey used for the cache file.</description>
          <long-description></long-description>
          <tag name="var" line="105" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="112" package="Default">
        <name>$cacheDuration</name>
        <full_name>\ToolbarComponent::cacheDuration</full_name>
        <default>'+4 hours'</default>
        <docblock line="112">
          <description>Duration of the debug kit history cache</description>
          <long-description></long-description>
          <tag name="var" line="112" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="119" package="Default">
        <name>$enabled</name>
        <full_name>\ToolbarComponent::enabled</full_name>
        <default>true</default>
        <docblock line="119">
          <description>Status whether component is enable or disable</description>
          <long-description></long-description>
          <tag name="var" line="119" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="131" package="Default">
        <name>__construct</name>
        <full_name>\ToolbarComponent::__construct()</full_name>
        <docblock line="131">
          <description>Constructor</description>
          <long-description>If debug is off the component will be disabled and not do any further time tracking
or load the toolbar helper.</long-description>
          <tag name="param" line="131" description="" type="\ComponentCollection" variable="$collection">
            <type>\ComponentCollection</type>
          </tag>
          <tag name="param" line="131" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="return" line="131" description="" type="\ToolbarComponent">
            <type>\ToolbarComponent</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$collection</name>
          <default></default>
          <type>\ComponentCollection</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="178" package="Default">
        <name>implementedEvents</name>
        <full_name>\ToolbarComponent::implementedEvents()</full_name>
        <docblock line="178">
          <description>Register all the timing handlers for core events.</description>
          <long-description></long-description>
          <tag name="return" line="178" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="233" package="Default">
        <name>initialize</name>
        <full_name>\ToolbarComponent::initialize()</full_name>
        <docblock line="233">
          <description>Initialize callback.</description>
          <long-description>If automatically disabled, tell component collection about the state.</long-description>
          <tag name="param" line="233" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="233" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="245" package="Default">
        <name>_makePanelList</name>
        <full_name>\ToolbarComponent::_makePanelList()</full_name>
        <docblock line="245">
          <description>Go through user panels and remove default panels as indicated.</description>
          <long-description></long-description>
          <tag name="param" line="245" description="&lt;p&gt;The list of panels ther user has added removed.&lt;/p&gt;" type="array" variable="$userPanels">
            <type>array</type>
          </tag>
          <tag name="return" line="245" description="Array of panels to use." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userPanels</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="274" package="Default">
        <name>startup</name>
        <full_name>\ToolbarComponent::startup()</full_name>
        <docblock line="274">
          <description>Component Startup</description>
          <long-description></long-description>
          <tag name="param" line="274" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="274" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="297" package="Default">
        <name>beforeRedirect</name>
        <full_name>\ToolbarComponent::beforeRedirect()</full_name>
        <docblock line="297">
          <description>beforeRedirect callback</description>
          <long-description></long-description>
          <tag name="param" line="297" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="param" line="297" description="" type="" variable="$url"/>
          <tag name="param" line="297" description="" type="null" variable="$status">
            <type>null</type>
          </tag>
          <tag name="param" line="297" description="" type="boolean" variable="$exit">
            <type>boolean</type>
          </tag>
          <tag name="return" line="297" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exit</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="319" package="Default">
        <name>beforeRender</name>
        <full_name>\ToolbarComponent::beforeRender()</full_name>
        <docblock line="319">
          <description>beforeRender callback</description>
          <long-description>Calls beforeRender on all the panels and set the aggregate to the controller.</long-description>
          <tag name="param" line="319" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="319" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="371" package="Default">
        <name>loadState</name>
        <full_name>\ToolbarComponent::loadState()</full_name>
        <docblock line="371">
          <description>Load a toolbar state from cache</description>
          <long-description></long-description>
          <tag name="param" line="371" description="" type="integer" variable="$key">
            <type>integer</type>
          </tag>
          <tag name="return" line="371" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="384" package="Default">
        <name>_createCacheConfig</name>
        <full_name>\ToolbarComponent::_createCacheConfig()</full_name>
        <docblock line="384">
          <description>Create the cache config for the history</description>
          <long-description></long-description>
          <tag name="return" line="384" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="405" package="Default">
        <name>_gatherVars</name>
        <full_name>\ToolbarComponent::_gatherVars()</full_name>
        <docblock line="405">
          <description>collects the panel contents</description>
          <long-description></long-description>
          <tag name="param" line="405" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="405" description="Array of all panel beforeRender()" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="439" package="Default">
        <name>_loadPanels</name>
        <full_name>\ToolbarComponent::_loadPanels()</full_name>
        <docblock line="439">
          <description>Load Panels used in the debug toolbar</description>
          <long-description></long-description>
          <tag name="param" line="439" description="" type="" variable="$panels"/>
          <tag name="param" line="439" description="" type="" variable="$settings"/>
          <tag name="return" line="439" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$panels</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="464" package="Default">
        <name>_saveState</name>
        <full_name>\ToolbarComponent::_saveState()</full_name>
        <docblock line="464">
          <description>Save the current state of the toolbar varibles to the cache file.</description>
          <long-description></long-description>
          <tag name="param" line="464" description="&lt;p&gt;Controller instance&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="param" line="464" description="&lt;p&gt;Vars to save.&lt;/p&gt;" type="array" variable="$vars">
            <type>array</type>
          </tag>
          <tag name="return" line="464" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$vars</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/DebugKit/Controller/DebugKitAppController.php" generated-path="Plugin.DebugKit.Controller.DebugKitAppController.html" hash="5ba04f6433c0c9063511e567c2ab4796" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="23" package="Default">
      <extends>\AppController</extends>
      <name>DebugKitAppController</name>
      <full_name>\DebugKitAppController</full_name>
      <docblock line="23">
        <description>Class DebugKitAppController</description>
        <long-description>Add your application-wide methods in the class below, your controllers
will inherit them.</long-description>
        <tag name="since" line="23" description="DebugKit 0.1"/>
        <tag name="package" line="23" description="Default"/>
        <tag name="inherited_from" description="\AppController" refers="\AppController" link="/classes/AppController.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="29" package="NetCommons\NetCommons\Controller">
        <name>$layout</name>
        <full_name>\NetCommonsAppController::layout</full_name>
        <default>'NetCommons.default'</default>
        <docblock line="29">
          <description>use layout</description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="36" package="NetCommons\NetCommons\Controller">
        <name>$theme</name>
        <full_name>\NetCommonsAppController::theme</full_name>
        <default>'default'</default>
        <docblock line="36">
          <description>use theme</description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Controller">
        <name>$components</name>
        <full_name>\NetCommonsAppController::components</full_name>
        <default>array('Asset', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; 'auth', 'controller' =&gt; 'auth', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index')), 'DebugKit.Toolbar', 'Flash', 'NetCommons.NetCommons', 'NetCommons.Permission' =&gt; array('allow' =&gt; array('index' =&gt; null, 'view' =&gt; null)), 'RequestHandler', 'Session', 'Workflow.Workflow')</default>
        <docblock line="43">
          <description>use components</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="82" package="NetCommons\NetCommons\Controller">
        <name>$uses</name>
        <full_name>\NetCommonsAppController::uses</full_name>
        <default>array('M17n.Language', 'NetCommons.SiteSetting')</default>
        <docblock line="82">
          <description>use model</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="92" package="NetCommons\NetCommons\Controller">
        <name>$helpers</name>
        <full_name>\NetCommonsAppController::helpers</full_name>
        <default>array('Html' =&gt; array('className' =&gt; 'NetCommons.SingletonViewBlockHtml'), 'NetCommons.BackTo', 'NetCommons.Button', 'NetCommons.Date', 'NetCommons.NetCommonsForm', 'NetCommons.NetCommonsHtml')</default>
        <docblock line="92">
          <description>use helpers</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="NetCommons\NetCommons\Controller">
        <name>__construct</name>
        <full_name>\NetCommonsAppController::__construct()</full_name>
        <docblock line="110">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="110" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="110" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="124" package="NetCommons\NetCommons\Controller">
        <name>beforeFilter</name>
        <full_name>\NetCommonsAppController::beforeFilter()</full_name>
        <docblock line="124">
          <description>beforeFilter</description>
          <long-description></long-description>
          <tag name="return" line="124" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="166" package="NetCommons\NetCommons\Controller">
        <name>beforeRender</name>
        <full_name>\NetCommonsAppController::beforeRender()</full_name>
        <docblock line="166">
          <description>beforeRender</description>
          <long-description></long-description>
          <tag name="return" line="166" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="192" package="NetCommons\NetCommons\Controller">
        <name>beforeRedirect</name>
        <full_name>\NetCommonsAppController::beforeRedirect()</full_name>
        <docblock line="192">
          <description>The beforeRedirect method is invoked when the controller's redirect method is called but before any
further action.</description>
          <long-description>If this method returns false the controller will not continue on to redirect the request.
The $url, $status and $exit variables have same meaning as for the controller's method. You can also
return a string which will be interpreted as the URL to redirect to or return associative array with
key 'url' and optionally 'status' and 'exit'.</long-description>
          <tag name="param" line="192" description="&lt;p&gt;A string or array-based URL pointing to another location within the app,&#10;or an absolute URL&lt;/p&gt;" type="string|array" variable="$url">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;Optional HTTP status code (eg: 404)&lt;/p&gt;" type="integer" variable="$status">
            <type>integer</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;If true, exit() will be called after the redirect&lt;/p&gt;" type="boolean" variable="$exit">
            <type>boolean</type>
          </tag>
          <tag name="return" line="192" description="false to stop redirection event,&#10;  string controllers a new redirection URL or&#10;  array with the keys url, status and exit to be used by the redirect method." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="192" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="link" line="192" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
          <tag name="SuppressWarnings" line="192" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exit</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="207" package="NetCommons\NetCommons\Controller">
        <name>ping</name>
        <full_name>\NetCommonsAppController::ping()</full_name>
        <docblock line="207">
          <description>Keep connection alive</description>
          <long-description></long-description>
          <tag name="author" line="207" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
          <tag name="return" line="207" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="218" package="NetCommons\NetCommons\Controller">
        <name>camelizeKeyRecursive</name>
        <full_name>\NetCommonsAppController::camelizeKeyRecursive()</full_name>
        <docblock line="218">
          <description>camelizeKeyRecursive</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;data to camelize&lt;/p&gt;" type="array" variable="$orig">
            <type>array</type>
          </tag>
          <tag name="return" line="218" description="camelized data" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orig</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="239" package="NetCommons\NetCommons\Controller">
        <name>throwBadRequest</name>
        <full_name>\NetCommonsAppController::throwBadRequest()</full_name>
        <docblock line="239">
          <description>throw bad request</description>
          <long-description></long-description>
          <tag name="return" line="239" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="239" description="" type="\BadRequestException">
            <type>\BadRequestException</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="256" package="NetCommons\NetCommons\Controller">
        <name>emptyRender</name>
        <full_name>\NetCommonsAppController::emptyRender()</full_name>
        <docblock line="256">
          <description>Empty render</description>
          <long-description></long-description>
          <tag name="return" line="256" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
    </class>
    <source>eJytksFOwzAMhu95Ct/WTqOFa0FiaNPEBEjT2AtkqbuGtUmUuCsI8e6kVdetIHYip8T+/8+xk7t7kxsWj8cMxjDje1w9rgIqQ0hgzY1MYY4HLLQpUREsLC+x1nYPQU5kkjgW3uEBkba7sCVo82HlLicIRNjy4FVnVHOLsNCVSjlJrSawVCIaQLI+eWQ1uGcpUDlMwSfRwiZHeFlujuFGscZUOrJyWzVeBzqDTBbooKwcgUXiUgF5H9/qA4Lo76c0eUrUFZqeEs36xzZgWki1h379Htxg7Cur31BQa3RSCeyNc9xWuydJcB3ddNx2CkNuXdeRNj6uK+vb8/i407m4lHTVHSJf+8coY8YejEmSykuD0Uwrsroo0I4mcH4Kb89lfntJ2X+sgjvXdzAwHR/gYrMxE38TAN8JVepgGP1k7It9A5t27WM=</source>
  </file>
  <file path="Plugin/DebugKit/Controller/ToolbarAccessController.php" generated-path="Plugin.DebugKit.Controller.ToolbarAccessController.html" hash="71a82e73eaad0ef52244b2c213568309" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 1.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="Default">
      <extends>\DebugKitAppController</extends>
      <name>ToolbarAccessController</name>
      <full_name>\ToolbarAccessController</full_name>
      <docblock line="25">
        <description>DebugKit ToolbarAccess Controller</description>
        <long-description>Allows retrieval of information from the debugKit internals.</long-description>
        <tag name="since" line="25" description="DebugKit 1.1"/>
        <tag name="package" line="25" description="Default"/>
        <tag name="inherited_from" description="\DebugKitAppController" refers="\DebugKitAppController" link="/classes/DebugKitAppController.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="32" package="Default">
        <name>$name</name>
        <full_name>\ToolbarAccessController::name</full_name>
        <default>'ToolbarAccess'</default>
        <docblock line="32">
          <description>name</description>
          <long-description></long-description>
          <tag name="var" line="32" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="39" package="Default">
        <name>$helpers</name>
        <full_name>\ToolbarAccessController::helpers</full_name>
        <default>array('DebugKit.Toolbar' =&gt; array('output' =&gt; 'DebugKit.HtmlToolbar'), 'Js', 'Number', 'DebugKit.SimpleGraph')</default>
        <docblock line="39">
          <description>Helpers</description>
          <long-description></long-description>
          <tag name="var" line="39" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$components</name>
        <full_name>\ToolbarAccessController::components</full_name>
        <default>array('RequestHandler', 'DebugKit.Toolbar')</default>
        <docblock line="49">
          <description>Components</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="56" package="Default">
        <name>$uses</name>
        <full_name>\ToolbarAccessController::uses</full_name>
        <default>array('DebugKit.ToolbarAccess')</default>
        <docblock line="56">
          <description>Uses</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="29" package="NetCommons\NetCommons\Controller">
        <name>$layout</name>
        <full_name>\NetCommonsAppController::layout</full_name>
        <default>'NetCommons.default'</default>
        <docblock line="29">
          <description>use layout</description>
          <long-description></long-description>
          <tag name="var" line="29" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="36" package="NetCommons\NetCommons\Controller">
        <name>$theme</name>
        <full_name>\NetCommonsAppController::theme</full_name>
        <default>'default'</default>
        <docblock line="36">
          <description>use theme</description>
          <long-description></long-description>
          <tag name="var" line="36" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="43" package="NetCommons\NetCommons\Controller">
        <name>$components</name>
        <full_name>\NetCommonsAppController::components</full_name>
        <default>array('Asset', 'Auth' =&gt; array('loginAction' =&gt; array('plugin' =&gt; 'auth', 'controller' =&gt; 'auth', 'action' =&gt; 'login'), 'loginRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index'), 'logoutRedirect' =&gt; array('plugin' =&gt; 'pages', 'controller' =&gt; 'pages', 'action' =&gt; 'index')), 'DebugKit.Toolbar', 'Flash', 'NetCommons.NetCommons', 'NetCommons.Permission' =&gt; array('allow' =&gt; array('index' =&gt; null, 'view' =&gt; null)), 'RequestHandler', 'Session', 'Workflow.Workflow')</default>
        <docblock line="43">
          <description>use components</description>
          <long-description></long-description>
          <tag name="var" line="43" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="82" package="NetCommons\NetCommons\Controller">
        <name>$uses</name>
        <full_name>\NetCommonsAppController::uses</full_name>
        <default>array('M17n.Language', 'NetCommons.SiteSetting')</default>
        <docblock line="82">
          <description>use model</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="92" package="NetCommons\NetCommons\Controller">
        <name>$helpers</name>
        <full_name>\NetCommonsAppController::helpers</full_name>
        <default>array('Html' =&gt; array('className' =&gt; 'NetCommons.SingletonViewBlockHtml'), 'NetCommons.BackTo', 'NetCommons.Button', 'NetCommons.Date', 'NetCommons.NetCommonsForm', 'NetCommons.NetCommonsHtml')</default>
        <docblock line="92">
          <description>use helpers</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="63" package="Default">
        <name>beforeFilter</name>
        <full_name>\ToolbarAccessController::beforeFilter()</full_name>
        <docblock line="63">
          <description>beforeFilter callback</description>
          <long-description></long-description>
          <tag name="return" line="63" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="84" package="Default">
        <name>history_state</name>
        <full_name>\ToolbarAccessController::history_state()</full_name>
        <docblock line="84">
          <description>Get a stored history state from the toolbar cache.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="" type="null" variable="$key">
            <type>null</type>
          </tag>
          <tag name="return" line="84" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="103" package="Default">
        <name>sql_explain</name>
        <full_name>\ToolbarAccessController::sql_explain()</full_name>
        <docblock line="103">
          <description>Run SQL explain/profiling on queries. Checks the hash + the hashed queries,
if there is mismatch a 404 will be rendered. If debug == 0 a 404 will also be
rendered. No explain will be run if a 404 is made.</description>
          <long-description></long-description>
          <tag name="throws" line="103" description="" type="\BadRequestException">
            <type>\BadRequestException</type>
          </tag>
          <tag name="return" line="103" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="110" package="NetCommons\NetCommons\Controller">
        <name>__construct</name>
        <full_name>\NetCommonsAppController::__construct()</full_name>
        <docblock line="110">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="110" description="&lt;p&gt;Request object for this controller. Can be null for testing,&#10; but expect that features that use the request parameters will not work.&lt;/p&gt;" type="\CakeRequest" variable="$request">
            <type>\CakeRequest</type>
          </tag>
          <tag name="param" line="110" description="&lt;p&gt;Response object for this controller.&lt;/p&gt;" type="\CakeResponse" variable="$response">
            <type>\CakeResponse</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CakeRequest</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CakeResponse</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="124" package="NetCommons\NetCommons\Controller">
        <name>beforeFilter</name>
        <full_name>\NetCommonsAppController::beforeFilter()</full_name>
        <docblock line="124">
          <description>beforeFilter</description>
          <long-description></long-description>
          <tag name="return" line="124" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="166" package="NetCommons\NetCommons\Controller">
        <name>beforeRender</name>
        <full_name>\NetCommonsAppController::beforeRender()</full_name>
        <docblock line="166">
          <description>beforeRender</description>
          <long-description></long-description>
          <tag name="return" line="166" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="192" package="NetCommons\NetCommons\Controller">
        <name>beforeRedirect</name>
        <full_name>\NetCommonsAppController::beforeRedirect()</full_name>
        <docblock line="192">
          <description>The beforeRedirect method is invoked when the controller's redirect method is called but before any
further action.</description>
          <long-description>If this method returns false the controller will not continue on to redirect the request.
The $url, $status and $exit variables have same meaning as for the controller's method. You can also
return a string which will be interpreted as the URL to redirect to or return associative array with
key 'url' and optionally 'status' and 'exit'.</long-description>
          <tag name="param" line="192" description="&lt;p&gt;A string or array-based URL pointing to another location within the app,&#10;or an absolute URL&lt;/p&gt;" type="string|array" variable="$url">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;Optional HTTP status code (eg: 404)&lt;/p&gt;" type="integer" variable="$status">
            <type>integer</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;If true, exit() will be called after the redirect&lt;/p&gt;" type="boolean" variable="$exit">
            <type>boolean</type>
          </tag>
          <tag name="return" line="192" description="false to stop redirection event,&#10;  string controllers a new redirection URL or&#10;  array with the keys url, status and exit to be used by the redirect method." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="192" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="link" line="192" description="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks" link="http://book.cakephp.org/2.0/en/controllers.html#request-life-cycle-callbacks"/>
          <tag name="SuppressWarnings" line="192" description="(PHPMD.BooleanArgumentFlag)"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exit</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="207" package="NetCommons\NetCommons\Controller">
        <name>ping</name>
        <full_name>\NetCommonsAppController::ping()</full_name>
        <docblock line="207">
          <description>Keep connection alive</description>
          <long-description></long-description>
          <tag name="author" line="207" description="Jun Nishikawa" link="mailto:topaz2@m0n0m0n0.com"/>
          <tag name="return" line="207" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="218" package="NetCommons\NetCommons\Controller">
        <name>camelizeKeyRecursive</name>
        <full_name>\NetCommonsAppController::camelizeKeyRecursive()</full_name>
        <docblock line="218">
          <description>camelizeKeyRecursive</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;data to camelize&lt;/p&gt;" type="array" variable="$orig">
            <type>array</type>
          </tag>
          <tag name="return" line="218" description="camelized data" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orig</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="239" package="NetCommons\NetCommons\Controller">
        <name>throwBadRequest</name>
        <full_name>\NetCommonsAppController::throwBadRequest()</full_name>
        <docblock line="239">
          <description>throw bad request</description>
          <long-description></long-description>
          <tag name="return" line="239" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="throws" line="239" description="" type="\BadRequestException">
            <type>\BadRequestException</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="256" package="NetCommons\NetCommons\Controller">
        <name>emptyRender</name>
        <full_name>\NetCommonsAppController::emptyRender()</full_name>
        <docblock line="256">
          <description>Empty render</description>
          <long-description></long-description>
          <tag name="return" line="256" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\NetCommonsAppController</inherited_from>
      </method>
    </class>
    <source>eJytVttuGzkMfba/ggWCzjgb2w3QJ2ftbTbdNukNaZw+BUEgz9AerTXSVNLYMbb596U0VztBLtjNkyOSh+ThETW//5ElWXe4v9+FfThhSzw/PQ9t2oMRXLCMx/AeVyhUlqK08EGzFNdKLyFMrM1Gw2FEEQQwUHrR8wgq22i+SCyEUc/jwVTN7ZpphA8qlzGzXMkDOJPRYAtkXhsrLAf3hUcoDcZARtRwmSB8Pbusjp3HBcbcWM1nuYs1oOYw5wINpLmxoNEyLsFSHJupFUJU1yeVJZRBmehdY3B//2Mb8E5wuYT67z5xW7Sfa/U3RtYHGi4jrAPf4yxffOYWDgeHJa5nYRt3vV4PVEbnKtfUHsEPSz8zTLntl/8MKPcOlcNu9zjLRqOcXMNgilGuud0EBxD8sFy4n72jtkdVDx2dKGm1EgK1c68Mg9YxhVYiq/u4VErMmD6OIjQGGudyJMdCqLVxI9QcV0y40XI5Vzr1/MJcq9RPNq4AubSoJROmnuqjDA67kWCUeauOpgzAW4syNvBgo/BP3ZCkS1ElXDENTo5y4RN0snxGjMOe84ExBFu5goaUUxQZatOGYVqzzTZKUngRkDeG3U6nYbuEDmA8Kc2Bym2WW3/S+J3aVFS+vQMH8cm4sX3L09nOAKc8zQR+1CxLgm6nNcMTlWZK0kp4quKodqyLDi7wZ47GnjIZ7yqmrqtJ9YPE9kQSp8cGfhes5LoFOaNrqvEDFyQXiJggr2hZ5SC95VrCSvF4K8s8l5HXXTs67JEOOp2M9oK0o9G26YgsfA4hNwZtuGcTbvqTsqheEdgpTxs++xPaZ2wmMAxaZHQ6d93auVTB1X3arq+CiEUJfsZNcE2MbOfsTyrj0UvASPNzvvB4gb9qN0tunXQf6O44t0kPXr+GFG2i4hu8peVs2laadsqyY08lDWWbBufQnzT2sJY5qVQji9vipgir9ObGWGbRqcj8FJQwE7Txg56L6VXM3dWj/4gWGLhAelRKBPAIzT6xBQHgu69XCc2YpSBzIWBviZvnaWWrxtDFEYsOo+jb8VfQm2scjVyHYcFx0IPxGN6U9JR5SpaodK7pjQjr/+eoneAaoSgRT31T9zUgFCtsvpxeSwpujkHZ/LQktUa651ht3TN5WjT5VcUuwup8y3nFcX3i92zRecsk2IY2VHPejOkilzD9/gXKcQ4zrehVp60KRCptD3oRzABOEoyWxs8sYSaB3+qfNNzS68DBEc9kobeb03cBN/SARAnJ4O2bt7DmNNAZ0jPjvjAwHsDZvHhR/ADaXvSwKHJ1gI33N1UV2UBR8ZSxiHQZWdzIyCbavWp/srhcg3/dRpg5sTxPUS2Rh42InEhe1XLwuP0Jp0c6U8aSln79ch6YZnYT7rrR5wq7CoRauBtP8MH1C/xj8yJ3N5sm4FHpk0Opfk8ZSFw/xFoYnEn6OKAPVX9BkTavaW1Mr4sxVF8zo5E7eAYFMIAn+3YrJ2GHbc27WRQ5X43HjyNUVPznFjWaXNh7N7149vqTUizf6To8Y5YHjxddyGNnFbg3ntE6CopKAr+H6C7fdf8F6QTt2A==</source>
  </file>
  <file path="Plugin/DebugKit/View/Helper/HtmlToolbarHelper.php" generated-path="Plugin.DebugKit.View.Helper.HtmlToolbarHelper.html" hash="ab528014c5374ce6dac6977ec52e2573" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="Default">
      <extends>\ToolbarHelper</extends>
      <name>HtmlToolbarHelper</name>
      <full_name>\HtmlToolbarHelper</full_name>
      <docblock line="26">
        <description>Html Toolbar Helper</description>
        <long-description>Injects the toolbar elements into HTML layouts.
Contains helper methods for</long-description>
        <tag name="since" line="26" description="DebugKit 0.1"/>
        <tag name="package" line="26" description="Default"/>
        <tag name="inherited_from" description="\ToolbarHelper" refers="\ToolbarHelper" link="/classes/ToolbarHelper.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="33" package="Default">
        <name>$helpers</name>
        <full_name>\HtmlToolbarHelper::helpers</full_name>
        <default>array('Html', 'Form')</default>
        <docblock line="33">
          <description>helpers property</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="40" package="Default">
        <name>$settings</name>
        <full_name>\HtmlToolbarHelper::settings</full_name>
        <default>array('format' =&gt; 'html', 'forceEnable' =&gt; false)</default>
        <docblock line="40">
          <description>settings property</description>
          <long-description></long-description>
          <tag name="var" line="40" description="" type="array" variable="">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\ToolbarHelper::settings" refers="\ToolbarHelper::settings" link="/classes/ToolbarHelper.html#property_settings"/>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="32" package="Default">
        <name>$settings</name>
        <full_name>\ToolbarHelper::settings</full_name>
        <default>array()</default>
        <docblock line="32">
          <description>settings property to be overloaded. Subclasses should specify a format</description>
          <long-description></long-description>
          <tag name="var" line="32" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="39" package="Default">
        <name>$_cacheEnabled</name>
        <full_name>\ToolbarHelper::_cacheEnabled</full_name>
        <default>false</default>
        <docblock line="39">
          <description>flag for whether or not cache is enabled.</description>
          <long-description></long-description>
          <tag name="var" line="39" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Default">
        <name>makeNeatArray</name>
        <full_name>\HtmlToolbarHelper::makeNeatArray()</full_name>
        <docblock line="51">
          <description>Recursively goes through an array and makes neat HTML out of it.</description>
          <long-description></long-description>
          <tag name="param" line="51" description="&lt;p&gt;Array to make pretty.&lt;/p&gt;" type="mixed" variable="$values">
            <type>mixed</type>
          </tag>
          <tag name="param" line="51" description="&lt;p&gt;Depth to add open class&lt;/p&gt;" type="integer" variable="$openDepth">
            <type>integer</type>
          </tag>
          <tag name="param" line="51" description="&lt;p&gt;current depth.&lt;/p&gt;" type="integer" variable="$currentDepth">
            <type>integer</type>
          </tag>
          <tag name="param" line="51" description="" type="boolean" variable="$doubleEncode">
            <type>boolean</type>
          </tag>
          <tag name="return" line="51" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$openDepth</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$currentDepth</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$doubleEncode</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="131" package="Default">
        <name>message</name>
        <full_name>\HtmlToolbarHelper::message()</full_name>
        <docblock line="131">
          <description>Create an HTML message</description>
          <long-description></long-description>
          <tag name="param" line="131" description="&lt;p&gt;label content&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="param" line="131" description="&lt;p&gt;message content&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="131" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="143" package="Default">
        <name>panelStart</name>
        <full_name>\HtmlToolbarHelper::panelStart()</full_name>
        <docblock line="143">
          <description>Start a panel.</description>
          <long-description>Make a link and anchor.</long-description>
          <tag name="param" line="143" description="" type="" variable="$title"/>
          <tag name="param" line="143" description="" type="" variable="$anchor"/>
          <tag name="return" line="143" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$anchor</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="155" package="Default">
        <name>table</name>
        <full_name>\HtmlToolbarHelper::table()</full_name>
        <docblock line="155">
          <description>Create a table.</description>
          <long-description></long-description>
          <tag name="param" line="155" description="&lt;p&gt;Rows to make.&lt;/p&gt;" type="array" variable="$rows">
            <type>array</type>
          </tag>
          <tag name="param" line="155" description="&lt;p&gt;Optional header row.&lt;/p&gt;" type="array" variable="$headers">
            <type>array</type>
          </tag>
          <tag name="return" line="155" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rows</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="170" package="Default">
        <name>send</name>
        <full_name>\HtmlToolbarHelper::send()</full_name>
        <docblock line="170">
          <description>Send method</description>
          <long-description></long-description>
          <tag name="return" line="170" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="210" package="Default">
        <name>explainLink</name>
        <full_name>\HtmlToolbarHelper::explainLink()</full_name>
        <docblock line="210">
          <description>Generates a SQL explain link for a given query</description>
          <long-description></long-description>
          <tag name="param" line="210" description="&lt;p&gt;SQL query string you want an explain link for.&lt;/p&gt;" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="210" description="" type="" variable="$connection"/>
          <tag name="return" line="210" description="Rendered Html link or '' if the query is not a select/describe" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="Default">
        <name>__construct</name>
        <full_name>\ToolbarHelper::__construct()</full_name>
        <docblock line="48">
          <description>Construct the helper and make the backend helper.</description>
          <long-description></long-description>
          <tag name="param" line="48" description="" type="" variable="$View"/>
          <tag name="param" line="48" description="" type="array|string" variable="$options">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="48" description="" type="\ToolbarHelper">
            <type>\ToolbarHelper</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$View</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array|string</type>
        </argument>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="81" package="Default">
        <name>afterLayout</name>
        <full_name>\ToolbarHelper::afterLayout()</full_name>
        <docblock line="81">
          <description>afterLayout callback</description>
          <long-description></long-description>
          <tag name="param" line="81" description="" type="string" variable="$layoutFile">
            <type>string</type>
          </tag>
          <tag name="return" line="81" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$layoutFile</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="Default">
        <name>getName</name>
        <full_name>\ToolbarHelper::getName()</full_name>
        <docblock line="93">
          <description>Get the name of the backend Helper
used to conditionally trigger toolbar output</description>
          <long-description></long-description>
          <tag name="return" line="93" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="106" package="Default">
        <name>__call</name>
        <full_name>\ToolbarHelper::__call()</full_name>
        <docblock line="106">
          <description>call__</description>
          <long-description>Allows method calls on backend helper</long-description>
          <tag name="param" line="106" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="106" description="" type="mixed" variable="$params">
            <type>mixed</type>
          </tag>
          <tag name="return" line="106" description="" type="mixed|void">
            <type>mixed</type>
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="Default">
        <name>writeCache</name>
        <full_name>\ToolbarHelper::writeCache()</full_name>
        <docblock line="122">
          <description>Allows for writing to panel cache from view.</description>
          <long-description>Some panels generate all variables in the view by
necessity ie. Timer. Using this method, will allow you to replace in full
the content for a panel.</long-description>
          <tag name="param" line="122" description="&lt;p&gt;Name of the panel you are replacing.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="122" description="&lt;p&gt;Content to write to the panel.&lt;/p&gt;" type="string" variable="$content">
            <type>string</type>
          </tag>
          <tag name="return" line="122" description="Success of write." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$content</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="138" package="Default">
        <name>readCache</name>
        <full_name>\ToolbarHelper::readCache()</full_name>
        <docblock line="138">
          <description>Read the toolbar</description>
          <long-description></long-description>
          <tag name="param" line="138" description="&lt;p&gt;Name of the panel you want cached data for&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="138" description="" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="138" description="Boolean false on failure, array of data otherwise." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="Default">
        <name>getQueryLogs</name>
        <full_name>\ToolbarHelper::getQueryLogs()</full_name>
        <docblock line="163">
          <description>Gets the query logs for the given connection names.</description>
          <long-description>### Options

- explain - Whether explain links should be generated for this connection.
- cache - Whether the toolbar_state Cache should be updated.
- threshold - The threshold at which a visual 'maybe slow' flag should be added.
  results with rows/ms lower than $threshold will be marked.</long-description>
          <tag name="param" line="163" description="&lt;p&gt;Connection name to get logs for.&lt;/p&gt;" type="string" variable="$connection">
            <type>string</type>
          </tag>
          <tag name="param" line="163" description="&lt;p&gt;Options for the query log retrieval.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="163" description="Array of data to be converted into a table." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/DebugKit/View/Helper/DebugTimerHelper.php" generated-path="Plugin.DebugKit.View.Helper.DebugTimerHelper.html" hash="14442d2a0c92e88a0abe3e59084a573e" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 2.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="Default">
      <extends>\Helper</extends>
      <name>DebugTimerHelper</name>
      <full_name>\DebugTimerHelper</full_name>
      <docblock line="25">
        <description>Class DebugTimerHelper</description>
        <long-description>Tracks time and memory usage while rendering view.</long-description>
        <tag name="package" line="25" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="33" package="Default">
        <name>$_renderComplete</name>
        <full_name>\DebugTimerHelper::_renderComplete</full_name>
        <default>false</default>
        <docblock line="33">
          <description>Set to true when rendering is complete.</description>
          <long-description>Used to not add timers for rendering the toolbar.</long-description>
          <tag name="var" line="33" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="41" package="Default">
        <name>__construct</name>
        <full_name>\DebugTimerHelper::__construct()</full_name>
        <docblock line="41">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="41" description="" type="\View" variable="$View">
            <type>\View</type>
          </tag>
          <tag name="param" line="41" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$View</name>
          <default></default>
          <type>\View</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="54" package="Default">
        <name>beforeRenderFile</name>
        <full_name>\DebugTimerHelper::beforeRenderFile()</full_name>
        <docblock line="54">
          <description>Sets a timer point before rendering a file.</description>
          <long-description></long-description>
          <tag name="param" line="54" description="&lt;p&gt;The view being rendered&lt;/p&gt;" type="string" variable="$viewFile">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$viewFile</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="71" package="Default">
        <name>afterRenderFile</name>
        <full_name>\DebugTimerHelper::afterRenderFile()</full_name>
        <docblock line="71">
          <description>Stops the timer point before rendering a file.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="&lt;p&gt;The view being rendered&lt;/p&gt;" type="string" variable="$viewFile">
            <type>string</type>
          </tag>
          <tag name="param" line="71" description="&lt;p&gt;The contents of the view.&lt;/p&gt;" type="string" variable="$content">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$viewFile</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$content</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="Default">
        <name>afterLayout</name>
        <full_name>\DebugTimerHelper::afterLayout()</full_name>
        <docblock line="83">
          <description>Stop timers for rendering.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="" type="string" variable="$layoutFile">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$layoutFile</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <source>eJy1VU1v2kAQPcOvmAOVTUSM2qP7lSpRlKiJhJK0V7S2x7DF9lq7Yyiq8t87u2uME0hzSTkgvDPvzeyb5+HT13pZD6cnJ0M4gXOxwtnVLKRyDDHciVpmcIFrLFRdYkVwqUWJG6VXEC6J6ng6TRnBBJHSi7FjUPVWy8WSIEzHjg/uVU4boREuVVNlgqSqJnBdpdETkrwL7rgs3Y1MsTKYAQdRw8MS4fb6YXdsM+4wk4a0TBqLNaByyGWBBsrGEGgkISsgxolErRHSrr9KEbNEbaGzfcB+3vAacFbIagXd51C4J7LPtPqFKTmgkVWKHfACk2bxXRJ8iN63vE6Fp7ybzSZSNZ+rRvP1mH7a5plpKem0fYi49jMpp8Pht7qO44ZTw8BVe5Al6mACwa52dCOTYPzxIPEWS6W3r2ReYVF7up8SNzbY+a4QxsC+pM9sR/OgRboyQBwAUWVQulrQGLFA2Cx52Dxmaw9ZLWDNzO1Mp8P0KC3gb+J8A+3jn66NeyQgBaQbS4xVj1catk5ZF0jOMvDDmpJz2UUgssx1pw3kSvdA1nakVJEI3flsLTQkfIaicj0Oaq2IB850o7mHnreF4DPkojDY04kdzt2lpHbinNWC30mwgsLIfvcOhdZiCyODRNyNacs1CVsA8qZKrUthPk93pOGeZbKHcReOKByPWarBgLl5FcRxH/gcw6MdDPa6x7EhoSnkw0FgJ3Tn7hlM7MF8noVBZnPnK0nWHXedgN4nnGUJH/tzMiC85lAryZsp4TdP940g3BqInspkFwXHRraHS2scu1DsA+NtwMMxOy6Vr+G7s+iw4/HKyBzCES2lOf3ybJI+PuBt1OjKavP4sj4eOQ8ggkQYrHjj9gq9Ktk742V17AvLzXcuZ4KWPZYjkpKqjTfs/1T1OYQtRPaPxSLa326FU8sQHZ+EyAn1sUFMOso3GImqw1emcajh0UXwgl6F2KqGLNE/bnnjksJesu/8sNXei3Xk/bMZVhqtimKnXS/PL/A41pgqnYWHDnO7wd+o24SBE2BwXGDeG3aReoUeh38B8Pm0Rg==</source>
  </file>
  <file path="Plugin/DebugKit/View/Helper/TidyHelper.php" generated-path="Plugin.DebugKit.View.Helper.TidyHelper.html" hash="46a7dbef284722376e839892bce81e40" package="Default">
    <docblock line="0">
      <description>Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="v 1.0 (22-Jun-2009)"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="24" package="Default">
      <extends>\AppHelper</extends>
      <name>TidyHelper</name>
      <full_name>\TidyHelper</full_name>
      <docblock line="24">
        <description>TidyHelper class</description>
        <long-description>Passes html through tidy on the command line, and reports markup errors</long-description>
        <tag name="uses" line="24" description="" link="AppHelper"/>
        <tag name="since" line="24" description="v 1.0 (22-Jun-2009)"/>
        <tag name="package" line="24" description="Default"/>
        <tag name="inherited_from" description="\AppHelper" refers="\AppHelper" link="/classes/AppHelper.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="31" package="Default">
        <name>$helpers</name>
        <full_name>\TidyHelper::helpers</full_name>
        <default>array('DebugKit.Toolbar')</default>
        <docblock line="31">
          <description>helpers property</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="Default">
        <name>$results</name>
        <full_name>\TidyHelper::results</full_name>
        <default>null</default>
        <docblock line="38">
          <description>results property</description>
          <long-description></long-description>
          <tag name="var" line="38" description="&lt;p&gt;null&lt;/p&gt;" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="Default">
        <name>process</name>
        <full_name>\TidyHelper::process()</full_name>
        <docblock line="48">
          <description>Return a nested array of errors for the passed html string
Fudge the markup slightly so that the tag which is invalid is highlighted</description>
          <long-description></long-description>
          <tag name="param" line="48" description="&lt;p&gt;''&lt;/p&gt;" type="string" variable="$html">
            <type>string</type>
          </tag>
          <tag name="param" line="48" description="&lt;p&gt;''&lt;/p&gt;" type="string" variable="$out">
            <type>string</type>
          </tag>
          <tag name="return" line="48" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$html</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$out</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="92" package="Default">
        <name>report</name>
        <full_name>\TidyHelper::report()</full_name>
        <docblock line="92">
          <description>report method</description>
          <long-description>Call process if a string is passed, or no prior results exist - and return the results using
the toolbar helper to generate a nested navigatable array</long-description>
          <tag name="param" line="92" description="&lt;p&gt;null&lt;/p&gt;" type="mixed" variable="$html">
            <type>mixed</type>
          </tag>
          <tag name="return" line="92" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$html</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="119" package="Default">
        <name>tidyErrors</name>
        <full_name>\TidyHelper::tidyErrors()</full_name>
        <docblock line="119">
          <description>Run the html string through tidy, and return the (raw) errors. pass back a reference to the
normalized string so that the error messages can be linked to the line that caused them.</description>
          <long-description></long-description>
          <tag name="param" line="119" description="&lt;p&gt;''&lt;/p&gt;" type="string" variable="$in">
            <type>string</type>
          </tag>
          <tag name="param" line="119" description="&lt;p&gt;''&lt;/p&gt;" type="string" variable="$out">
            <type>string</type>
          </tag>
          <tag name="return" line="119" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$in</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$out</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="154" package="Default">
        <name>_exec</name>
        <full_name>\TidyHelper::_exec()</full_name>
        <docblock line="154">
          <description>exec method</description>
          <long-description></long-description>
          <tag name="param" line="154" description="" type="mixed" variable="$cmd">
            <type>mixed</type>
          </tag>
          <tag name="param" line="154" description="&lt;p&gt;null&lt;/p&gt;" type="mixed" variable="$out">
            <type>mixed</type>
          </tag>
          <tag name="return" line="154" description="True if successful" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$cmd</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$out</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/DebugKit/View/Helper/ToolbarHelper.php" generated-path="Plugin.DebugKit.View.Helper.ToolbarHelper.html" hash="f44475274142ecf8a309100b3329aeaa" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="Default">
      <extends>\AppHelper</extends>
      <name>ToolbarHelper</name>
      <full_name>\ToolbarHelper</full_name>
      <docblock line="25">
        <description>Provides Base methods for content specific debug toolbar helpers.</description>
        <long-description>Acts as a facade for other toolbars helpers as well.</long-description>
        <tag name="since" line="25" description="DebugKit 0.1"/>
        <tag name="package" line="25" description="Default"/>
        <tag name="inherited_from" description="\AppHelper" refers="\AppHelper" link="/classes/AppHelper.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="32" package="Default">
        <name>$settings</name>
        <full_name>\ToolbarHelper::settings</full_name>
        <default>array()</default>
        <docblock line="32">
          <description>settings property to be overloaded. Subclasses should specify a format</description>
          <long-description></long-description>
          <tag name="var" line="32" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="39" package="Default">
        <name>$_cacheEnabled</name>
        <full_name>\ToolbarHelper::_cacheEnabled</full_name>
        <default>false</default>
        <docblock line="39">
          <description>flag for whether or not cache is enabled.</description>
          <long-description></long-description>
          <tag name="var" line="39" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="Default">
        <name>__construct</name>
        <full_name>\ToolbarHelper::__construct()</full_name>
        <docblock line="48">
          <description>Construct the helper and make the backend helper.</description>
          <long-description></long-description>
          <tag name="param" line="48" description="" type="" variable="$View"/>
          <tag name="param" line="48" description="" type="array|string" variable="$options">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="48" description="" type="\ToolbarHelper">
            <type>\ToolbarHelper</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$View</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="81" package="Default">
        <name>afterLayout</name>
        <full_name>\ToolbarHelper::afterLayout()</full_name>
        <docblock line="81">
          <description>afterLayout callback</description>
          <long-description></long-description>
          <tag name="param" line="81" description="" type="string" variable="$layoutFile">
            <type>string</type>
          </tag>
          <tag name="return" line="81" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$layoutFile</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="Default">
        <name>getName</name>
        <full_name>\ToolbarHelper::getName()</full_name>
        <docblock line="93">
          <description>Get the name of the backend Helper
used to conditionally trigger toolbar output</description>
          <long-description></long-description>
          <tag name="return" line="93" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="106" package="Default">
        <name>__call</name>
        <full_name>\ToolbarHelper::__call()</full_name>
        <docblock line="106">
          <description>call__</description>
          <long-description>Allows method calls on backend helper</long-description>
          <tag name="param" line="106" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="106" description="" type="mixed" variable="$params">
            <type>mixed</type>
          </tag>
          <tag name="return" line="106" description="" type="mixed|void">
            <type>mixed</type>
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="Default">
        <name>writeCache</name>
        <full_name>\ToolbarHelper::writeCache()</full_name>
        <docblock line="122">
          <description>Allows for writing to panel cache from view.</description>
          <long-description>Some panels generate all variables in the view by
necessity ie. Timer. Using this method, will allow you to replace in full
the content for a panel.</long-description>
          <tag name="param" line="122" description="&lt;p&gt;Name of the panel you are replacing.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="122" description="&lt;p&gt;Content to write to the panel.&lt;/p&gt;" type="string" variable="$content">
            <type>string</type>
          </tag>
          <tag name="return" line="122" description="Success of write." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$content</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="138" package="Default">
        <name>readCache</name>
        <full_name>\ToolbarHelper::readCache()</full_name>
        <docblock line="138">
          <description>Read the toolbar</description>
          <long-description></long-description>
          <tag name="param" line="138" description="&lt;p&gt;Name of the panel you want cached data for&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="138" description="" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="138" description="Boolean false on failure, array of data otherwise." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="Default">
        <name>getQueryLogs</name>
        <full_name>\ToolbarHelper::getQueryLogs()</full_name>
        <docblock line="163">
          <description>Gets the query logs for the given connection names.</description>
          <long-description>### Options

- explain - Whether explain links should be generated for this connection.
- cache - Whether the toolbar_state Cache should be updated.
- threshold - The threshold at which a visual 'maybe slow' flag should be added.
  results with rows/ms lower than $threshold will be marked.</long-description>
          <tag name="param" line="163" description="&lt;p&gt;Connection name to get logs for.&lt;/p&gt;" type="string" variable="$connection">
            <type>string</type>
          </tag>
          <tag name="param" line="163" description="&lt;p&gt;Options for the query log retrieval.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="163" description="Array of data to be converted into a table." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/DebugKit/View/Helper/SimpleGraphHelper.php" generated-path="Plugin.DebugKit.View.Helper.SimpleGraphHelper.html" hash="2d8f957693bbec26539d5ae530f553cf" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 1.0"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="Default">
      <extends>\AppHelper</extends>
      <name>SimpleGraphHelper</name>
      <full_name>\SimpleGraphHelper</full_name>
      <docblock line="25">
        <description>Class SimpleGraphHelper</description>
        <long-description>Allows creation and display of extremely simple graphing elements</long-description>
        <tag name="since" line="25" description="DebugKit 1.0"/>
        <tag name="package" line="25" description="Default"/>
        <tag name="inherited_from" description="\AppHelper" refers="\AppHelper" link="/classes/AppHelper.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="32" package="Default">
        <name>$helpers</name>
        <full_name>\SimpleGraphHelper::helpers</full_name>
        <default>array('Html')</default>
        <docblock line="32">
          <description>Helpers</description>
          <long-description></long-description>
          <tag name="var" line="32" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="46" package="Default">
        <name>$_defaultSettings</name>
        <full_name>\SimpleGraphHelper::_defaultSettings</full_name>
        <default>array('max' =&gt; 100, 'width' =&gt; 350, 'valueType' =&gt; 'value')</default>
        <docblock line="46">
          <description>Default settings to be applied to each Simple Graph</description>
          <long-description>Allowed options:

- max =&gt; (int) Maximum value in the graphs
- width =&gt; (int)
- valueType =&gt; string (value, percentage)
- style =&gt; array</long-description>
          <tag name="var" line="46" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="60" package="Default">
        <name>bar</name>
        <full_name>\SimpleGraphHelper::bar()</full_name>
        <docblock line="60">
          <description>bar method</description>
          <long-description></long-description>
          <tag name="param" line="60" description="&lt;p&gt;Value to be graphed&lt;/p&gt;" type="" variable="$value"/>
          <tag name="param" line="60" description="&lt;p&gt;how much indentation&lt;/p&gt;" type="" variable="$offset"/>
          <tag name="param" line="60" description="&lt;p&gt;Graph options&lt;/p&gt;" type="array|\Graph" variable="$options">
            <type>array</type>
            <type>\Graph</type>
          </tag>
          <tag name="return" line="60" description="Html graph" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array|\Graph</type>
        </argument>
      </method>
    </class>
    <source>eJytVFFv2zYQfrZ+xcHwICmwrQTDXpw6bbGgS7EVC5qgTwMMWjpZrCWRIykrRuf/viMpKUrq7akBkojHjx+/++54b97KQgbJxUUAF/Ar2+P93X1kqhhW8JlJnsEtHrAUssLawAfFKmyF2kNUGCNXSZLSCSJYCrWLHYOQR8V3hYEojR0fPIjctEwhfBBNnTHDRT2Hj3W6fEGSD5s9l6X7g6dYa8yANlHBY4Hw6eNjH7aIz5hxbRTfNvasBpFDzkvUUDXagELDeA2GzrGtOCCkg75aGGJZdhe9e96wPz8wDXhX8noPw8/3xr2w/V6Jr5gad1DzOsXh4C1um93v3MDV8rLjdS685G3bdikkxUWjKD2iTzqcTipuFt1iSXe/sjIJgvdSrlYNQaOQPu+wlKjCOYRfOLZJt4yvx7A7U5X/iRvaqmRawwOvZIm/KSYLD+msf1+WotWQKnS+AaszoJrKkh1tNfHJKKywPIJ2BLCzDLzeAZZou1L3Jfxfu5IgPa/CXoB1pmHIGL4Nyn1guOHAFDCl2NERTmSzJTthVngUrP2md2VswC3mrCkNaDSGlGswArbUklKWnJqbVsjSotMGTtzYHIII6dp71YUXULEnWN9AxGsTwyf2xKumggMrG4Su4Z1P2qNbnpliwPuYAz8eJdq4fUJkaeSCc6B0qC0M22EH1uZYOmCf/lk/lDDUuyR3tsl8yg99xr03wWQSkvbQcl1dXs7t2qlzkZ9/8ZFBm4v6ZUg7I0+3dHeFphBZr0YyGk8w8yZ8cX+9z84JzMYgkedUDChES4OCrOc0Xyhfa/II5iT/85crCJ3xNfD16Svi0DRmGlX3Jtrq+ztftEne1KlrcFIezTqjOyHzZ/beqDimPpxMZvqVg5sK1Q6jmSm4Xty89vmZiKyaTOzjYamJBhZrIJE6dd6iNXRiIIEZVSamhGauItffIWk7UnbCRaN4PIcrT8vznsu31XoN4XMnhT6hjvJPX4A1XNprTvSYaZKd24/6Wp2T9xo8FueDzoYT/XY16nyzNVrcZPxgG3ISZnZYLPY0H93RBZXItpu94Bz+/InF0KYOAf3X0Pgu7F6Sa+tpxdSO14sSc7OCb2PVJ/l07R/tsOG8pvh03jMZbjqmzSaLvKINKaJJPH0wTNmCw0+60tTd9BDsTFD4d4Oa2s2wfb87HXfhwVfUXxG7f37VTbaR+kGe+7CKpx6aM6olfVjrT0FwCv4FdrGXIg==</source>
  </file>
  <file path="Plugin/DebugKit/View/Helper/FirePhpToolbarHelper.php" generated-path="Plugin.DebugKit.View.Helper.FirePhpToolbarHelper.html" hash="dea86d83e9a6407e339c6b0319754943" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="24" package="Default">
      <extends>\ToolbarHelper</extends>
      <name>FirePhpToolbarHelper</name>
      <full_name>\FirePhpToolbarHelper</full_name>
      <docblock line="24">
        <description>FirePHP Toolbar Helper</description>
        <long-description>Injects the toolbar elements into non-HTML layouts via FireCake.</long-description>
        <tag name="package" line="24" description="Default"/>
        <tag name="inherited_from" description="\ToolbarHelper" refers="\ToolbarHelper" link="/classes/ToolbarHelper.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="31" package="Default">
        <name>$settings</name>
        <full_name>\FirePhpToolbarHelper::settings</full_name>
        <default>array('format' =&gt; 'firePHP', 'forceEnable' =&gt; false)</default>
        <docblock line="31">
          <description>settings property</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="array" variable="">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\ToolbarHelper::settings" refers="\ToolbarHelper::settings" link="/classes/ToolbarHelper.html#property_settings"/>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="32" package="Default">
        <name>$settings</name>
        <full_name>\ToolbarHelper::settings</full_name>
        <default>array()</default>
        <docblock line="32">
          <description>settings property to be overloaded. Subclasses should specify a format</description>
          <long-description></long-description>
          <tag name="var" line="32" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="39" package="Default">
        <name>$_cacheEnabled</name>
        <full_name>\ToolbarHelper::_cacheEnabled</full_name>
        <default>false</default>
        <docblock line="39">
          <description>flag for whether or not cache is enabled.</description>
          <long-description></long-description>
          <tag name="var" line="39" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="38" package="Default">
        <name>send</name>
        <full_name>\FirePhpToolbarHelper::send()</full_name>
        <docblock line="38">
          <description>send method</description>
          <long-description></long-description>
          <tag name="return" line="38" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Default">
        <name>makeNeatArray</name>
        <full_name>\FirePhpToolbarHelper::makeNeatArray()</full_name>
        <docblock line="51">
          <description>makeNeatArray.</description>
          <long-description>wraps FireCake::dump() allowing panel elements to continue functioning</long-description>
          <tag name="param" line="51" description="" type="string" variable="$values">
            <type>string</type>
          </tag>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>message</name>
        <full_name>\FirePhpToolbarHelper::message()</full_name>
        <docblock line="62">
          <description>Create a simple message</description>
          <long-description></long-description>
          <tag name="param" line="62" description="&lt;p&gt;Label of message&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="&lt;p&gt;Message content&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="62" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="74" package="Default">
        <name>table</name>
        <full_name>\FirePhpToolbarHelper::table()</full_name>
        <docblock line="74">
          <description>Generate a table with FireCake</description>
          <long-description></long-description>
          <tag name="param" line="74" description="&lt;p&gt;Rows to print&lt;/p&gt;" type="array" variable="$rows">
            <type>array</type>
          </tag>
          <tag name="param" line="74" description="&lt;p&gt;Headers for table&lt;/p&gt;" type="array" variable="$headers">
            <type>array</type>
          </tag>
          <tag name="param" line="74" description="&lt;p&gt;Additional options and params&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="74" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rows</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="Default">
        <name>panelStart</name>
        <full_name>\FirePhpToolbarHelper::panelStart()</full_name>
        <docblock line="93">
          <description>Start a panel which is a 'Group' in FirePHP</description>
          <long-description></long-description>
          <tag name="param" line="93" description="" type="" variable="$title"/>
          <tag name="param" line="93" description="" type="" variable="$anchor"/>
          <tag name="return" line="93" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$title</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$anchor</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="102" package="Default">
        <name>panelEnd</name>
        <full_name>\FirePhpToolbarHelper::panelEnd()</full_name>
        <docblock line="102">
          <description>End a panel (Group)</description>
          <long-description></long-description>
          <tag name="return" line="102" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="48" package="Default">
        <name>__construct</name>
        <full_name>\ToolbarHelper::__construct()</full_name>
        <docblock line="48">
          <description>Construct the helper and make the backend helper.</description>
          <long-description></long-description>
          <tag name="param" line="48" description="" type="" variable="$View"/>
          <tag name="param" line="48" description="" type="array|string" variable="$options">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="48" description="" type="\ToolbarHelper">
            <type>\ToolbarHelper</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$View</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array|string</type>
        </argument>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="81" package="Default">
        <name>afterLayout</name>
        <full_name>\ToolbarHelper::afterLayout()</full_name>
        <docblock line="81">
          <description>afterLayout callback</description>
          <long-description></long-description>
          <tag name="param" line="81" description="" type="string" variable="$layoutFile">
            <type>string</type>
          </tag>
          <tag name="return" line="81" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$layoutFile</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="93" package="Default">
        <name>getName</name>
        <full_name>\ToolbarHelper::getName()</full_name>
        <docblock line="93">
          <description>Get the name of the backend Helper
used to conditionally trigger toolbar output</description>
          <long-description></long-description>
          <tag name="return" line="93" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="106" package="Default">
        <name>__call</name>
        <full_name>\ToolbarHelper::__call()</full_name>
        <docblock line="106">
          <description>call__</description>
          <long-description>Allows method calls on backend helper</long-description>
          <tag name="param" line="106" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="106" description="" type="mixed" variable="$params">
            <type>mixed</type>
          </tag>
          <tag name="return" line="106" description="" type="mixed|void">
            <type>mixed</type>
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="122" package="Default">
        <name>writeCache</name>
        <full_name>\ToolbarHelper::writeCache()</full_name>
        <docblock line="122">
          <description>Allows for writing to panel cache from view.</description>
          <long-description>Some panels generate all variables in the view by
necessity ie. Timer. Using this method, will allow you to replace in full
the content for a panel.</long-description>
          <tag name="param" line="122" description="&lt;p&gt;Name of the panel you are replacing.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="122" description="&lt;p&gt;Content to write to the panel.&lt;/p&gt;" type="string" variable="$content">
            <type>string</type>
          </tag>
          <tag name="return" line="122" description="Success of write." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$content</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="138" package="Default">
        <name>readCache</name>
        <full_name>\ToolbarHelper::readCache()</full_name>
        <docblock line="138">
          <description>Read the toolbar</description>
          <long-description></long-description>
          <tag name="param" line="138" description="&lt;p&gt;Name of the panel you want cached data for&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="138" description="" type="integer" variable="$index">
            <type>integer</type>
          </tag>
          <tag name="return" line="138" description="Boolean false on failure, array of data otherwise." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="Default">
        <name>getQueryLogs</name>
        <full_name>\ToolbarHelper::getQueryLogs()</full_name>
        <docblock line="163">
          <description>Gets the query logs for the given connection names.</description>
          <long-description>### Options

- explain - Whether explain links should be generated for this connection.
- cache - Whether the toolbar_state Cache should be updated.
- threshold - The threshold at which a visual 'maybe slow' flag should be added.
  results with rows/ms lower than $threshold will be marked.</long-description>
          <tag name="param" line="163" description="&lt;p&gt;Connection name to get logs for.&lt;/p&gt;" type="string" variable="$connection">
            <type>string</type>
          </tag>
          <tag name="param" line="163" description="&lt;p&gt;Options for the query log retrieval.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="163" description="Array of data to be converted into a table." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connection</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\ToolbarHelper</inherited_from>
      </method>
    </class>
    <source>eJytVE1v2zgQPce/Yg4GJAWO3b26TbZBmzTBJkWQGr0EQUBLI4sbiSRIytpgkf/e4YfkyOnBhxqwbHG+3ps3w09/q0pNFsfHEziGL+wZ767uUttksIR7pngBX3GLtVQNCguXmjXYSf0MaWWtWi4WOUVQgrnUm8xnkOpF801lIc0znw9+yNJ2TCNcylYUzHIpZnAt8vkoSTkY+1wu3Q3PURgsgIyoYVUh3F6v+mPncY8FN1bzdetiDcgSSl6jgaY1FjRaxgVYimNruUXIB3xCWsoyj4U+7wzu8wdpwOeai2cYPu8bN2r7nZb/Ym59oOEixyHwK67bzT/cwof5XzGv78I4b9d1c6noXLaa6FH6RfQzi4bbk/gyp9p7rVxMJudKLZctuabJSsp6zfQV1gp1MoOkLz//ybFbxPPs49uYS67RcRm53/C1c+tHzPkQV4j5ISSKKlwLx914vWx0wBrd7BngwkpSTZxcrW5voGYvsqXTLWfQ141iLiZ5zYwJpSo1YgL4n0VRGBif/j/gM2gtFxsDSlMbtX3pB2RLWJjW7MVXOFLtmloJ08H/NFjTpJS6YTaB0zNIysDWNYSOc7wQbF2jt5WsNvimMYZgQYO2kkVfkqa31QK2khejomUrcjdiPibNCP3R0XRLshCIqa24OTl7cip97M9PzmIX06RwujzF5hKuCJqWyCFb8YZUdfCsbjEbzKpuN1wETr2ySUboj14HAg0p8B2ZPXch/V51mikzCLRcFm2jCDGra9lR20AxgfVOY1I4l4Ia2uLAktz6hihGFxC4dafQ6ZbVLZrDOjUCl8bQ0LkdOC5KOdhG3L5oiqU7BAxvVI2kkzFsg7/HVbM1cbrxT7qOdr77jtECt/HXUac2HMgoBKWh3GzItk+qlpu0t80iuDG5byhQB3rWDQF03FaDZmOOfh5gqmVn4N49SDFFbOx7nwoZ3dmGNjz80gKE/O9dpQqX93lRcPePUePiEaOt8L4HCu0rpB7gbMAw25Xo1zSLa2O5Jcang+vDh0e3NryElBta7rSPfEi8a/IYI9+E7nu4BK/0JcbI8goCHGAGptytkHvtkzjLw5Q/9sCewvj5kKxPFCytMBUv7T4577XTOzbAQ5kFpcZy/7BMW9I6rF5XcULICR0k37RsVUIXbX9Lj7UPOd8eMJFXUh8mjC/na+/Ahfj9id04GNFpDP2ChqEHnnq02cF3pY+6GO7LvXLeEGq9Tn4B4KHhZA==</source>
  </file>
  <file path="Plugin/DebugKit/Console/Command/BenchmarkShell.php" generated-path="Plugin.DebugKit.Console.Command.BenchmarkShell.html" hash="28febc742916f487be22f733c62415fd" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 1.0"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="28" package="Default">
      <extends>\Shell</extends>
      <name>BenchmarkShell</name>
      <full_name>\BenchmarkShell</full_name>
      <docblock line="28">
        <description>Benchmark Shell Class</description>
        <long-description>Provides basic benchmarking of application requests
functionally similar to Apache AB</long-description>
        <tag name="since" line="28" description="DebugKit 1.0"/>
        <tag name="todo" line="28" description="Print/export time detail information"/>
        <tag name="todo" line="28" description="Export/graphing of data to .dot format for graphviz visualization"/>
        <tag name="todo" line="28" description="Make calculated results round to leading significant digit position of std dev."/>
        <tag name="package" line="28" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="Default">
        <name>main</name>
        <full_name>\BenchmarkShell::main()</full_name>
        <docblock line="35">
          <description>Main execution of shell</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="63" package="Default">
        <name>_results</name>
        <full_name>\BenchmarkShell::_results()</full_name>
        <docblock line="63">
          <description>Prints calculated results</description>
          <long-description></long-description>
          <tag name="param" line="63" description="&lt;p&gt;Array of time values&lt;/p&gt;" type="array" variable="$times">
            <type>array</type>
          </tag>
          <tag name="return" line="63" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$times</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="104" package="Default">
        <name>_variance</name>
        <full_name>\BenchmarkShell::_variance()</full_name>
        <docblock line="104">
          <description>One-pass, numerically stable calculation of population variance.</description>
          <long-description>Donald E. Knuth (1998).
The Art of Computer Programming, volume 2: Seminumerical Algorithms, 3rd edn.,
p. 232. Boston: Addison-Wesley.</long-description>
          <tag name="param" line="104" description="&lt;p&gt;Array of values&lt;/p&gt;" type="array" variable="$times">
            <type>array</type>
          </tag>
          <tag name="param" line="104" description="&lt;p&gt;If true, calculates an unbiased estimate of the population&#10;&#9;&#9;&#9;&#9;&#9;&#9;  variance from a finite sample.&lt;/p&gt;" type="boolean" variable="$sample">
            <type>boolean</type>
          </tag>
          <tag name="return" line="104" description="Variance" type="float">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$times</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$sample</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="128" package="Default">
        <name>_deviation</name>
        <full_name>\BenchmarkShell::_deviation()</full_name>
        <docblock line="128">
          <description>Calculate the standard deviation.</description>
          <long-description></long-description>
          <tag name="param" line="128" description="&lt;p&gt;Array of values&lt;/p&gt;" type="array" variable="$times">
            <type>array</type>
          </tag>
          <tag name="param" line="128" description="" type="boolean" variable="$sample">
            <type>boolean</type>
          </tag>
          <tag name="return" line="128" description="Standard deviation" type="float">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$times</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$sample</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="132" package="Default">
        <name>getOptionParser</name>
        <full_name>\BenchmarkShell::getOptionParser()</full_name>
        <docblock line="132">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="28">Print/export time detail information</todo>
      <todo line="28">Export/graphing of data to .dot format for graphviz visualization</todo>
      <todo line="28">Make calculated results round to leading significant digit position of std dev.</todo>
    </markers>
    <parse_markers>
      <error line="132" code="PPC:ERR-50008">No summary for method getOptionParser()</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Plugin/DebugKit/Console/Command/WhitespaceShell.php" generated-path="Plugin.DebugKit.Console.Command.WhitespaceShell.html" hash="bb0df46e6b20fe77d1c9afb6a21e0bc0" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 1.3"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="23" package="Default">
      <extends>\Shell</extends>
      <name>WhitespaceShell</name>
      <full_name>\WhitespaceShell</full_name>
      <docblock line="23">
        <description>Whitespace shell. Helps find and trim whitespace from files.</description>
        <long-description>Based on jperras' shell found at http://bin.cakephp.org/view/626544881</long-description>
        <tag name="since" line="23" description="DebugKit 1.3"/>
        <tag name="package" line="23" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="31" package="Default">
        <name>main</name>
        <full_name>\WhitespaceShell::main()</full_name>
        <docblock line="31">
          <description>Will check files for whitespace and notify you
of any files containing leading or trailing whitespace.</description>
          <long-description></long-description>
          <tag name="return" line="31" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="59" package="Default">
        <name>trim</name>
        <full_name>\WhitespaceShell::trim()</full_name>
        <docblock line="59">
          <description>Much like main() except files are modified. Be sure to have
backups or use version control.</description>
          <long-description></long-description>
          <tag name="return" line="59" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="86" package="Default">
        <name>getOptionParser</name>
        <full_name>\WhitespaceShell::getOptionParser()</full_name>
        <docblock line="86">
          <description>get the option parser</description>
          <long-description></long-description>
          <tag name="return" line="86" description="" type="\ConsoleOptionParser">
            <type>\ConsoleOptionParser</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJztVlFv2zYQfrZ/xaUIKtlLpHXrisJNnKYpghZrMSPtsIe6M2jpZLGWSIKk7BqL/3uPlGQ7iZcG2J6GGbAjksfv7r777qKTM5Wrbtzvd6EPF2yOozej0JY9GMAVUzyF17jAQqoShYVLzUpcSj2HMLdWDeI4oRsEEEk963kEqVaaz3ILYdLzePBBZnbJNMKlrETKLJfiCN6KJLoBkm0OWywH944nKAymQIeo4WOO8P7tx3bbWVxhyo3VfFq5uwZkBhkv0EBZGQsaLeMCLN1jU7lASDbxCWkJJWocvdweuM+/mAa8LLiYw+Zzl7gbtI+0/IKJ9RcNFwluLr7GaTX7lVt4Ev3c4HoWbuIul8tIKtqXlab0CD5u7ExccnvcLCLyfYvKuHuu1GBQkWUYXMqCCA+OIPjd8oLbVdB70W1l8kfOLRrFKDiTY1FE8AYLZYh4kQKjL9WjhOXWKtOyrMvS8v2KuapKAV8Uas1MUCOB5w+YbdOZchHtUBUvOC7jZz89++Xp0+fPn7TFu5eouJsUzJidqD94V/jVokgN1Ku/ttlxWiY5JvNGSZnUu8m4BJ14shWsZOVukOaYWDXWiRROc1zMoECWur9032pGNNLzFmgjPRJppQUsJE99uB1VTalMkFUicUqCkvDCHoXY6RwqZnM4hfPR6AUteQbhAZbKrsJDm3NzPFSMetR8Cpxd8LkHjx8DtYeSZr8BFTgOenB6ego/1h42LvbaO6drwMLgd13fgIvuw3N5ZV5w5FbgEmr1hf6q0x2du6PG6HjohHaFSaUNX2AYRP2x07OTKFnWbmRlw0cXroqO9b7XO02CRxBBC9vpUGWRJTmEBM8M4VMF27ATcujWkxnaiSsqDUAi0Zu4u557pXE2KZlN8jCI//w0FmN93fxcu1/z+YfxydiN2Jh66TBpSdmNMjg4OGhEYzaS2crEDCBwQdcXTC61HVH8TSR1KOu98YzPxsO9IR0+MJg9on1oNPRdbzrqfUUcF5yGaKNk/Jqgsk3DuJlaypRnHNMIXtFMqWjHSsjZwo/4KUvmFY0XaiMaTrBAKjt1hQtTy+LhbeSm0v9t9J9oI7i+hn+udSeIkvL6rqLrNLxDjaqgPnhInMGJe6rd/z3M/ZEHZ8NdAM+kqm4zubW403tEu3/9kcr3AMnGoL7VMhf04iQL/M2bjFqLPR1EYLtG22ZyK5ca9bKwg8EdOxdb46yxPh6yNK2NwlrERzQJNFuFLo3A1yGA0yEExKDfon/Tyu9MJmkYuJcCx4IL3PF0PqWnyiL4PqFRobGg97CFnyTU5lHQIxRfz3V33f0GrgNncg==</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/Model/ToolbarAccessTest.php" generated-path="Plugin.DebugKit.Test.Case.Model.ToolbarAccessTest.html" hash="7cb0605b8c0fe5d08ce225d9df1a854e" package="Default">
    <docblock line="0">
      <description>DebugKit ToolbarAccess Model Test case</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 1.3"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="Default">
      <extends>\CakeTestCase</extends>
      <name>ToolbarAccessTestCase</name>
      <full_name>\ToolbarAccessTestCase</full_name>
      <docblock line="26">
        <description>Test case for ToolbarAccess model</description>
        <long-description></long-description>
        <tag name="since" line="26" description="DebugKit 1.3"/>
        <tag name="package" line="26" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="33" package="Default">
        <name>$fixtures</name>
        <full_name>\ToolbarAccessTestCase::fixtures</full_name>
        <default>array('core.post')</default>
        <docblock line="33">
          <description>Included fixtures</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="40" package="Default">
        <name>setUp</name>
        <full_name>\ToolbarAccessTestCase::setUp()</full_name>
        <docblock line="40">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="40" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="50" package="Default">
        <name>tearDown</name>
        <full_name>\ToolbarAccessTestCase::tearDown()</full_name>
        <docblock line="50">
          <description>tearDown</description>
          <long-description></long-description>
          <tag name="return" line="50" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="60" package="Default">
        <name>testExplainQuery</name>
        <full_name>\ToolbarAccessTestCase::testExplainQuery()</full_name>
        <docblock line="60">
          <description>test that explain query returns arrays of query information.</description>
          <long-description></long-description>
          <tag name="return" line="60" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJytVE1v2zAMPde/gocCdoImwTDskq5Zi6TBirVb1mbnQbbpRKstuRLVtBj630f5q3EGDBswn2yKfI98fPL7D+W2DCbDYQBDWGDsNp8kwVrrPBbmIknQWrjRKeawRkuQCIuc6ZNXH1fwrnmfi3vk74iKAUzhVpQyZbBHzHVZoCJYGlHgTpt7iLZE5XQySbiCmcfabAYVgi6fjdxsCaJkUOHBnc5oJwzCUjuVCpJancCVSsY9kKw7bLE83LVMUFlMgQ/RwHqLcHO1bsM+4xZTacnI2PlaCzqDTOZooXA8p0ESUgFxnYj1I0LS9ac0Mcq4ITp/PfDPfxwDznOp7qF7fheuJ/vK6B+YUFVopUqwK+y2+mb8tsGtVOjj7na7sS45rp3h8Rh+0uTZSSFp1HyMmftAyuEkCC7Kcjp1nBuFPe+EJxC2/OPKR+HgNGj91lkKMm0OTFf45FbkPw40CZJccEWv3kPPPTI+EarUVlp1wZ9dC7yI3KVslEw+kTNoW8pHYUAYI54rhqPSxawAHLdpcFafRmGiDauiLe1PZpG+lVAgbXXaIrKnnFHwqGXaw8ycSvzi66JowN0dHZXsGEXTaRM75dAxbaUdzerbeAYKd/2Rq6yXrgVCYRZ6p/6avi046OA17JtwvHOK9ls5ZOWV0lYQC1/m/g49ODTPULPbWrTqttVxqXj1RW38f+jU0mUN/9WjNB0fr3gLjTLtuqsWo2ZVJOIcQzibQegXVrlT5FLYOraqllhrncYMVAGOZhukhSBxV92MZhf2we8gvLu8vpyvuenl7ZcbCGEMXDmaZS7P157sM//3ooZswKfhaViVs4Nc7nvdV3I0w/2hGna+VYt4rlUmNyfgeb3NOjew8dHQ2jiMpP1ez9mgD/ZdU+ctRW4xwqKkftZL8BL8AiQk5T8=</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/Model/Behavior/TimedBehaviorTest.php" generated-path="Plugin.DebugKit.Test.Case.Model.Behavior.TimedBehaviorTest.html" hash="fbea0ce7c5e0a75f79d065e420db2a03" package="Default">
    <docblock line="0">
      <description>DebugKit TimedBehavior Test Case</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 1.3"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="Default">
      <extends>\CakeTestCase</extends>
      <name>TimedBehaviorTestCase</name>
      <full_name>\TimedBehaviorTestCase</full_name>
      <docblock line="26">
        <description>Class TimedBehaviorTestCase</description>
        <long-description></long-description>
        <tag name="since" line="26" description="DebugKit 1.3"/>
        <tag name="package" line="26" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="33" package="Default">
        <name>$fixtures</name>
        <full_name>\TimedBehaviorTestCase::fixtures</full_name>
        <default>array('core.article')</default>
        <docblock line="33">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="40" package="Default">
        <name>setUp</name>
        <full_name>\TimedBehaviorTestCase::setUp()</full_name>
        <docblock line="40">
          <description>Start Test callback</description>
          <long-description></long-description>
          <tag name="return" line="40" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Default">
        <name>tearDown</name>
        <full_name>\TimedBehaviorTestCase::tearDown()</full_name>
        <docblock line="51">
          <description>End a test</description>
          <long-description></long-description>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="63" package="Default">
        <name>testFindTimers</name>
        <full_name>\TimedBehaviorTestCase::testFindTimers()</full_name>
        <docblock line="63">
          <description>Test find timers</description>
          <long-description></long-description>
          <tag name="return" line="63" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="81" package="Default">
        <name>testSaveTimers</name>
        <full_name>\TimedBehaviorTestCase::testSaveTimers()</full_name>
        <docblock line="81">
          <description>Test save timers</description>
          <long-description></long-description>
          <tag name="return" line="81" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJzFVE1P20AQPeNfMQckOwgcUdSLKRQKRK1KJQT0XG3scbyNs+vujhOiiv/e2Y3txKGt2ooKX5Kdjzfvzczum7dVUQXDvb0A9uASx/XkoyS4lzPM3mEh5lIbuEdLcCEscowLu3l/A6+b/xdiinyOaDaABG5FJTOGmWOpqxkqgpERM1xoM4WoIKqS4TDlDK4ZazMZeARdLY2cFARROvB4cKdzWgiDMNK1ygRJrfbhg0rjHkjeOVssB3ctU1QWM2AnMvcC4dOH+9bsIm4xk5aMHNcu14LOIZclWpjVrNMgCamAOE+M9Rwh7fgpTYwSN4XO1g73PaMMOCulmkL3PW1cr+03Rn/FlHyilSrFLrGb52F81OD6LvRxF4tFrCu269qwPIYfNnF2OJN00Bxirr3VymEQnFdVktQcGoVtNf87QRPuQ2eLr+U4HBwH7aZdlMLa/pq5LdtYst9LGQbprxEAHwhVZn2XOuP3rvhIPlBt0LaV5sKAMEYsPfBOVY9ZMuzmTRicrLxRmGqDsTC8BSVuqrkjNq6uSSrKcizSaYvN61QbBXMtsx56XqvUzRws0ucqGjC9nZ2Kl0VRkjS2YzbtUiHtwen5qihT8Z27xYlb4WWSSCUpCs/XnLZTDk7b9rBNEIm0WI8q9v3zaY+dmiuVgQBiNX8sglCYS71QWzrWZser5qWhqM/OO7Yk5WVti1XK9kolCecI41gbG/Vp+/bnksmTd/8FeUsjzmtRvYTdFQg3/CmHCVITm4vS4mbTWQgauvpWsyNK+WY7wT52sA+HbmWezsdxjkLem2Z8vHJ1Sc9ReYXElV+9WOWjnwzJCn5W/2FId5z3UkNynKPmGeDnznyRWQgnp3DIjxxJ4rvnTqGj6d69sc6WG5bBf50s9/cx+AGQz3aU</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/Controller/Component/ToolbarComponentTest.php" generated-path="Plugin.DebugKit.Test.Case.Controller.Component.ToolbarComponentTest.html" hash="8bee031a21c3904e9a4e706072ea9840" package="Default">
    <docblock line="0">
      <description>PHP 5</description>
      <long-description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 2.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="30" package="Default">
      <extends>\ToolbarComponent</extends>
      <name>TestToolbarComponent</name>
      <full_name>\TestToolbarComponent</full_name>
      <docblock line="30">
        <description>Class TestToolbarComponent</description>
        <long-description></long-description>
        <tag name="since" line="30" description="DebugKit 2.1"/>
        <tag name="package" line="30" description="Default"/>
        <tag name="inherited_from" description="\ToolbarComponent" refers="\ToolbarComponent" link="/classes/ToolbarComponent.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="40" package="Default">
        <name>$settings</name>
        <full_name>\ToolbarComponent::settings</full_name>
        <default>array('forceEnable' =&gt; false, 'autoRun' =&gt; true)</default>
        <docblock line="40">
          <description>Settings for the Component</description>
          <long-description>- forceEnable - Force the toolbar to display even if debug == 0. Default = false
- autoRun - Automatically display the toolbar. If set to false, toolbar display can be triggered by adding
   `?debug=true` to your URL.</long-description>
          <tag name="var" line="40" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="50" package="Default">
        <name>$controller</name>
        <full_name>\ToolbarComponent::controller</full_name>
        <default></default>
        <docblock line="50">
          <description>Controller instance reference</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$components</name>
        <full_name>\ToolbarComponent::components</full_name>
        <default>array('RequestHandler', 'Session')</default>
        <docblock line="57">
          <description>Components used by DebugToolbar</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="65" package="Default">
        <name>$_defaultPanels</name>
        <full_name>\ToolbarComponent::_defaultPanels</full_name>
        <default>array('DebugKit.History', 'DebugKit.Session', 'DebugKit.Request', 'DebugKit.SqlLog', 'DebugKit.Timer', 'DebugKit.Log', 'DebugKit.Variables', 'DebugKit.Environment', 'DebugKit.Include')</default>
        <docblock line="65">
          <description>The default panels the toolbar uses.</description>
          <long-description>which panels are used can be configured when attaching the component</long-description>
          <tag name="var" line="65" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="82" package="Default">
        <name>$panels</name>
        <full_name>\ToolbarComponent::panels</full_name>
        <default>array()</default>
        <docblock line="82">
          <description>Loaded panel objects.</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="89" package="Default">
        <name>$javascript</name>
        <full_name>\ToolbarComponent::javascript</full_name>
        <default>array('libs' =&gt; 'DebugKit./js/js_debug_toolbar')</default>
        <docblock line="89">
          <description>javascript files component will be using</description>
          <long-description></long-description>
          <tag name="var" line="89" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="98" package="Default">
        <name>$css</name>
        <full_name>\ToolbarComponent::css</full_name>
        <default>array('DebugKit./css/debug_toolbar.css')</default>
        <docblock line="98">
          <description>CSS files component will be using</description>
          <long-description></long-description>
          <tag name="var" line="98" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="105" package="Default">
        <name>$cacheKey</name>
        <full_name>\ToolbarComponent::cacheKey</full_name>
        <default>'toolbar_cache'</default>
        <docblock line="105">
          <description>CacheKey used for the cache file.</description>
          <long-description></long-description>
          <tag name="var" line="105" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="112" package="Default">
        <name>$cacheDuration</name>
        <full_name>\ToolbarComponent::cacheDuration</full_name>
        <default>'+4 hours'</default>
        <docblock line="112">
          <description>Duration of the debug kit history cache</description>
          <long-description></long-description>
          <tag name="var" line="112" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="119" package="Default">
        <name>$enabled</name>
        <full_name>\ToolbarComponent::enabled</full_name>
        <default>true</default>
        <docblock line="119">
          <description>Status whether component is enable or disable</description>
          <long-description></long-description>
          <tag name="var" line="119" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="38" package="Default">
        <name>loadPanels</name>
        <full_name>\TestToolbarComponent::loadPanels()</full_name>
        <docblock line="38">
          <description>Load Panels of Toolbar</description>
          <long-description></long-description>
          <tag name="param" line="38" description="" type="" variable="$panels"/>
          <tag name="param" line="38" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$panels</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="131" package="Default">
        <name>__construct</name>
        <full_name>\ToolbarComponent::__construct()</full_name>
        <docblock line="131">
          <description>Constructor</description>
          <long-description>If debug is off the component will be disabled and not do any further time tracking
or load the toolbar helper.</long-description>
          <tag name="param" line="131" description="" type="\ComponentCollection" variable="$collection">
            <type>\ComponentCollection</type>
          </tag>
          <tag name="param" line="131" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="return" line="131" description="" type="\ToolbarComponent">
            <type>\ToolbarComponent</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$collection</name>
          <default></default>
          <type>\ComponentCollection</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\ToolbarComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="178" package="Default">
        <name>implementedEvents</name>
        <full_name>\ToolbarComponent::implementedEvents()</full_name>
        <docblock line="178">
          <description>Register all the timing handlers for core events.</description>
          <long-description></long-description>
          <tag name="return" line="178" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\ToolbarComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="233" package="Default">
        <name>initialize</name>
        <full_name>\ToolbarComponent::initialize()</full_name>
        <docblock line="233">
          <description>Initialize callback.</description>
          <long-description>If automatically disabled, tell component collection about the state.</long-description>
          <tag name="param" line="233" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="233" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
        <inherited_from>\ToolbarComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="245" package="Default">
        <name>_makePanelList</name>
        <full_name>\ToolbarComponent::_makePanelList()</full_name>
        <docblock line="245">
          <description>Go through user panels and remove default panels as indicated.</description>
          <long-description></long-description>
          <tag name="param" line="245" description="&lt;p&gt;The list of panels ther user has added removed.&lt;/p&gt;" type="array" variable="$userPanels">
            <type>array</type>
          </tag>
          <tag name="return" line="245" description="Array of panels to use." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userPanels</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\ToolbarComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="274" package="Default">
        <name>startup</name>
        <full_name>\ToolbarComponent::startup()</full_name>
        <docblock line="274">
          <description>Component Startup</description>
          <long-description></long-description>
          <tag name="param" line="274" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="274" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
        <inherited_from>\ToolbarComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="297" package="Default">
        <name>beforeRedirect</name>
        <full_name>\ToolbarComponent::beforeRedirect()</full_name>
        <docblock line="297">
          <description>beforeRedirect callback</description>
          <long-description></long-description>
          <tag name="param" line="297" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="param" line="297" description="" type="" variable="$url"/>
          <tag name="param" line="297" description="" type="null" variable="$status">
            <type>null</type>
          </tag>
          <tag name="param" line="297" description="" type="boolean" variable="$exit">
            <type>boolean</type>
          </tag>
          <tag name="return" line="297" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$exit</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\ToolbarComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="319" package="Default">
        <name>beforeRender</name>
        <full_name>\ToolbarComponent::beforeRender()</full_name>
        <docblock line="319">
          <description>beforeRender callback</description>
          <long-description>Calls beforeRender on all the panels and set the aggregate to the controller.</long-description>
          <tag name="param" line="319" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="319" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
        <inherited_from>\ToolbarComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="371" package="Default">
        <name>loadState</name>
        <full_name>\ToolbarComponent::loadState()</full_name>
        <docblock line="371">
          <description>Load a toolbar state from cache</description>
          <long-description></long-description>
          <tag name="param" line="371" description="" type="integer" variable="$key">
            <type>integer</type>
          </tag>
          <tag name="return" line="371" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\ToolbarComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="384" package="Default">
        <name>_createCacheConfig</name>
        <full_name>\ToolbarComponent::_createCacheConfig()</full_name>
        <docblock line="384">
          <description>Create the cache config for the history</description>
          <long-description></long-description>
          <tag name="return" line="384" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\ToolbarComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="405" package="Default">
        <name>_gatherVars</name>
        <full_name>\ToolbarComponent::_gatherVars()</full_name>
        <docblock line="405">
          <description>collects the panel contents</description>
          <long-description></long-description>
          <tag name="param" line="405" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="405" description="Array of all panel beforeRender()" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
        <inherited_from>\ToolbarComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="439" package="Default">
        <name>_loadPanels</name>
        <full_name>\ToolbarComponent::_loadPanels()</full_name>
        <docblock line="439">
          <description>Load Panels used in the debug toolbar</description>
          <long-description></long-description>
          <tag name="param" line="439" description="" type="" variable="$panels"/>
          <tag name="param" line="439" description="" type="" variable="$settings"/>
          <tag name="return" line="439" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$panels</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\ToolbarComponent</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="464" package="Default">
        <name>_saveState</name>
        <full_name>\ToolbarComponent::_saveState()</full_name>
        <docblock line="464">
          <description>Save the current state of the toolbar varibles to the cache file.</description>
          <long-description></long-description>
          <tag name="param" line="464" description="&lt;p&gt;Controller instance&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="param" line="464" description="&lt;p&gt;Vars to save.&lt;/p&gt;" type="array" variable="$vars">
            <type>array</type>
          </tag>
          <tag name="return" line="464" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$vars</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\ToolbarComponent</inherited_from>
      </method>
    </class>
    <class final="false" abstract="false" namespace="" line="47" package="Default">
      <extends>\CakeTestCase</extends>
      <name>ToolbarComponentTestCase</name>
      <full_name>\ToolbarComponentTestCase</full_name>
      <docblock line="47">
        <description>ToolbarComponentTestCase Test case</description>
        <long-description></long-description>
        <tag name="package" line="47" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="54" package="Default">
        <name>$fixtures</name>
        <full_name>\ToolbarComponentTestCase::fixtures</full_name>
        <default>array('core.article')</default>
        <docblock line="54">
          <description>fixtures</description>
          <long-description></long-description>
          <tag name="var" line="54" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="61" package="Default">
        <name>$url</name>
        <full_name>\ToolbarComponentTestCase::url</full_name>
        <default></default>
        <docblock line="61">
          <description>url for test</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="68" package="Default">
        <name>setUp</name>
        <full_name>\ToolbarComponentTestCase::setUp()</full_name>
        <docblock line="68">
          <description>Start test callback</description>
          <long-description></long-description>
          <tag name="return" line="68" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="89" package="Default">
        <name>tearDown</name>
        <full_name>\ToolbarComponentTestCase::tearDown()</full_name>
        <docblock line="89">
          <description>endTest</description>
          <long-description></long-description>
          <tag name="return" line="89" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="120" package="Default">
        <name>_loadController</name>
        <full_name>\ToolbarComponentTestCase::_loadController()</full_name>
        <docblock line="120">
          <description>loading test controller</description>
          <long-description></long-description>
          <tag name="param" line="120" description="" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="return" line="120" description="" type="\Controller">
            <type>\Controller</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="136" package="Default">
        <name>testLoadPanels</name>
        <full_name>\ToolbarComponentTestCase::testLoadPanels()</full_name>
        <docblock line="136">
          <description>test Loading of panel classes</description>
          <long-description></long-description>
          <tag name="return" line="136" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="153" package="Default">
        <name>testLoadPanelsError</name>
        <full_name>\ToolbarComponentTestCase::testLoadPanelsError()</full_name>
        <docblock line="153">
          <description>Test exceptions on bad panel names</description>
          <long-description></long-description>
          <tag name="expectedException" line="153" description="PHPUnit_Framework_Error"/>
          <tag name="return" line="153" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="162" package="Default">
        <name>testLoadPluginPanels</name>
        <full_name>\ToolbarComponentTestCase::testLoadPluginPanels()</full_name>
        <docblock line="162">
          <description>test Loading of panel classes from a plugin</description>
          <long-description></long-description>
          <tag name="return" line="162" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="187" package="Default">
        <name>testLibPanels</name>
        <full_name>\ToolbarComponentTestCase::testLibPanels()</full_name>
        <docblock line="187">
          <description>test loading of vendor panels from test_app folder</description>
          <long-description></long-description>
          <tag name="return" line="187" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="210" package="Default">
        <name>testConstruct</name>
        <full_name>\ToolbarComponentTestCase::testConstruct()</full_name>
        <docblock line="210">
          <description>test construct</description>
          <long-description></long-description>
          <tag name="return" line="210" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="234" package="Default">
        <name>testInitializeCustomPanelsWithDefaults</name>
        <full_name>\ToolbarComponentTestCase::testInitializeCustomPanelsWithDefaults()</full_name>
        <docblock line="234">
          <description>test initialize w/ custom panels and defaults</description>
          <long-description></long-description>
          <tag name="return" line="234" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="251" package="Default">
        <name>testInitializeRemovingPanels</name>
        <full_name>\ToolbarComponentTestCase::testInitializeRemovingPanels()</full_name>
        <docblock line="251">
          <description>test syntax for removing panels</description>
          <long-description></long-description>
          <tag name="return" line="251" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="268" package="Default">
        <name>testDebugDisableOnInitialize</name>
        <full_name>\ToolbarComponentTestCase::testDebugDisableOnInitialize()</full_name>
        <docblock line="268">
          <description>ensure that Toolbar is not enabled when debug == 0 on initialize</description>
          <long-description></long-description>
          <tag name="return" line="268" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="282" package="Default">
        <name>testForceEnable</name>
        <full_name>\ToolbarComponentTestCase::testForceEnable()</full_name>
        <docblock line="282">
          <description>test that passing in forceEnable will enable the toolbar even if debug = 0</description>
          <long-description></long-description>
          <tag name="return" line="282" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="298" package="Default">
        <name>testAutoRunSettingFalse</name>
        <full_name>\ToolbarComponentTestCase::testAutoRunSettingFalse()</full_name>
        <docblock line="298">
          <description>Test disabling autoRunning of toolbar</description>
          <long-description></long-description>
          <tag name="return" line="298" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="310" package="Default">
        <name>testAutoRunSettingWithQueryString</name>
        <full_name>\ToolbarComponentTestCase::testAutoRunSettingWithQueryString()</full_name>
        <docblock line="310">
          <description>test autorun = false with query string param</description>
          <long-description></long-description>
          <tag name="return" line="310" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="324" package="Default">
        <name>testStartup</name>
        <full_name>\ToolbarComponentTestCase::testStartup()</full_name>
        <docblock line="324">
          <description>test startup</description>
          <long-description></long-description>
          <tag name="return" line="324" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="345" package="Default">
        <name>testCacheConfigGeneration</name>
        <full_name>\ToolbarComponentTestCase::testCacheConfigGeneration()</full_name>
        <docblock line="345">
          <description>Test that cache config generation works.</description>
          <long-description></long-description>
          <tag name="return" line="345" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="358" package="Default">
        <name>testStateSaving</name>
        <full_name>\ToolbarComponentTestCase::testStateSaving()</full_name>
        <docblock line="358">
          <description>test state saving of toolbar</description>
          <long-description></long-description>
          <tag name="return" line="358" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="377" package="Default">
        <name>testBeforeRender</name>
        <full_name>\ToolbarComponentTestCase::testBeforeRender()</full_name>
        <docblock line="377">
          <description>Test Before Render callback</description>
          <long-description></long-description>
          <tag name="return" line="377" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="412" package="Default">
        <name>testBeforeRedirect</name>
        <full_name>\ToolbarComponentTestCase::testBeforeRedirect()</full_name>
        <docblock line="412">
          <description>test that vars are gathered and state is saved on beforeRedirect</description>
          <long-description></long-description>
          <tag name="return" line="412" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="440" package="Default">
        <name>testLoadState</name>
        <full_name>\ToolbarComponentTestCase::testLoadState()</full_name>
        <docblock line="440">
          <description>test that loading state (accessing cache) works.</description>
          <long-description></long-description>
          <tag name="return" line="440" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="456" package="Default">
        <name>testHistoryUrlGenerationWithPrefixes</name>
        <full_name>\ToolbarComponentTestCase::testHistoryUrlGenerationWithPrefixes()</full_name>
        <docblock line="456">
          <description>Test that history state urls set prefix = null and admin = null so generated urls do not
adopt these params.</description>
          <long-description></long-description>
          <tag name="return" line="456" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="487" package="Default">
        <name>testAjaxToolbar</name>
        <full_name>\ToolbarComponentTestCase::testAjaxToolbar()</full_name>
        <docblock line="487">
          <description>Test that the FireCake toolbar is used on AJAX requests</description>
          <long-description></long-description>
          <tag name="return" line="487" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="500" package="Default">
        <name>testNoRequestActionInterference</name>
        <full_name>\ToolbarComponentTestCase::testNoRequestActionInterference()</full_name>
        <docblock line="500">
          <description>Test that the toolbar does not interfere with requestAction</description>
          <long-description></long-description>
          <tag name="return" line="500" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/AllTestsTest.php" generated-path="Plugin.DebugKit.Test.Case.AllTestsTest.html" hash="27a4342402582414ac7147d81e2fe411" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="Default">
      <extends>\DebugkitGroupTestCase</extends>
      <name>AllTestsTest</name>
      <full_name>\AllTestsTest</full_name>
      <docblock line="26">
        <description>AllTestsTest class</description>
        <long-description></long-description>
        <tag name="since" line="26" description="DebugKit 1.0"/>
        <tag name="package" line="26" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="33" package="Default">
        <name>suite</name>
        <full_name>\AllTestsTest::suite()</full_name>
        <docblock line="33">
          <description>Assemble Test Suite</description>
          <long-description></long-description>
          <tag name="return" line="33" description="the instance of PHPUnit_Framework_TestSuite" type="\PHPUnit_Framework_TestSuite">
            <type>\PHPUnit_Framework_TestSuite</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytUk1v00AQPce/Yg5ItSNiw4FLQ0tRSyCiSFGTnq2NPU6W2Ltmd7amQv3vzG4cR6FVT/iw8s689+Zj38dP7baNsvE4gjF8rusVWrL+gJk2cINrt/kuiZM+v/i2gA/9/7XYId9jahI4hzvRypLhD1jrtkHFdCMa7LTZQbwlas+zrGAGF0u12SRBQbePRm62BHGRBD1Y6oo6YZCLO1UKklq9hbkq0hORakgetLzcrSxQWSyBk2hgtUX4MV8dwh5xh6W0ZOTaea4FXUEla7TQOJ7XIAmpgJgn1voBoRj6U5pYJe0LXR0T/vuPY8BVLdUOhu/54k7WvjD6JxYUiFaqAgfi4d3gffqu1w1bONXtui7VLce1Mzwey2c9zmaNpEl/Sbn2P6vMosjgLycN5trXLaVR/Nxxns/mt1/yPIEUbpZ8nIVOdpK+Gu1a76trsVc8m0Yv2q6ohbWHTb86VRYF7CkdfxOq0sKLdeHPsaa12KxrhMBaOkl4KMpGcEZ5s98rSflg5NxDAzKYRCpLwrfHNnoFGxodtW7N2wRmsJOgcqrw7w7WI+KE+xqN3oQLXIDCDizW1dQH9wa9gH12crlB8tIzH46T6cCbXIqyPGb2PM4zoJ9nj2PGU/QU/QXxtEX/</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/AllDebugKitViewTest.php" generated-path="Plugin.DebugKit.Test.Case.AllDebugKitViewTest.html" hash="7ff8ed6ed59b3724b3d40c063a935353" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="Default">
      <extends>\DebugkitGroupTestCase</extends>
      <name>AllDebugKitViewTest</name>
      <full_name>\AllDebugKitViewTest</full_name>
      <docblock line="26">
        <description>DebugKitViewTestSuite class</description>
        <long-description></long-description>
        <tag name="since" line="26" description="DebugKit 1.0"/>
        <tag name="package" line="26" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="33" package="Default">
        <name>suite</name>
        <full_name>\AllDebugKitViewTest::suite()</full_name>
        <docblock line="33">
          <description>Assemble Test Suite</description>
          <long-description></long-description>
          <tag name="return" line="33" description="the instance of PHPUnit_Framework_TestSuite" type="\PHPUnit_Framework_TestSuite">
            <type>\PHPUnit_Framework_TestSuite</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytU01v00AQPce/Yg5IsSNiw4FLQ0urlkBFkaImcLU29jhZYu+a3dm6CPW/M+uvKAX1hA9Rdue9N2/Gz+8/1Ps6SGazAGbwXWIDn4x2NWzQEhTawA1u3e6LJK57yOrzCt71/6/FAfkcUhXBGdyLWuYMf8BS1xUqgqURFTbaHCDcE9VnSZIxg/vF2uyiVkHXv4zc7QnCLGr1YK0LaoRBWGqnckFSq9dwq7L4RKQYi4OWl7uTGSqLOXARDWz2CF9vN8O1R9xjLi0ZuXWea0EXUMgSLVSO5zVIQiog5omtfkDIRn9KE6vEfaPLY8E//3EMuCylOsD4/L24k7WvjP6BGbVEK1WGI3F4b/A2ftPrtls41W2aJtY132tneDyWT3qcTSpJ8/4Qc+9nq0yCwOBPJw2m2vfNpVH8usM0Xd7efUzTCGK4WfPPtHVykNQGy+fqWnSK00UwJG9w6xPoIWsniddfCmuHlb84XhK0WLgqy+dSgI+EKrfwTx/we/RwZS1W2xK77LcOht4cDGeUD/83JSkdg50evfrQSGVJeJccqxewrd9J7ba8XWAGJwsKpzKfA7AeEUbsazJ51R7gHBR/lxbLYuEvu8CeQ1edX+yQvPTSX4dTP/Y0Wozs+YXI82O9Y3OdAf1UHY4ZT8FT8AcLsk7j</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/DebugkitGroupTestCase.php" generated-path="Plugin.DebugKit.Test.Case.DebugkitGroupTestCase.html" hash="854743f93a60fdba3410d48fa4f3e26e" package="Default">
    <docblock line="0">
      <description>DebugKit Group Test Case</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="22" package="Default">
      <extends>\PHPUnit_Framework_TestSuite</extends>
      <name>DebugKitGroupTestCase</name>
      <full_name>\DebugKitGroupTestCase</full_name>
      <docblock line="22">
        <description>Class DebugKitGroupTestCase</description>
        <long-description></long-description>
        <tag name="package" line="22" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="27" package="Default">
        <name>__construct</name>
        <full_name>\DebugKitGroupTestCase::__construct()</full_name>
        <docblock line="27">
          <description>Constructor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="39" package="Default">
        <name>getTestFiles</name>
        <full_name>\DebugKitGroupTestCase::getTestFiles()</full_name>
        <docblock line="39">
          <description>Get Test Files</description>
          <long-description></long-description>
          <tag name="param" line="39" description="" type="null" variable="$directory">
            <type>null</type>
          </tag>
          <tag name="param" line="39" description="" type="null" variable="$excludes">
            <type>null</type>
          </tag>
          <tag name="return" line="39" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$directory</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$excludes</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
    </class>
    <source>eJytVE1z2zYQPUu/Yj2jiUDHlU690HXijFWnnqQzHts5tQ0HopYiYhBg8SHZrf3fswBJkXTcWz1jm8Tivd338Ihf3tdlPV0eH0/hGFa49ttPwsFHo30Nd2gdXHCLVAvl69+u4ef2+YLfI70zVyWQwg2vxYbgO5S6rlA5uDS8wr0298BK5+p0ucwJQb0W2myTyKDrRyO2pQOWJ5EPbnXh9twgXGqvNtwJrU7gSuWLEUlxKHZcge6zyFFZ3AAV0cBdifD71V23HHbc4EZYZ8TaB6wFXUAhJFqoPOk06LhQ4AjH13qHkB/mU9oRy6JtdN4Xws//KAPOpVD3cPj50biR7ddGf8PctcAocwzc7/cLXdO69obmJ/yy3WeXlXA/tS8LIn/h1XLaReJCcmsPwYi5CLHoU7Gc5v+9BfDBodrYEJ0vSrjsEIssbLn1wiH82zejY3HG506byDyp/ZqGhMKrPBgFWZZ3W1hCwMlkJvkaJZyRv4XEgEzT0ldciX+QDdZiKmyuDbItuizOzGauFDZJklMiqunAlEvTYYuGPJSfDzN+RNd8GJchO10mCM0rUF5KmG2EiU0ff6jgQy79JqLgnALnjQJuDH8cqbWOUjEQTfOGhrEf69lJc2A96WnblcYYUQATNov0A1TSVCezJvpnTX8WLZgUZA/PSxh24ZYUtaAXqKxCs0XWLJ6ARVmk6YtpB+M1PpOV9GcoPvNK/O07nriJ7G4U9NqOzobqJkPRrzRmkTnpezesLenAw5YVnp4GBxebkRWy5q58zbw1ZfuaatT8Q12naS39VqiwwubdhzBPYAHzMNKcHla34S18E81btGJ0mJS5zGAteY4s7l7dnsTfvttiMGPv04wubFKBe7rhcm+s2OGVQ8NpV/efjaqrjuNQHko8jZyvxGNf0hq5RzfHux2XYsOiH0FIcPUoFoRdaceSUWCIJtbuMTLFQkDEh0ltcJtV3OXk3VOw689wIc2e5qQ8oBN486bZ2ZCFs8myy6vPv2bZoXQ0Yvn6QcrF2/c9UXBQ0c3TZCzpKQcBG0bhSKjuywmAUYgjsNPXGvXHX0FjeIzn2mQ8Hs4kKld0D7L+xNr0N9h4uzxPvwM2YVNs</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/TestFireCake.php" generated-path="Plugin.DebugKit.Test.Case.TestFireCake.html" hash="45bc96b1a8b23bd8b70f3ec5ee8f78ab" package="Default">
    <docblock line="0">
      <description>Common test objects used in DebugKit tests</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="Default">
      <extends>\FireCake</extends>
      <name>TestFireCake</name>
      <full_name>\TestFireCake</full_name>
      <docblock line="26">
        <description>TestFireCake class allows for testing of FireCake</description>
        <long-description>Provides most of the functionality offered by FirePHPCore
Interoperates with FirePHP extension for Firefox

For more information see: http://www.firephp.org/</long-description>
        <tag name="since" line="26" description="DebugKit 0.1"/>
        <tag name="package" line="26" description="Default"/>
        <tag name="inherited_from" description="\FireCake" refers="\FireCake" link="/classes/FireCake.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="33" package="Default">
        <name>$sentHeaders</name>
        <full_name>\TestFireCake::sentHeaders</full_name>
        <default>array()</default>
        <docblock line="33">
          <description>Headers that were sent</description>
          <long-description></long-description>
          <tag name="var" line="33" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="48" package="Default">
        <name>$options</name>
        <full_name>\FireCake::options</full_name>
        <default>array()</default>
        <docblock line="48">
          <description>Options for FireCake.</description>
          <long-description></long-description>
          <tag name="see" line="48" description="and setOptions();" link="\_defaultOptions"/>
          <tag name="var" line="48" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="55" package="Default">
        <name>$_defaultOptions</name>
        <full_name>\FireCake::_defaultOptions</full_name>
        <default>array('maxObjectDepth' =&gt; 10, 'maxArrayDepth' =&gt; 20, 'useNativeJsonEncode' =&gt; true, 'includeLineNumbers' =&gt; true)</default>
        <docblock line="55">
          <description>Default Options used in CakeFirePhp</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="67" package="Default">
        <name>$_levels</name>
        <full_name>\FireCake::_levels</full_name>
        <default>array('log' =&gt; 'LOG', 'info' =&gt; 'INFO', 'warn' =&gt; 'WARN', 'error' =&gt; 'ERROR', 'dump' =&gt; 'DUMP', 'trace' =&gt; 'TRACE', 'exception' =&gt; 'EXCEPTION', 'table' =&gt; 'TABLE', 'groupStart' =&gt; 'GROUP_START', 'groupEnd' =&gt; 'GROUP_END')</default>
        <docblock line="67">
          <description>Message Levels for messages sent via FirePHP</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="85" package="Default">
        <name>$_version</name>
        <full_name>\FireCake::_version</full_name>
        <default>'0.2.1'</default>
        <docblock line="85">
          <description>Version number for X-Wf-1-Plugin-1 HTML header</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="92" package="Default">
        <name>$_messageIndex</name>
        <full_name>\FireCake::_messageIndex</full_name>
        <default>1</default>
        <docblock line="92">
          <description>internal messageIndex counter</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="99" package="Default">
        <name>$_encodedObjects</name>
        <full_name>\FireCake::_encodedObjects</full_name>
        <default>array()</default>
        <docblock line="99">
          <description>stack of objects encoded by stringEncode()</description>
          <long-description></long-description>
          <tag name="var" line="99" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="106" package="Default">
        <name>$_methodIndex</name>
        <full_name>\FireCake::_methodIndex</full_name>
        <default>array('info', 'log', 'warn', 'error', 'table', 'trace')</default>
        <docblock line="106">
          <description>methodIndex to include in tracebacks when using includeLineNumbers</description>
          <long-description></long-description>
          <tag name="var" line="106" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="113" package="Default">
        <name>$_enabled</name>
        <full_name>\FireCake::_enabled</full_name>
        <default>true</default>
        <docblock line="113">
          <description>FireCake output status</description>
          <long-description></long-description>
          <tag name="var" line="113" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="41" package="Default">
        <name>_sendHeader</name>
        <full_name>\TestFireCake::_sendHeader()</full_name>
        <docblock line="41">
          <description>Send header</description>
          <long-description></long-description>
          <tag name="param" line="41" description="" type="" variable="$name"/>
          <tag name="param" line="41" description="" type="" variable="$value"/>
          <tag name="inherited_from" description="\FireCake::_sendHeader()" refers="\FireCake::_sendHeader()" link="/classes/FireCake.html#method__sendHeader"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="51" package="Default">
        <name>detectClientExtension</name>
        <full_name>\TestFireCake::detectClientExtension()</full_name>
        <docblock line="51">
          <description>Skip client detection as headers are not being sent.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="Always true" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\FireCake::detectClientExtension()" refers="\FireCake::detectClientExtension()" link="/classes/FireCake.html#method_detectClientExtension"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="60" package="Default">
        <name>reset</name>
        <full_name>\TestFireCake::reset()</full_name>
        <docblock line="60">
          <description>Reset FireCake</description>
          <long-description></long-description>
          <tag name="return" line="60" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="121" package="Default">
        <name>getInstance</name>
        <full_name>\FireCake::getInstance()</full_name>
        <docblock line="121">
          <description>get Instance of the singleton</description>
          <long-description></long-description>
          <tag name="param" line="121" description="&lt;p&gt;Class instance to store in the singleton. Used with subclasses and Tests.&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="121" description="" type="\FireCake">
            <type>\FireCake</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="142" package="Default">
        <name>setOptions</name>
        <full_name>\FireCake::setOptions()</full_name>
        <docblock line="142">
          <description>setOptions</description>
          <long-description></long-description>
          <tag name="param" line="142" description="&lt;p&gt;Array of options to set.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="142" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="156" package="Default">
        <name>detectClientExtension</name>
        <full_name>\FireCake::detectClientExtension()</full_name>
        <docblock line="156">
          <description>Return boolean based on presence of FirePHP extension</description>
          <long-description></long-description>
          <tag name="return" line="156" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="172" package="Default">
        <name>getUserAgent</name>
        <full_name>\FireCake::getUserAgent()</full_name>
        <docblock line="172">
          <description>Get the Current UserAgent</description>
          <long-description></long-description>
          <tag name="return" line="172" description="UserAgent string of active client connection" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="182" package="Default">
        <name>disable</name>
        <full_name>\FireCake::disable()</full_name>
        <docblock line="182">
          <description>Disable FireCake output
All subsequent output calls will not be run.</description>
          <long-description></long-description>
          <tag name="return" line="182" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="192" package="Default">
        <name>enable</name>
        <full_name>\FireCake::enable()</full_name>
        <docblock line="192">
          <description>Enable FireCake output</description>
          <long-description></long-description>
          <tag name="return" line="192" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="204" package="Default">
        <name>log</name>
        <full_name>\FireCake::log()</full_name>
        <docblock line="204">
          <description>Convenience wrapper for LOG messages</description>
          <long-description></long-description>
          <tag name="param" line="204" description="&lt;p&gt;Message to log&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="204" description="&lt;p&gt;Label for message (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="return" line="204" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="215" package="Default">
        <name>warn</name>
        <full_name>\FireCake::warn()</full_name>
        <docblock line="215">
          <description>Convenience wrapper for WARN messages</description>
          <long-description></long-description>
          <tag name="param" line="215" description="&lt;p&gt;Message to log&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="215" description="&lt;p&gt;Label for message (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="return" line="215" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="226" package="Default">
        <name>info</name>
        <full_name>\FireCake::info()</full_name>
        <docblock line="226">
          <description>Convenience wrapper for INFO messages</description>
          <long-description></long-description>
          <tag name="param" line="226" description="&lt;p&gt;Message to log&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="226" description="&lt;p&gt;Label for message (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="return" line="226" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="237" package="Default">
        <name>error</name>
        <full_name>\FireCake::error()</full_name>
        <docblock line="237">
          <description>Convenience wrapper for ERROR messages</description>
          <long-description></long-description>
          <tag name="param" line="237" description="&lt;p&gt;Message to log&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="237" description="&lt;p&gt;Label for message (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="return" line="237" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="248" package="Default">
        <name>table</name>
        <full_name>\FireCake::table()</full_name>
        <docblock line="248">
          <description>Convenience wrapper for TABLE messages</description>
          <long-description></long-description>
          <tag name="param" line="248" description="&lt;p&gt;Label for message (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="param" line="248" description="&lt;p&gt;Message to log&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="248" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="259" package="Default">
        <name>dump</name>
        <full_name>\FireCake::dump()</full_name>
        <docblock line="259">
          <description>Convenience wrapper for DUMP messages</description>
          <long-description></long-description>
          <tag name="param" line="259" description="&lt;p&gt;Unique label for message&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="param" line="259" description="&lt;p&gt;Message to log&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="259" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="269" package="Default">
        <name>trace</name>
        <full_name>\FireCake::trace()</full_name>
        <docblock line="269">
          <description>Convenience wrapper for TRACE messages</description>
          <long-description></long-description>
          <tag name="param" line="269" description="&lt;p&gt;Label for message (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="return" line="269" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="280" package="Default">
        <name>group</name>
        <full_name>\FireCake::group()</full_name>
        <docblock line="280">
          <description>Convenience wrapper for GROUP messages
Messages following the group call will be nested in a group block</description>
          <long-description></long-description>
          <tag name="param" line="280" description="&lt;p&gt;Label for group (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="return" line="280" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="306" package="Default">
        <name>fb</name>
        <full_name>\FireCake::fb()</full_name>
        <docblock line="306">
          <description>fb - Send messages with FireCake to FirePHP</description>
          <long-description>Much like FirePHP's fb() this method can be called with various parameter counts
fb($message) - Just send a message defaults to LOG type
fb($message, $type) - Send a message with a specific type
fb($message, $label, $type) - Send a message with a custom label and type.</long-description>
          <tag name="param" line="306" description="&lt;p&gt;Message to output. For other parameters see usage above.&lt;/p&gt;" type="mixed" variable="$message">
            <type>mixed</type>
          </tag>
          <tag name="return" line="306" description="Success" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="424" package="Default">
        <name>_parseTrace</name>
        <full_name>\FireCake::_parseTrace()</full_name>
        <docblock line="424">
          <description>Parse a debug backtrace</description>
          <long-description></long-description>
          <tag name="param" line="424" description="&lt;p&gt;Debug backtrace output&lt;/p&gt;" type="array" variable="$trace">
            <type>array</type>
          </tag>
          <tag name="param" line="424" description="" type="" variable="$messageName"/>
          <tag name="return" line="424" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$trace</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$messageName</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="452" package="Default">
        <name>_escapeTrace</name>
        <full_name>\FireCake::_escapeTrace()</full_name>
        <docblock line="452">
          <description>Fix a trace for use in output</description>
          <long-description></long-description>
          <tag name="param" line="452" description="&lt;p&gt;Trace to fix&lt;/p&gt;" type="mixed" variable="$trace">
            <type>mixed</type>
          </tag>
          <tag name="return" line="452" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$trace</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="473" package="Default">
        <name>stringEncode</name>
        <full_name>\FireCake::stringEncode()</full_name>
        <docblock line="473">
          <description>Encode non string objects to string.</description>
          <long-description>Filter out recursion, so no errors are raised by json_encode or $javascript-&gt;object()</long-description>
          <tag name="param" line="473" description="&lt;p&gt;Object or variable to encode to string.&lt;/p&gt;" type="mixed" variable="$object">
            <type>mixed</type>
          </tag>
          <tag name="param" line="473" description="&lt;p&gt;Current Depth in object chains.&lt;/p&gt;" type="integer" variable="$objectDepth">
            <type>integer</type>
          </tag>
          <tag name="param" line="473" description="&lt;p&gt;Current Depth in array chains.&lt;/p&gt;" type="integer" variable="$arrayDepth">
            <type>integer</type>
          </tag>
          <tag name="return" line="473" description="" type="string|Object">
            <type>string</type>
            <type>Object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$objectDepth</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$arrayDepth</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="535" package="Default">
        <name>_sendHeader</name>
        <full_name>\FireCake::_sendHeader()</full_name>
        <docblock line="535">
          <description>Send Headers - write headers.</description>
          <long-description></long-description>
          <tag name="param" line="535" description="" type="" variable="$name"/>
          <tag name="param" line="535" description="" type="" variable="$value"/>
          <tag name="return" line="535" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\FireCake</inherited_from>
      </method>
    </class>
    <source>eJytVEtv2kAQPuNfMQckDCJ2c+iFvhLRoqCmEiLcqipa22N7i7272l3joCj/vbN+AY2US+sT9s73mG9m+fhF5coLZzMPZrCUZSkFWDQWZPQbY2ugMpgAF/AVoyr7zm1zaqjaATZ3G3jf/V6yPdK7b8spLGDLFE8IdMBCqhKFhZVmJdZS78HPrVWLMIwJQeqB1Nm0lVdHzbPcgh9PGz54kKmtmUZYyUokzHIp5rAWcXBBkg6HPZeju+cxCueeDlHDLkf4sd71n13FFhNurOZR5bAGZAopL9BAWVECGi2jxi3hWCQPCPHgT0hLLEEndHM6cM9/bANuCi72MDyvg7uIfaOlG1oDNFzEOACH6b0LrjveJoVL3rquA6nou6w0tUf0YVdnwpLbq+4lIO2/ogw971apxYK2xfiTFdfofE3mMOmVg3seTaYfvH7XdrRGfR3EBTMGWFHI2kAqdbNkXGRuIn1RH/abjYVeS3XBjk8WRWIGJngeXNwho90wNGRmoUaakKFd7aUOTAPTmh0b5pGqIkoAxq6kB35qC/yzzh5IDPLmvCdSjJYfxoJuwPn7gRUVdtxaWhodbWtaidjtADySTtLq+A103iGm1MBoNH60OXcG+rYWiwztWhjLKCBnqK+5+nzm+GdD9YtwLRmVvZys77miYXB3XxN0hpwRZrp2aESUEC0/ROim42iHS0DXpdICIikLZAJui5odKVg9dNimR/bo7py6bGWWjeY3NyhDX/22xY7ScVzY3KJB+2oxuuqD5Mmbitqh/X8K8Xzsp4LHEo1hGa7p/+aJSq4b0y/eHzx2swA=</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/View/Helper/ToolbarHelperTest.php" generated-path="Plugin.DebugKit.Test.Case.View.Helper.ToolbarHelperTest.html" hash="a369c692aec4b427a4b756a5e8c23f5f" package="Default">
    <docblock line="0">
      <description>Toolbar facade tests.</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="30" package="Default">
      <extends>\Helper</extends>
      <name>MockBackendHelper</name>
      <full_name>\MockBackendHelper</full_name>
      <docblock line="30">
        <description>Class MockBackendHelper</description>
        <long-description></long-description>
        <tag name="since" line="30" description="DebugKit 0.1"/>
        <tag name="package" line="30" description="Default"/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="" line="37" package="Default">
      <extends>\CakeTestCase</extends>
      <name>ToolbarHelperTestCase</name>
      <full_name>\ToolbarHelperTestCase</full_name>
      <docblock line="37">
        <description>Class ToolbarHelperTestCase</description>
        <long-description></long-description>
        <tag name="package" line="37" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="44" package="Default">
        <name>$fixtures</name>
        <full_name>\ToolbarHelperTestCase::fixtures</full_name>
        <default>array('core.post')</default>
        <docblock line="44">
          <description>Fixtures</description>
          <long-description></long-description>
          <tag name="var" line="44" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="51" package="Default">
        <name>setUp</name>
        <full_name>\ToolbarHelperTestCase::setUp()</full_name>
        <docblock line="51">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="83" package="Default">
        <name>tearDown</name>
        <full_name>\ToolbarHelperTestCase::tearDown()</full_name>
        <docblock line="83">
          <description>tearDown</description>
          <long-description></long-description>
          <tag name="return" line="83" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="94" package="Default">
        <name>testCacheWrite</name>
        <full_name>\ToolbarHelperTestCase::testCacheWrite()</full_name>
        <docblock line="94">
          <description>test cache writing for views.</description>
          <long-description></long-description>
          <tag name="return" line="94" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="105" package="Default">
        <name>testOnlyWritingToFirstElement</name>
        <full_name>\ToolbarHelperTestCase::testOnlyWritingToFirstElement()</full_name>
        <docblock line="105">
          <description>Ensure that the cache writing only affects the
top most level of the history stack. As this is where the current request is stored.</description>
          <long-description></long-description>
          <tag name="return" line="105" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="125" package="Default">
        <name>testCacheRead</name>
        <full_name>\ToolbarHelperTestCase::testCacheRead()</full_name>
        <docblock line="125">
          <description>test cache reading for views</description>
          <long-description></long-description>
          <tag name="return" line="125" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="144" package="Default">
        <name>testNoCacheConfigPresent</name>
        <full_name>\ToolbarHelperTestCase::testNoCacheConfigPresent()</full_name>
        <docblock line="144">
          <description>Test that reading/writing doesn't work with no cache config.</description>
          <long-description></long-description>
          <tag name="return" line="144" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="160" package="Default">
        <name>testGetQueryLogs</name>
        <full_name>\ToolbarHelperTestCase::testGetQueryLogs()</full_name>
        <docblock line="160">
          <description>ensure that getQueryLogs works and writes to the cache so the history panel will
work.</description>
          <long-description></long-description>
          <tag name="return" line="160" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/View/Helper/FirePhpToolbarHelperTest.php" generated-path="Plugin.DebugKit.Test.Case.View.Helper.FirePhpToolbarHelperTest.html" hash="68b4bc1cd1c2400a5ffbd2e3b8858bfa" package="Default">
    <docblock line="0">
      <description>Toolbar Abstract Helper Test Case</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="35" package="Default">
      <extends>\CakeTestCase</extends>
      <name>FirePhpToolbarHelperTestCase</name>
      <full_name>\FirePhpToolbarHelperTestCase</full_name>
      <docblock line="35">
        <description>Class FirePhpToolbarHelperTestCase</description>
        <long-description></long-description>
        <tag name="since" line="35" description="DebugKit 0.1"/>
        <tag name="package" line="35" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="42" package="Default">
        <name>setUp</name>
        <full_name>\FirePhpToolbarHelperTestCase::setUp()</full_name>
        <docblock line="42">
          <description>setUp</description>
          <long-description></long-description>
          <tag name="return" line="42" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="63" package="Default">
        <name>setupBeforeClass</name>
        <full_name>\FirePhpToolbarHelperTestCase::setupBeforeClass()</full_name>
        <docblock line="63">
          <description>Start test - switch view paths</description>
          <long-description></long-description>
          <tag name="return" line="63" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="77" package="Default">
        <name>tearDownAfterClass</name>
        <full_name>\FirePhpToolbarHelperTestCase::tearDownAfterClass()</full_name>
        <docblock line="77">
          <description>End Test</description>
          <long-description></long-description>
          <tag name="return" line="77" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="86" package="Default">
        <name>tearDown</name>
        <full_name>\FirePhpToolbarHelperTestCase::tearDown()</full_name>
        <docblock line="86">
          <description>TearDown</description>
          <long-description></long-description>
          <tag name="return" line="86" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="97" package="Default">
        <name>testMakeNeatArray</name>
        <full_name>\FirePhpToolbarHelperTestCase::testMakeNeatArray()</full_name>
        <docblock line="97">
          <description>Test neat array (dump)creation</description>
          <long-description></long-description>
          <tag name="return" line="97" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="109" package="Default">
        <name>testAfterLayout</name>
        <full_name>\FirePhpToolbarHelperTestCase::testAfterLayout()</full_name>
        <docblock line="109">
          <description>Test afterlayout element rendering</description>
          <long-description></long-description>
          <tag name="return" line="109" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="136" package="Default">
        <name>testPanelStart</name>
        <full_name>\FirePhpToolbarHelperTestCase::testPanelStart()</full_name>
        <docblock line="136">
          <description>test starting a panel</description>
          <long-description></long-description>
          <tag name="return" line="136" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="147" package="Default">
        <name>testPanelEnd</name>
        <full_name>\FirePhpToolbarHelperTestCase::testPanelEnd()</full_name>
        <docblock line="147">
          <description>test ending a panel</description>
          <long-description></long-description>
          <tag name="return" line="147" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJytV1tv2zYUfrZ/BR8KSMp8WTbsRV2zek7aBG1Sw3G3AW1h0BJta5FJlqTiBkP/+84hqZtjNw2a5CHS0bl+5zuHzO9/yLXsDo+OuuSIzITIF1SR0UIbRRNDzlkumSIzpg0ZU81ACfUm5xPym38e0xsG76HZRCQmUyqzlJyyW5YLuWHckFeKbthWqBsSro2R8XCYgAUEHQi1iqwHIe9UtlobEiaR9UeuxdJsqWLklSh4Sk0meI9c8GTQcrKsPpa+0N3bLGFcs5TAR8x9zcjlxawUo8aUpRkUmC0KtNVELMkyy5kmmwLqVMzQjBMDdnQhbhlJqvy4MOBl4AO9rD/gzxOWQV7mGb8h1c994FqwT5T4lyXGGuqMJ6wyPGWLYvUmM+TnwbH3a1Fo+91utwMhQS4KBeWB+6HX08NNZvr+ZQCxd6A8Gna7zyQ1a/LCZZQXq4zHMYrCoIweRM+73ZGUcVyAyzD4K2PboEfcX/jW+DQW3CiR50yhQuNtRw1iTZmW0D2GilfMIMV2tKaiMM4RPmV8tfPd092RHNXKhAeY2dDL2zavMsUma/ndpl3FPhdgMxfYF4fVgAQ4UQE8nF7jG45W/YbfMAwWiZgH4MUP6DinWpN9OaBRY0K/zYNhN3nQEWFfDOOptn2thP9VqWhm3ssyGsxMoTi5FVnqWNGRxQJoQ5YFT5DZTj2MwEGnI2EkuIljL4PyOh3XqzhOBOfA5TAY4qPv/jCm1gsCuk8VGkCVondhUNsE5MUJCSRdMY398Q6sEKZf5vQOxWuxYUHUcgvZaYZOXWLPzDrT/ZOaikB1zrakFoReZcXMpUhuSnZ+LrDHUc9pNwgbunjeCvniXeJjeC9eU7lc0E6/1bew4a+CA0qShXFVVwxtdz2I9gTon7SVfMB9fGnGbSG2BGXcWGBbsjmOAaMLrg0FcoYtorvWNiVxrBgwBPnR+VrR7tpQZYjBA6lP9DYzyZrcIoQ4WfpBPkJos0PLQv4JKxhi4kh4htqBXxRZnoYOSZB13L5CLGtZZzx6czYfv5uezS+uxm/fn57NJ6PZeWOyb3Ymu37DIuZUylriAuBbzzofTSYodlu1Vqv26kHDR2VVG4NtBIQ1qmBt1M94ai8B+/E9DK9hVJ2KLR8tYbQOANyONPMWD0W6F2Jnt9Ri5FXBkUltjvfI/lF7mIP2OsQZNY4IJEyLjYwSxewh/ojMtbmEIFdgN7KMciXsjuKmpeO4d9z7pfern1xIscgNjNnO4PVPNEBxzihcg3RjxqELTJkZNDnMtMXFefgQ/NP/e9k/dr/Bp9ZicEZTtmJfJCzHjx9sBh8/4e49ZH8fNIo8gNULe4mwnNkLIvQLEoTT+VHAWUa9tZ7asNXd7J/gYpi420kwEdrowANmd3O5yOttDYVJVBtmkNKXIGpqAwRpOqFwm9Vh+6ioNQqVR/uMYDM198iWLZQQfi0DgFa4sHeApmTNVClpZtWzU/p8f8XQzrKWModDqr4NAE3KlhT6FxxQxIsPYlXk+QGNRGzgZINmop4/eqrjpjpnDhrDgaCKxNj9AHesQ4rjKkr/BG7vqxUcPoHG86CQ1Q3g/kw/yt3CHgVTS8kHfe4OXtO7Y3V4f4SuBE7RmZ2iFDHqGwcQTlKI/5bwVeRdP8F8z30J3mF7Ju0xahGEoITCGcpZ/v13OjSfoIk9lA9sL1krBJd3xOrjzWtzN7efgh8pEkYLBpEDlK+n795P5tez0XQ2+KmM893LyQIBHfsxGOCU/BYI9vMTFnt2dfpggV+7/wO7svo5</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/View/Helper/HtmlToolbarHelperTest.php" generated-path="Plugin.DebugKit.Test.Case.View.Helper.HtmlToolbarHelperTest.html" hash="8f346e30c6efd6c21c41d91a93054719" package="Default">
    <docblock line="0">
      <description>Toolbar HTML Helper Test Case</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="33" package="Default">
      <extends>\CakeTestCase</extends>
      <name>HtmlToolbarHelperTestCase</name>
      <full_name>\HtmlToolbarHelperTestCase</full_name>
      <docblock line="33">
        <description>Class HtmlToolbarHelperTestCase</description>
        <long-description></long-description>
        <tag name="since" line="33" description="DebugKit 0.1"/>
        <tag name="package" line="33" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="38" package="Default">
        <name>setupBeforeClass</name>
        <full_name>\HtmlToolbarHelperTestCase::setupBeforeClass()</full_name>
        <docblock line="38">
          <description>Setup Test Case</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="51" package="Default">
        <name>tearDownAfterClass</name>
        <full_name>\HtmlToolbarHelperTestCase::tearDownAfterClass()</full_name>
        <docblock line="51">
          <description>Tear Down Test Case</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="60" package="Default">
        <name>setUp</name>
        <full_name>\HtmlToolbarHelperTestCase::setUp()</full_name>
        <docblock line="60">
          <description>Setup</description>
          <long-description></long-description>
          <tag name="return" line="60" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="81" package="Default">
        <name>tearDown</name>
        <full_name>\HtmlToolbarHelperTestCase::tearDown()</full_name>
        <docblock line="81">
          <description>Tear Down</description>
          <long-description></long-description>
          <tag name="return" line="81" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="Default">
        <name>testMakeNeatArrayBasic</name>
        <full_name>\HtmlToolbarHelperTestCase::testMakeNeatArrayBasic()</full_name>
        <docblock line="91">
          <description>Test makeNeatArray with basic types.</description>
          <long-description></long-description>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="134" package="Default">
        <name>testMakeNeatArrayCyclicObjects</name>
        <full_name>\HtmlToolbarHelperTestCase::testMakeNeatArrayCyclicObjects()</full_name>
        <docblock line="134">
          <description>Test that cyclic references can be printed.</description>
          <long-description></long-description>
          <tag name="return" line="134" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="165" package="Default">
        <name>testMakeNeatArray</name>
        <full_name>\HtmlToolbarHelperTestCase::testMakeNeatArray()</full_name>
        <docblock line="165">
          <description>Test Neat Array formatting</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="287" package="Default">
        <name>testMakeNeatArrayObjects</name>
        <full_name>\HtmlToolbarHelperTestCase::testMakeNeatArrayObjects()</full_name>
        <docblock line="287">
          <description>Test makeNeatArray with object inputs.</description>
          <long-description></long-description>
          <tag name="return" line="287" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="313" package="Default">
        <name>testInjectToolbar</name>
        <full_name>\HtmlToolbarHelperTestCase::testInjectToolbar()</full_name>
        <docblock line="313">
          <description>Test injection of toolbar</description>
          <long-description></long-description>
          <tag name="return" line="313" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="340" package="Default">
        <name>testJavascriptInjection</name>
        <full_name>\HtmlToolbarHelperTestCase::testJavascriptInjection()</full_name>
        <docblock line="340">
          <description>test injection of javascript</description>
          <long-description></long-description>
          <tag name="return" line="340" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="367" package="Default">
        <name>testMessage</name>
        <full_name>\HtmlToolbarHelperTestCase::testMessage()</full_name>
        <docblock line="367">
          <description>test message creation</description>
          <long-description></long-description>
          <tag name="return" line="367" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="383" package="Default">
        <name>testTable</name>
        <full_name>\HtmlToolbarHelperTestCase::testTable()</full_name>
        <docblock line="383">
          <description>Test Table generation</description>
          <long-description></long-description>
          <tag name="return" line="383" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="409" package="Default">
        <name>testStartPanel</name>
        <full_name>\HtmlToolbarHelperTestCase::testStartPanel()</full_name>
        <docblock line="409">
          <description>test starting a panel</description>
          <long-description></long-description>
          <tag name="return" line="409" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="424" package="Default">
        <name>testPanelEnd</name>
        <full_name>\HtmlToolbarHelperTestCase::testPanelEnd()</full_name>
        <docblock line="424">
          <description>test ending a panel</description>
          <long-description></long-description>
          <tag name="return" line="424" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="434" package="Default">
        <name>testExplainLink</name>
        <full_name>\HtmlToolbarHelperTestCase::testExplainLink()</full_name>
        <docblock line="434">
          <description>Test generating links for query explains.</description>
          <long-description></long-description>
          <tag name="return" line="434" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/AllDebugKitTest.php" generated-path="Plugin.DebugKit.Test.Case.AllDebugKitTest.html" hash="888358beec70f81f8f7a4eabc8e38d4b" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="Default">
      <extends>\DebugKitGroupTestCase</extends>
      <name>AllDebugKitTest</name>
      <full_name>\AllDebugKitTest</full_name>
      <docblock line="26">
        <description>DebugKitViewTestSuite class</description>
        <long-description></long-description>
        <tag name="since" line="26" description="DebugKit 1.0"/>
        <tag name="package" line="26" description="Default"/>
        <tag name="inherited_from" description="\DebugKitGroupTestCase" refers="\DebugKitGroupTestCase" link="/classes/DebugKitGroupTestCase.html"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="33" package="Default">
        <name>suite</name>
        <full_name>\AllDebugKitTest::suite()</full_name>
        <docblock line="33">
          <description>Assemble Test Suite</description>
          <long-description></long-description>
          <tag name="return" line="33" description="the instance of PHPUnit_Framework_TestSuite" type="\PHPUnit_Framework_TestSuite">
            <type>\PHPUnit_Framework_TestSuite</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="27" package="Default">
        <name>__construct</name>
        <full_name>\DebugKitGroupTestCase::__construct()</full_name>
        <docblock line="27">
          <description>Constructor</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\DebugKitGroupTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="39" package="Default">
        <name>getTestFiles</name>
        <full_name>\DebugKitGroupTestCase::getTestFiles()</full_name>
        <docblock line="39">
          <description>Get Test Files</description>
          <long-description></long-description>
          <tag name="param" line="39" description="" type="null" variable="$directory">
            <type>null</type>
          </tag>
          <tag name="param" line="39" description="" type="null" variable="$excludes">
            <type>null</type>
          </tag>
          <tag name="return" line="39" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$directory</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$excludes</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\DebugKitGroupTestCase</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytU01P20AQPce/Yg6VsKPGbg+9EKAgIG1UKkUk9Gqt7XGyxN519wODEP+9s+uPKK3EqT5Y3pn33nzs89nXZtcEyXQawBR+cWzhm5K2gQ1qA6VUcIOZ3f7ghvIOsvq+gi/99zXbI51DU0dwCves4QXBn7CSTY3CwEKxGlup9hDujGlOkyQnBtWLpdpGXkE2L4pvdwbCPPJ6sJalaZlCWEgrCma4FB9hKfL4SKQck4OWk7vjOQqNBVASFWx2CD+XmyHsEPdYcG0Uz6zjapAllLxCDbWleRUaxgUY4rFMPiHkY39CGlKJ+0KXh4R7/uMYcFlxsYfx+XdxR2tfKfmIufFEzUWOI3G4N/gcf+p1/RaOddu2jWVDcWkVjUfySY/TSc3NrD/EVPuvVSZBoPC35QpT6eoWXAm67jBNF8u72zSNIIabNb1OfCd7bryxnK+uWad4Mg8G5w3dOgc6yNpyQ+uvmNbDyt8dLwk8Fq6qash4B+OzQVHoEX7UA7yO9a+0xjqrsPO9rz7UJVNYJZzxHwQ36Wjq9NCnMwwX2jDXIVnqHazvddLYjDYLxCBXQWlF7jwA2iHCiPqaTD74A5yDoH9SY1XOXbAz6zl02dnFFv2cCxcOo/nIm12wojhkOh7lCdDP0+GI8Ra8BX8AhzBLPw==</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/AllDebugKitWithoutViewTest.php" generated-path="Plugin.DebugKit.Test.Case.AllDebugKitWithoutViewTest.html" hash="aaeaa72991708c88dd290ee8cf5b8d71" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="Default">
      <extends>\DebugkitGroupTestCase</extends>
      <name>AllDebugKitWithoutViewTest</name>
      <full_name>\AllDebugKitWithoutViewTest</full_name>
      <docblock line="26">
        <description>DebugKitViewTestSuite class</description>
        <long-description></long-description>
        <tag name="since" line="26" description="DebugKit 1.0"/>
        <tag name="package" line="26" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="33" package="Default">
        <name>suite</name>
        <full_name>\AllDebugKitWithoutViewTest::suite()</full_name>
        <docblock line="33">
          <description>Assemble Test Suite</description>
          <long-description></long-description>
          <tag name="return" line="33" description="the instance of PHPUnit_Framework_TestSuite" type="\PHPUnit_Framework_TestSuite">
            <type>\PHPUnit_Framework_TestSuite</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytU01v00AQPce/Yg5IsaPGhgOXhpZWLYGKIkVNgKO1scfJEnvX7M7WINT/zqy/ogDqiT1Y3p03b97Mvn3ztt7XQTKbBTCDLxIbeG+0q2GDlqDQBm5x63YfJXHcQ1YfVvC6/78RB+R9SFUE5/Agapkz/BFLXVeoCJZGVNhoc4BwT1SfJ0nGGVwv1mYXtQy6/mnkbk8QZlHLB2tdUCMMwlI7lQuSWp3BncriE5JiDA5cnu5eZqgs5sBBNLDZI3y62wzHHvGAubRk5Nb5XAu6gEKWaKFy3K9BElIBcZ7Y6keEbNSnNDFL3Be6Ogb8+o9twFUp1QHG9ffgTsa+MvobZtQmWqkyHBOHe4NX8cuet53CKW/TNLGu+Vw7w+0xfdLjbFJJmvebmGv/McokCAx+d9Jgqn3dXBrF1x2m6fLu/l2aRhDD7Zo/01bJQVJrLO+rG9ExThfB4LxBrXegh6ydJB5/KawdRv5se0nQYuG6LIfIV0l77UZGwB+EKrfwTznwa5RybS1W2xK7J9AKGSSwP5xR/g18VpLS0d/pUbL3jlSWhBfL7noG28qe1G7LQwbOYINB4VTm7QDWI8KIdU0mL9oNXIDi52mxLBb+sPPtBXTR+eUOyVMv/XGoXFmewdQ3P40WI8f8UuT5EdVxcJwBfW8djjOegqfgNwTyU94=</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/Lib/DebugTimerTest.php" generated-path="Plugin.DebugKit.Test.Case.Lib.DebugTimerTest.html" hash="d8639a9f5c77488c14e48cd135bae4d7" package="Default">
    <docblock line="0">
      <description>DebugTimer Test Case</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="debug_kit 2.0"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="Default">
      <extends>\CakeTestCase</extends>
      <name>DebugTimerTest</name>
      <full_name>\DebugTimerTest</full_name>
      <docblock line="26">
        <description>Class DebugTimerTest</description>
        <long-description></long-description>
        <tag name="since" line="26" description="debug_kit 2.0"/>
        <tag name="package" line="26" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="33" package="Default">
        <name>tearDown</name>
        <full_name>\DebugTimerTest::tearDown()</full_name>
        <docblock line="33">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="33" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="42" package="Default">
        <name>testTimers</name>
        <full_name>\DebugTimerTest::testTimers()</full_name>
        <docblock line="42">
          <description>Start Timer test</description>
          <long-description></long-description>
          <tag name="return" line="42" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="66" package="Default">
        <name>testAnonymousTimers</name>
        <full_name>\DebugTimerTest::testAnonymousTimers()</full_name>
        <docblock line="66">
          <description>test timers with no names.</description>
          <long-description></long-description>
          <tag name="return" line="66" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="91" package="Default">
        <name>testNestedAnonymousTimers</name>
        <full_name>\DebugTimerTest::testNestedAnonymousTimers()</full_name>
        <docblock line="91">
          <description>Assert that nested anonymous timers don't get mixed up.</description>
          <long-description></long-description>
          <tag name="return" line="91" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="119" package="Default">
        <name>testRepeatTimers</name>
        <full_name>\DebugTimerTest::testRepeatTimers()</full_name>
        <docblock line="119">
          <description>test that calling start with the same name does not overwrite previous timers
and instead adds new ones.</description>
          <long-description></long-description>
          <tag name="return" line="119" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="144" package="Default">
        <name>testRequestTime</name>
        <full_name>\DebugTimerTest::testRequestTime()</full_name>
        <docblock line="144">
          <description>testRequestTime</description>
          <long-description></long-description>
          <tag name="return" line="144" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="156" package="Default">
        <name>testGetTimers</name>
        <full_name>\DebugTimerTest::testGetTimers()</full_name>
        <docblock line="156">
          <description>test getting all the set timers.</description>
          <long-description></long-description>
          <tag name="return" line="156" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJytV11P4zgUfaa/4ko7q6SotKUjpKEMw6CZYRYtyyJA2geEKjdxWy+JnbEdAlrx3/facdKkTWmLqBBtbN9zP3yOr/P5JJklrd7ubgt24Tsdp9NbFlMJt1Rp+EYUxXEzdfXHFRy439/IA8VnX8dtGMI1SViIpo80EklMuYYzSWKaCfkA/kzrZNjrBWiBfrpCTtsWQSTPkk1nGvygbfHgRkx0RiSFM5HykGgmeAfOedCtgUzKyQLLwF2wgHJFQ8BJE/uMwl/nt8WwWXFNQ6a0ZOPU2CoQE5iwiCqIU8xTUk0YB412ZCweKQRlfFxoROk6R1/nE+bzjmnA14jxByg/y4Wrlf1Kin9poK2hYjygpWFo9nD0wDQMun0HbMtQB86yrCsSHBepxPwQv+fWqV7M9J576KLzhVr2Wq3TJBkOU1zqe3PKeB3In/5kunvBxl77qFUQ61tElKrQy7CrKOnr4fdaQYMt0CdNeahsTcyAYSr8V/rTlMjvIuMQUz0TYeEK9zmVHB4FCy30TpKOMVGYpDwwm1Ha+W0E29mZOx0OgwjnfMxp56V0c6OJ1JALRldS2sCP0tZMOU8f9IypvS+YKZX6VqbUr/pWxo/vGat9U2azGPAvfkYWSyyHmfHaJridVEWUJv5Bv9+3z+uQRVIA5/YfaEQSo6VjqC50o+apXN8MXwJ8gX633z8wYWyT4WAhQ0UDwcNqinmG+1ulN9gyvYFLjz4lqDO73pwfiVA+anD09w0GmTHuteH4+BgmJEL+nWDCh4eHQ/N1cAS9HvzDeCgyBdoKREEiacCUYQDmNibhmgIeQ+k/L+KKkn1s2IvzEI9iFpDIfzVPNO1AA1POTEYNtcyk4NO8li8VuRkOWj5DxvQMT03g2ANUdytFnHLBn2ORqq2lUaP+YAvqO1K42OucmFJ9GkV+A31//EqxPP6gg40i5dp39jkYnkvlgAV/oM+IjP/rw3je00uBM6PRxfnlj9EI9uBT7su0piKYqQkFmRdfET3zR6Oz8wtcu0TO3KYLHhhc/OqC87BUCRd9ad0BE2KRpj3MEC8P9a5cdb9C7XbdnWe+vHun+UFD/Ru8Lrm485AzikwRqU6wUwuBDZpgR0amYMqkIEtBvFBwTwNuGsTsydwFku3Yd2lx34mD+xtS8M2GFe5utHADljdv2MdFkuPBhx1bSDzKcDPSeIx8weuUA/9dubPINibr48IQskbzQ7siP9hXLPl0tLEQGovA8GcZ812TOuoB3pu8XDO1EsADGu9+2H30PKc3eFlI0ropOlqzn3rxqlJcn8RiXddYLwa3QuJzJxWdV42L4aauYCSLXQidTsHyPe8Q5q6tsEXYPoHapXkZ8PItM8k0Na3ykc3lbQAJFo1xVClB+Yd4++M0A8G3bTPXNKGkfv1q6Kt489DFtfbW3UZM0DlHTEZek263QHI0WAG1hGW6bwnV4Gtx/l0Vb9u+Y6ydrJB1jSrmQd2vOrFWGMBvg9zmlc5Tw6/SsxGsWGBumHZwYDYjwtyoPGnWuSvKKg50lj15i31sPWCFCibOBlAX/or+mNP6V+peK7aUQ2lXdDtJVRrp/QXeyOrC2qtGnmRuNVhn1bCThb/PUIA0nCRIW20OEVOjvGbFnXM7+f+ka7W/7kWrWXyVt6J6ZVa+6LwCVLx/vO1muiThlcIbTSJBKtrLkyiFsqFiS6s5Pzc3HCwbvrReWv8DfIrs5g==</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/Lib/DebugKitDebuggerTest.php" generated-path="Plugin.DebugKit.Test.Case.Lib.DebugKitDebuggerTest.html" hash="cff17fbf30480da3746ca46cb8464c7e" package="Default">
    <docblock line="0">
      <description>DebugKit Debugger Test Case File</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="debug_kit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="27" package="Default">
      <extends>\CakeTestCase</extends>
      <name>DebugKitDebuggerTest</name>
      <full_name>\DebugKitDebuggerTest</full_name>
      <docblock line="27">
        <description>Test case for the DebugKitDebugger</description>
        <long-description></long-description>
        <tag name="since" line="27" description="debug_kit 0.1"/>
        <tag name="package" line="27" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="34" package="Default">
        <name>setUp</name>
        <full_name>\DebugKitDebuggerTest::setUp()</full_name>
        <docblock line="34">
          <description>setUp method</description>
          <long-description></long-description>
          <tag name="return" line="34" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="46" package="Default">
        <name>tearDown</name>
        <full_name>\DebugKitDebuggerTest::tearDown()</full_name>
        <docblock line="46">
          <description>tearDown method</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="58" package="Default">
        <name>testOutput</name>
        <full_name>\DebugKitDebuggerTest::testOutput()</full_name>
        <docblock line="58">
          <description>test output switch to firePHP</description>
          <long-description></long-description>
          <tag name="return" line="58" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJytVN9v2zYQfo7/insoQDmopXVAX5gma5AfS7BuCRwXGzAMBi2dJM6SqJGnuMXQ/71HSrJrZ81WYPILebzvO353H/3mh7ZsJ8nx8QSO4RJXXfGTpn5RoIUFOoIL5RCudYWc49Pub+7h9bC+UGvkfUT1FCTMVaszRj9iZdoaG4Jrq2rcGLuGqCRqZZKkjOCasbHFNDCY9qPVRUkQpdPABw8mp42yXNR0TaZIm+Yl3DZpvEeSbw9HLk/3TqfYOMyAD72AEuHn28UY9hlzzLQjq1edxzowOeQszkHdsViLpHQDxDi1Mo8I6fZ+jSFmiYdCb3cH/vsfZcDbSjdr2H5PG7fX9ntr/sSUAtDpJsUtMPNjXK55oN/Frwbi0IZ94s1mE5uW46azrI/5kyHPJbWm2bCJufhBL4+TyeS8baXsODcSo39G+4iXsI3F7/RKTE8mFv/qtMWl8RcNMqqu0I2UraJyRyGmEIPw9hO8uHzwO+/D3c6fXTOT5/BXEyeT0cfBtal3bW5sGOXhzcYZPt+vZJJWyrkn6MCPHwibzAUNPhBeyd/bOzik9y3USKXJxmrsrc428Gh0FtiP2m7FzYW8a1JvgB4UTZnm6Khl5zQk5RA74dCFaXJddBal3FhNGInKFNzkXFUOQ8YLKrWbneXcF28XOIWxRVIWSLeNI8WKo73uiQD9MiKlRa4bqn7aSiJU9tJsmm9VNeIOhO3Cz2kj2/XSDocgZVoxw0LXaF30nyXw5ExHbUfgNprSEsiAbxe/pm8Q5OgukAySdnfaa/KT97ATEpJVll0bWyuKRL5ircpa9TESqaqqlUrXAk7P4AmJlP66V9Ya5jsg7JWdu8DHZ3zIPViiT16WqskqtJEI2Jt+J2UfHviCh3JjID4FIfyOu0iG3+s+R8/9gg+7ithlB76bnTke8Q0q/gt2fWqfwK8JLc2xuPrQRiL5cX73/n75sDifLxLWP/D9Ln6b/ZrPXvU/8ceXzj4guJrP7+Zfg37/LLSvffXL5dfgrwP8X6b7D1PdDaGkuhK9AT9NPgOlIlSR</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/Lib/Panel/LogPanelTest.php" generated-path="Plugin.DebugKit.Test.Case.Lib.Panel.LogPanelTest.html" hash="8da79e458c6880cfa5ccaa7dca07c9c2" package="Default">
    <docblock line="0">
      <description>DebugKit Log Panel Test Cases</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="Default">
      <extends>\CakeTestCase</extends>
      <name>LogPanelTest</name>
      <full_name>\LogPanelTest</full_name>
      <docblock line="25">
        <description>Class LogPanelTest</description>
        <long-description></long-description>
        <tag name="package" line="25" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="32" package="Default">
        <name>setUp</name>
        <full_name>\LogPanelTest::setUp()</full_name>
        <docblock line="32">
          <description>set up</description>
          <long-description></long-description>
          <tag name="return" line="32" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="42" package="Default">
        <name>testConstructor</name>
        <full_name>\LogPanelTest::testConstructor()</full_name>
        <docblock line="42">
          <description>Test that logging configs are created.</description>
          <long-description></long-description>
          <tag name="return" line="42" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="53" package="Default">
        <name>testBeforeRender</name>
        <full_name>\LogPanelTest::testBeforeRender()</full_name>
        <docblock line="53">
          <description>testBeforeRender</description>
          <long-description></long-description>
          <tag name="return" line="53" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJytU8GO0zAQPW+/Yg4rNa22ifbAJQtloWjFikVUpZwQqtxkkpqmtmWPNyC0/844TdKWIgESOcX2m+d5b56fvzQbM0jG4wGM4Q2ufflOEjzoEuZCYQVLdAQz4dAxIGDmb+fwrP2fiS3yOqLdCFJYCCNz5njESpsdKoI7K3ZYa7uFaENk0iTJuIIvjLUtRw2DNt+tLDcEUTZq+OCjLqgWFuFOe5ULklpdwb3K4hOSoj/suALdg8xQOcyBD9HCcoPw/n7ZbQfEAnPpyMq1D7UOdAGFrNDBzrNQiySkAuI6sdaPCFnfn9LELHF70e3hIHz/UQbcVlJtof/OjTuxfW71V8yoLWxknhbWdR1rw/vaW+6f65MW55KdpEm7iJn8F6/GyWDwypg09YyNhpyJJhLDKxh2QYkf5DrZ745ujsEzrcjqqkIb4EcrhnVpm1XCOehoQ9D25iaD7OwE8Buhyl2jPWyESMKPnsshgTfdcHiM3ip41DJv+C6MX7NOKLzKgtcB/slEIya4uDA8JEVp2u7d8NYlbaSbTE3zAl6AwrpvpgE89fc2vdFGEFS6LKUqOTGqkKWDMPrMoiDM47/ui4IyjiVZn5G2bYeXFp2viDsJ6rmTNN3f4i3mJx2zbWgDQ4gxjyEPc1ptJa24vZVpx9fynRcurcco40hS1GFgCtfNwAsRWggq0TqokeXxkwCR5yxweOpKkPGas21xgeEh/pP+48LOgKwPUDuOQ6KCfob0ztRWEkZDtFY32QsTGu4xBx+PBzyZro9vPLrr3KB7Ho1QGX4oov4N8K1/9FTyb+/pZMouutHv5hacv+7J9sDPrZYve4+fBj8B3pzUIw==</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/Lib/Panel/SqlLogPanelTest.php" generated-path="Plugin.DebugKit.Test.Case.Lib.Panel.SqlLogPanelTest.html" hash="796b90fe8cc4bbbcf175ddf0ae199e36" package="Default">
    <docblock line="0">
      <description>SqlLogPanelTest</description>
      <long-description>Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 2.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="Default">
      <extends>\CakeTestCase</extends>
      <name>SqlLogPanelTest</name>
      <full_name>\SqlLogPanelTest</full_name>
      <docblock line="25">
        <description>Class SqlLogPanelTest</description>
        <long-description></long-description>
        <tag name="since" line="25" description="DebugKit 2.1"/>
        <tag name="package" line="25" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="32" package="Default">
        <name>$fixtures</name>
        <full_name>\SqlLogPanelTest::fixtures</full_name>
        <default>array('core.article')</default>
        <docblock line="32">
          <description>fixtures.</description>
          <long-description></long-description>
          <tag name="var" line="32" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="39" package="Default">
        <name>setUp</name>
        <full_name>\SqlLogPanelTest::setUp()</full_name>
        <docblock line="39">
          <description>Setup</description>
          <long-description></long-description>
          <tag name="return" line="39" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="49" package="Default">
        <name>testBeforeRender</name>
        <full_name>\SqlLogPanelTest::testBeforeRender()</full_name>
        <docblock line="49">
          <description>test the parsing of source list.</description>
          <long-description></long-description>
          <tag name="return" line="49" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJytU01P3DAQPZNfMYeVkiA2ET2GsmW7qCoqSCvYnhCHfEwSl2Cn9pgFIf57x0k2G6pS9dCcnJk3b2aenz9+auvWiw8PPTiEm5/NparWqcRmg4Y45KIr1T5rUdUEQR7CKr1HuFElbVON8EVZWaQklDyCC5lHENREbRLHOcPKMRkpXYUD3aXIURosgJOoYVMjXF1sdmGHuMZCGNIis67WgCqhFA0aeLCGQCOlQgJxXZqpR4R8nE8qYpZoaHS2T7jvP64BZ42Q9zB+EzCr6VAd//rrOqCHENZa/cCcukIjZI5j4TlmtvomCD5ExwNvp8Jb3u12G6mW48pqXo/p4wFn4gdB8+En4t6/SRl73rJtk8QyNPAn1+sfgb9rHl2KLO6j4ckUf6WKHtkf3iZXSpJWTYPaISZ/DNv5adWkxrzjqr8rEXv5n2oBnwhlYTp5XWCVslgvY8NSPJHVaEYLPKYaUq3T547zoLUZiwWzHQ5O+2zg50pjlGr2T4PTFW6QbLtjY+tZLeFRieINX2ll7vwBBul7G4Q80cFBy8aSlCRD7IRDM6qFmS9atw63lridLthhXsfO5PZ1Lmci1qpyz6B3ADT8PKJ/HsoRfWYXa7xG9+SG+WbLflsepLuna6zcq3tOEiEFBf5yL8YePF+UQhaBXwptiC9+VE8WonusPpwudtGhJhJFFz0OQycsk+WjWwYV9vYZhOK7sQ1xdirZfJFN15jQDLw9lndBTRttMRB8pGBgu3VjSsz7Oe9u9zuxo88znqEU1V04van3qajmU62awu8rXr1X7xdcTq5M</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/Lib/FireCakeTest.php" generated-path="Plugin.DebugKit.Test.Case.Lib.FireCakeTest.html" hash="4b8fbf8f8799d1d10519956c22733f91" package="Default">
    <docblock line="0">
      <description>CakeFirePHP Test Case</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="27" package="Default">
      <extends>\CakeTestCase</extends>
      <name>FireCakeTestCase</name>
      <full_name>\FireCakeTestCase</full_name>
      <docblock line="27">
        <description>Test Case For FireCake</description>
        <long-description></long-description>
        <tag name="since" line="27" description="DebugKit 0.1"/>
        <tag name="package" line="27" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="Default">
        <name>setUp</name>
        <full_name>\FireCakeTestCase::setUp()</full_name>
        <docblock line="36">
          <description>setup test</description>
          <long-description>Fill FireCake with TestFireCake instance.</long-description>
          <tag name="return" line="36" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="46" package="Default">
        <name>tearDown</name>
        <full_name>\FireCakeTestCase::tearDown()</full_name>
        <docblock line="46">
          <description>Reset the FireCake counters and headers.</description>
          <long-description></long-description>
          <tag name="return" line="46" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="57" package="Default">
        <name>testGetInstanceOverride</name>
        <full_name>\FireCakeTestCase::testGetInstanceOverride()</full_name>
        <docblock line="57">
          <description>Test getInstance cheat.</description>
          <long-description>If this fails the rest of the test is going to fail too.</long-description>
          <tag name="return" line="57" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="70" package="Default">
        <name>testSetOptions</name>
        <full_name>\FireCakeTestCase::testSetOptions()</full_name>
        <docblock line="70">
          <description>Test setOptions</description>
          <long-description></long-description>
          <tag name="return" line="70" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="80" package="Default">
        <name>testLog</name>
        <full_name>\FireCakeTestCase::testLog()</full_name>
        <docblock line="80">
          <description>Test Log()</description>
          <long-description></long-description>
          <tag name="return" line="80" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="98" package="Default">
        <name>testInfo</name>
        <full_name>\FireCakeTestCase::testInfo()</full_name>
        <docblock line="98">
          <description>Test info()</description>
          <long-description></long-description>
          <tag name="return" line="98" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="116" package="Default">
        <name>testWarn</name>
        <full_name>\FireCakeTestCase::testWarn()</full_name>
        <docblock line="116">
          <description>Test info()</description>
          <long-description></long-description>
          <tag name="return" line="116" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="134" package="Default">
        <name>testError</name>
        <full_name>\FireCakeTestCase::testError()</full_name>
        <docblock line="134">
          <description>Test error()</description>
          <long-description></long-description>
          <tag name="return" line="134" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="152" package="Default">
        <name>testDump</name>
        <full_name>\FireCakeTestCase::testDump()</full_name>
        <docblock line="152">
          <description>Test dump()</description>
          <long-description></long-description>
          <tag name="return" line="152" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="163" package="Default">
        <name>testTable</name>
        <full_name>\FireCakeTestCase::testTable()</full_name>
        <docblock line="163">
          <description>Test table() generation</description>
          <long-description></long-description>
          <tag name="return" line="163" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="178" package="Default">
        <name>testStringEncode</name>
        <full_name>\FireCakeTestCase::testStringEncode()</full_name>
        <docblock line="178">
          <description>TestStringEncoding</description>
          <long-description></long-description>
          <tag name="return" line="178" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="194" package="Default">
        <name>testStringEncodeObjects</name>
        <full_name>\FireCakeTestCase::testStringEncodeObjects()</full_name>
        <docblock line="194">
          <description>Test object encoding</description>
          <long-description></long-description>
          <tag name="return" line="194" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="208" package="Default">
        <name>testTrace</name>
        <full_name>\FireCakeTestCase::testTrace()</full_name>
        <docblock line="208">
          <description>Test trace()</description>
          <long-description></long-description>
          <tag name="return" line="208" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="223" package="Default">
        <name>testEnableDisable</name>
        <full_name>\FireCakeTestCase::testEnableDisable()</full_name>
        <docblock line="223">
          <description>Test enabling and disabling of FireCake output</description>
          <long-description></long-description>
          <tag name="return" line="223" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="238" package="Default">
        <name>testMultiLineOutput</name>
        <full_name>\FireCakeTestCase::testMultiLineOutput()</full_name>
        <docblock line="238">
          <description>Test correct line continuation markers on multi line headers.</description>
          <long-description></long-description>
          <tag name="return" line="238" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="254" package="Default">
        <name>testIncludeLineNumbers</name>
        <full_name>\FireCakeTestCase::testIncludeLineNumbers()</full_name>
        <docblock line="254">
          <description>Test inclusion of line numbers</description>
          <long-description></long-description>
          <tag name="return" line="254" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="267" package="Default">
        <name>testGroup</name>
        <full_name>\FireCakeTestCase::testGroup()</full_name>
        <docblock line="267">
          <description>Test Group messages</description>
          <long-description></long-description>
          <tag name="return" line="267" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="282" package="Default">
        <name>testFbParameterParsing</name>
        <full_name>\FireCakeTestCase::testFbParameterParsing()</full_name>
        <docblock line="282">
          <description>Test fb() parameter parsing</description>
          <long-description></long-description>
          <tag name="return" line="282" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="304" package="Default">
        <name>testIncorrectMessageType</name>
        <full_name>\FireCakeTestCase::testIncorrectMessageType()</full_name>
        <docblock line="304">
          <description>Test defaulting to log if incorrect message type is used</description>
          <long-description></long-description>
          <tag name="return" line="304" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="315" package="Default">
        <name>testDetectClientExtension</name>
        <full_name>\FireCakeTestCase::testDetectClientExtension()</full_name>
        <docblock line="315">
          <description>Test DetectClientExtension.</description>
          <long-description></long-description>
          <tag name="return" line="315" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="333" package="Default">
        <name>testNonNativeEncoding</name>
        <full_name>\FireCakeTestCase::testNonNativeEncoding()</full_name>
        <docblock line="333">
          <description>Test of Non Native JSON encoding.</description>
          <long-description></long-description>
          <tag name="return" line="333" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/DebugKit/Test/Case/Lib/DebugMemoryTest.php" generated-path="Plugin.DebugKit.Test.Case.Lib.DebugMemoryTest.html" hash="dbde4b59525fd1ddf43ce4c9674352a1" package="Default">
    <docblock line="0">
      <description>DebugKit Debug Memory Test Cases</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="24" package="Default">
      <extends>\CakeTestCase</extends>
      <name>DebugMemoryTest</name>
      <full_name>\DebugMemoryTest</full_name>
      <docblock line="24">
        <description>Class DebugMemoryTest</description>
        <long-description></long-description>
        <tag name="package" line="24" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="31" package="Default">
        <name>testMemoryUsage</name>
        <full_name>\DebugMemoryTest::testMemoryUsage()</full_name>
        <docblock line="31">
          <description>test memory usage</description>
          <long-description></long-description>
          <tag name="return" line="31" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="44" package="Default">
        <name>testMemorySettingAndGetting</name>
        <full_name>\DebugMemoryTest::testMemorySettingAndGetting()</full_name>
        <docblock line="44">
          <description>test making memory use markers.</description>
          <long-description></long-description>
          <tag name="return" line="44" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJytU11v2jAUfSa/4kqbRIJoolXaC/sqYutWrZVQy56maTLJBTwSO7OvYWjiv+86BCi0FDQ1T7bvPcfnHN+8/VBOyiBptQJowUccuvFXSasF3GChzQIGaAl6wqLlHt/W/9KH1/W6J6bI+5CKCDpwK0qZMXqGuS4LVASXRhQ412YK4YSo7CRJygi+M9ZmHFUMulwYOZ4QhGlU8cGdHtFcGIRL7VQmSGrVhiuVxjsko01xzeXprmWKymIGXEQDgwnCzdVgfew7bjGTlowcOo+1oEcwkjlaKBwbNUhCKiDGiaGeIaQbfUoTs8T1RRfbgv+e0QZc5FJNYfM9DG4n9r7RvzClGljZ3AXO5/NYl3yunWH9jE/qPpsUks7qTczke1m1kiDolmWn47g3bFZjsZqKZhua63GJr+WwGb0J1mPUy4W1cK/ZT9AqtSRIHysC/iFUma18+QM/bvB3w0i+p1iNo7NijOs34NdyRsFMy6xib5RuyHZg5FTqI62Qq3u+eVwYMWuj8dKgdTnBu/tCOp0xUs8Zw3Mbsh1uo4m0Z+9ZMBoaGIehtD8lV2t85E0/xdZHMT2dqrHcMyymUo23vpFPzBSNjf/D/h0SMVtXZZ9XqzqKHclpjsLUgh83ZTDVJgubtUAvp3nA4NrZkYy6eR4S9z9k+fTbidyGKf8g25za8OpgoBY3fd93FP6IDj+CcgUamT4BPCr/ADkWJS32ZuW0ME+M/JioEwM9f9ZAD2HgxXkNWwbL4B8jmhty</source>
  </file>
  <file path="Plugin/DebugKit/Test/test_app/Controller/DebugKitTestController.php" generated-path="Plugin.DebugKit.Test.test_app.Controller.DebugKitTestController.html" hash="aa7ee1cb3ddac7ca76d083d6e583c370" package="Default">
    <docblock line="0">
      <description>DebugKit TestController of test_app</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="24" package="Default">
      <extends>\Controller</extends>
      <name>DebugKitTestController</name>
      <full_name>\DebugKitTestController</full_name>
      <docblock line="24">
        <description>Class DebugKitTestController</description>
        <long-description></long-description>
        <tag name="since" line="24" description="DebugKit 0.1"/>
        <tag name="package" line="24" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="31" package="Default">
        <name>$name</name>
        <full_name>\DebugKitTestController::name</full_name>
        <default>'DebugKitTest'</default>
        <docblock line="31">
          <description>Mame of the Controller</description>
          <long-description></long-description>
          <tag name="var" line="31" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="38" package="Default">
        <name>$uses</name>
        <full_name>\DebugKitTestController::uses</full_name>
        <default>array()</default>
        <docblock line="38">
          <description>Uses no Models</description>
          <long-description></long-description>
          <tag name="var" line="38" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="45" package="Default">
        <name>$components</name>
        <full_name>\DebugKitTestController::components</full_name>
        <default>array('DebugKit.Toolbar')</default>
        <docblock line="45">
          <description>Uses only DebugKit Toolbar Component</description>
          <long-description></long-description>
          <tag name="var" line="45" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="52" package="Default">
        <name>request_action_return</name>
        <full_name>\DebugKitTestController::request_action_return()</full_name>
        <docblock line="52">
          <description>Return Request Action Value</description>
          <long-description></long-description>
          <tag name="return" line="52" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="60" package="Default">
        <name>request_action_render</name>
        <full_name>\DebugKitTestController::request_action_render()</full_name>
        <docblock line="60">
          <description>Render Request Action</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <source>eJytlE1v2zAMhs/Jr+ChgJOgtbfDLu2ydchQLNgCBFm2ayDbdKzFFj1JThYU/e+j/FW7Hbod5ostkXxekqL89n2RFuNgNhvDDD5iWO4/SwtbNHZBymrKMtRACVje2YmiYDfnuf60hjfN90IckNcTm0/hGjaikDGTjphRkaOycKdFjifSB5ik1hbXQRBxBMv6pPfTikDFWct9amESTSsefKXEnoRGuKNSxcJKUpewVJE/gCSdsWU53BcZoTIYAxs5+22KsFpu223nscFYGqtlWLpY4wpMZIYG8tJY0GiFVGA5ToR0RIi6/BRZpviN0O2jwT3/sQy4zaQ6QPc8b9yg7WtNPzCyVaCRKsIusDvSV/7rhlt1Ycg9nU4+FbxPpebyGB80fibIpb1qFj5rP2nlLBi307PIhDGd4HCE2oa9mFwwjl5AAP6yqGIDva37TnzFM1bNKR/ac9mj0ODOW+0rmVFRhlwSXCgXNQevr+jddNBvXD8fOawoxsz0YUJrcR6ySuc8ry2T6RMIqezcu15EWciUBeUFKb4jf0FHrd+jQJey38C8nuQGbakVv36WXBB8iNxowXeRldgq6drlD01JSlX76zp8J6rlro6YTLnpo9GFTaW5eidKSxusbtkcEpEZvGFjw/aWIHIwxC0+OmlINOUttc7J52aPHnp5V6hh3v+YnIscJmfQTjz33/IuXS6p4JscIrpY54yx73rG8g/j33AdlqE=</source>
  </file>
  <file path="Plugin/DebugKit/Test/test_app/Plugin/DebugkitTestPlugin/Lib/Panel/PluginTestPanel.php" generated-path="Plugin.DebugKit.Test.test_app.Plugin.DebugkitTestPlugin.Lib.Panel.PluginTestPanel.html" hash="77543ac93592778e47be37548aa5aaf7" package="Default">
    <docblock line="0">
      <description>Test Panel of test_app</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="25" package="Default">
      <extends>\DebugPanel</extends>
      <name>PluginTestPanel</name>
      <full_name>\PluginTestPanel</full_name>
      <docblock line="25">
        <description>Class PluginTestPanel</description>
        <long-description></long-description>
        <tag name="package" line="25" description="Default"/>
        <tag name="inherited_from" description="\DebugPanel" refers="\DebugPanel" link="/classes/DebugPanel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$plugin</name>
        <full_name>\DebugPanel::plugin</full_name>
        <default>'DebugKit'</default>
        <docblock line="27">
          <description>Defines which plugin this panel is from so the element can be located.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="Default">
        <name>$title</name>
        <full_name>\DebugPanel::title</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Defines the title for displaying on the toolbar. If null, the class name will be used.</description>
          <long-description>Overriding this allows you to define a custom name in the toolbar.</long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$css</name>
        <full_name>\DebugPanel::css</full_name>
        <default>array()</default>
        <docblock line="42">
          <description>Panel's css files</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$javascript</name>
        <full_name>\DebugPanel::javascript</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Panel's javascript files</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$elementName</name>
        <full_name>\DebugPanel::elementName</full_name>
        <default>null</default>
        <docblock line="57">
          <description>Provide a custom element name for this panel. If null, the underscored version of the class
name will be used.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>__construct</name>
        <full_name>\DebugPanel::__construct()</full_name>
        <docblock line="62">
          <description>Empty constructor</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>startup</name>
        <full_name>\DebugPanel::startup()</full_name>
        <docblock line="73">
          <description>startup the panel</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="73" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Default">
        <name>beforeRender</name>
        <full_name>\DebugPanel::beforeRender()</full_name>
        <docblock line="82">
          <description>Prepare output vars before Controller Rendering.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
    </class>
    <source>eJytUsFOwzAMvfcrfFs7QXviUpAY2jQxMaRq7I7S1m3D2iRK3BWE+Hfcrts04EhOsZ/fs/3ku3tTGS+aTj2YwhYdQSIU1qALII5ehTGM9GDymMDN+J+LHXLsUxNADBthZA4L3GOtTYOKYGlFg522O/ArIhNHUcYM7hRqWwaDgjYfVpYVgZ8Fgx686II6YRGWulW5IKnVFaxUFl6IFCfwqNXLrWWGymEODKKFbYXwvNoe033FBnPpyMq07bmuX7CQNTpoWl7aIgmpgJgnUr1HyE7zKU2sEo6NZmegf/+4BsxqqXZwer+Nu7A9sfoNMxqJw5qXxK7rQm04r1vL8zM/Gutc1Ei6HoOQxX94FXnegzFx3HKpP1lg2pbDUUyu4BA9SQrXMp0Et97xdOa1cA6Sui2l6s9oIBw8Y7nsLxTwnVDlDs4d4NP7+gahdNSS</source>
  </file>
  <file path="Plugin/DebugKit/Test/test_app/Lib/Panel/TestPanel.php" generated-path="Plugin.DebugKit.Test.test_app.Lib.Panel.TestPanel.html" hash="4afb14b1fe37bb1415e339692749b431" package="Default">
    <docblock line="0">
      <description>Test Panel of test_app</description>
      <long-description>PHP 5

CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)

Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="26" package="Default">
      <extends>\DebugPanel</extends>
      <name>TestPanel</name>
      <full_name>\TestPanel</full_name>
      <docblock line="26">
        <description>Class TestPanel</description>
        <long-description></long-description>
        <tag name="since" line="26" description="DebugKit 0.1"/>
        <tag name="package" line="26" description="Default"/>
        <tag name="inherited_from" description="\DebugPanel" refers="\DebugPanel" link="/classes/DebugPanel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$plugin</name>
        <full_name>\DebugPanel::plugin</full_name>
        <default>'DebugKit'</default>
        <docblock line="27">
          <description>Defines which plugin this panel is from so the element can be located.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="Default">
        <name>$title</name>
        <full_name>\DebugPanel::title</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Defines the title for displaying on the toolbar. If null, the class name will be used.</description>
          <long-description>Overriding this allows you to define a custom name in the toolbar.</long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$css</name>
        <full_name>\DebugPanel::css</full_name>
        <default>array()</default>
        <docblock line="42">
          <description>Panel's css files</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$javascript</name>
        <full_name>\DebugPanel::javascript</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Panel's javascript files</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$elementName</name>
        <full_name>\DebugPanel::elementName</full_name>
        <default>null</default>
        <docblock line="57">
          <description>Provide a custom element name for this panel. If null, the underscored version of the class
name will be used.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="33" package="Default">
        <name>startup</name>
        <full_name>\TestPanel::startup()</full_name>
        <docblock line="33">
          <description>Startup</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="33" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="inherited_from" description="\DebugPanel::startup()" refers="\DebugPanel::startup()" link="/classes/DebugPanel.html#method_startup"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>__construct</name>
        <full_name>\DebugPanel::__construct()</full_name>
        <docblock line="62">
          <description>Empty constructor</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>startup</name>
        <full_name>\DebugPanel::startup()</full_name>
        <docblock line="73">
          <description>startup the panel</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="73" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Default">
        <name>beforeRender</name>
        <full_name>\DebugPanel::beforeRender()</full_name>
        <docblock line="82">
          <description>Prepare output vars before Controller Rendering.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
    </class>
    <source>eJytUk1v2zAMPUe/gocBsYPW3g67pPvI0KJYsQ4I2twHWaYTLbYkSFS9Yeh/H63a7rINO00nieR7j6Tem/fu4ES5WglYwQ4DwVYabME2QPz6Ip3jzJDcftzC6/F+KY/I74y6HNZwJ52u4QofsLWuQ0Nw7WWHvfVHyA5Ebl2WihGsVFi/zxODdd+93h8IMpUnPri3DfXSI1zbaGpJ2pozuDGqOCFp5uTENdDdaoUmYA2cRA+7A8Lnm90UHirusNaBvK7igA3DgI1uMUAXeWiPJLUBYpys7AOCmvszlpilGIU2z4nh/McxYNNqc4T5/Lm4k7Vvvf2KihIwaKNwBl5hFfefNMHL4tXIm7Zwytv3fWEdx230PB7Tl2NdKDtN5+OjYO3fVlkK8cG59TpyabZMaskzyzNYTtrFra6W+YWYnHXZyhCSv1LptMx/Nl4KdYoC/EZo6gDPmvBjlrgn6SlObt04yR7k/zHkbduyJ16o+Z7IFy5WPCQ00ajhHyA8EWR/x+QstVj8Ejh/R3Njb4F8xAuxeBTiUfwEKRQOBQ==</source>
  </file>
  <file path="Plugin/DebugKit/Lib/Log/Engine/DebugKitLog.php" generated-path="Plugin.DebugKit.Lib.Log.Engine.DebugKitLog.html" hash="cbfb1f7e08a20879647ee0a52d7eaf87" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="18" package="Default">
      <extends/>
      <implements>\CakeLogInterface</implements>
      <name>DebugKitLog</name>
      <full_name>\DebugKitLog</full_name>
      <docblock line="18">
        <description>A CakeLog listener which saves having to munge files or other configured loggers.</description>
        <long-description></long-description>
        <tag name="package" line="18" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="25" package="Default">
        <name>$logs</name>
        <full_name>\DebugKitLog::logs</full_name>
        <default>array()</default>
        <docblock line="25">
          <description>logs</description>
          <long-description></long-description>
          <tag name="var" line="25" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="33" package="Default">
        <name>__construct</name>
        <full_name>\DebugKitLog::__construct()</full_name>
        <docblock line="33">
          <description>Makes the reverse link needed to get the logs later.</description>
          <long-description></long-description>
          <tag name="param" line="33" description="" type="" variable="$options"/>
          <tag name="return" line="33" description="" type="\DebugKitLog">
            <type>\DebugKitLog</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="44" package="Default">
        <name>write</name>
        <full_name>\DebugKitLog::write()</full_name>
        <docblock line="44">
          <description>Captures log messages in memory</description>
          <long-description></long-description>
          <tag name="param" line="44" description="" type="" variable="$type"/>
          <tag name="param" line="44" description="" type="" variable="$message"/>
          <tag name="return" line="44" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>eJytU01v2zAMPdu/ggMCxA6S+J7uo8OGosFaIOh6GbKiUGxa1mJLgiTbCIb+99GK7SRtj9NN4uPj4yP18YsudJjMZiHM4Bvb4+Z2E7kqhhU8MC0y+I4NlkpXKB3cGFZhq8weosI5vUqSlDKIYKkMjz2D0gcjeOEgSmPPBz9V7lpmEG5ULTPmhJJzWMt0eUGSj8GBq6O7EylKixlQEA08Fgj368fhuUM8YCasM2JXd7kWVA65KNFCVVsHBh0TEhzlsZ1qENJRn1SOWJZ9oetToDv/sQ24LoXcw3jeGndh+8aoP5i6PtG3eZnYtu1SaXpXtSH9lJ/0OJtUwi36y5LIX3mVhMOcv/qSd4pDSeahJGvbQqQFWNaQdQVrhOTgFJkoOfaGKgOKjDTkocwFrw2NpVSco7G9i0mYlsxaWpldzX8I1xUQlS6xWx471FxLhyZnKcLfURDx2GESDTPAjGEHzxjoekctwaSDwKdjJIqvxtR7YrV+woY21ZBd3m+JmJFA6oGj82FPUDIqPg5dM1pomCjtd8c/0cbURsLvsx4udOS1TDs0PD+TD7R5deqigSGmloJguG2nmkksp0+Lz0efSP7EFcJehcFLePpzmipSC4SBCq1lnC60tBVWyhxeSXUHjef3PuFceqNE9r7k1giHkeeYj6lHzSKH6IOwFqmZTqKXbLce+xQfMcHbyPlAAmrqPcz2hKKfgdH016JaZHC7Eis7jecQdd9X8ngU5O15Cf8BRXh6aw==</source>
  </file>
  <file path="Plugin/DebugKit/Lib/DebugMemory.php" generated-path="Plugin.DebugKit.Lib.DebugMemory.html" hash="40b3837dc67f6aaf9366f27e1afa5119" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 2.0"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="Default">
      <extends/>
      <name>DebugMemory</name>
      <full_name>\DebugMemory</full_name>
      <docblock line="21">
        <description>Contains methods for Profiling memory usage.</description>
        <long-description></long-description>
        <tag name="package" line="21" description="Default"/>
      </docblock>
      <property static="true" visibility="protected" namespace="" line="28" package="Default">
        <name>$_points</name>
        <full_name>\DebugMemory::_points</full_name>
        <default>array()</default>
        <docblock line="28">
          <description>An array of recorded memory use points.</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="35" package="Default">
        <name>getCurrent</name>
        <full_name>\DebugMemory::getCurrent()</full_name>
        <docblock line="35">
          <description>Get current memory usage</description>
          <long-description></long-description>
          <tag name="return" line="35" description="number of bytes ram currently in use. 0 if memory_get_usage() is not available." type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="44" package="Default">
        <name>getPeak</name>
        <full_name>\DebugMemory::getPeak()</full_name>
        <docblock line="44">
          <description>Get peak memory use</description>
          <long-description></long-description>
          <tag name="return" line="44" description="peak memory use (in bytes). Returns 0 if memory_get_peak_usage() is not available" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="56" package="Default">
        <name>record</name>
        <full_name>\DebugMemory::record()</full_name>
        <docblock line="56">
          <description>Stores a memory point in the internal tracker.</description>
          <long-description>Takes a optional message name which can be used to identify the memory point.
If no message is supplied a debug_backtrace will be done to identify the memory point.</long-description>
          <tag name="param" line="56" description="&lt;p&gt;Message to identify this memory point.&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="56" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="81" package="Default">
        <name>getAll</name>
        <full_name>\DebugMemory::getAll()</full_name>
        <docblock line="81">
          <description>Get all the stored memory points</description>
          <long-description></long-description>
          <tag name="param" line="81" description="&lt;p&gt;Whether you want to clear the memory points as well. Defaults to false.&lt;/p&gt;" type="boolean" variable="$clear">
            <type>boolean</type>
          </tag>
          <tag name="return" line="81" description="Array of memory marks stored so far." type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$clear</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="94" package="Default">
        <name>clear</name>
        <full_name>\DebugMemory::clear()</full_name>
        <docblock line="94">
          <description>Clear out any existing memory points</description>
          <long-description></long-description>
          <tag name="return" line="94" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>eJytVk1v20YQPUu/YooKEOUklNujFKMxHKQ1UgNG4qAHwzBW5FDaaLlL7C6lCoH/e2e/aNKC7R6iC6XdmTdvZt4M9f6PZtOM5ycnYziBC7bF67+uM1vPYAFfWMNL+Ig7FKqpUVr4pFmNe6W3kG2sbRbzeUEeBJArvZ55BNUcNF9vLGTFzOPBV1XZPdMIn1QrS2a5km/hUhb5AKTqLhOWg/ubFygNlkCXqOFmg3B1eZOOncUXLLmxmq9a52tAVVBxgQbq1ljQaBmXYMmPrdQOoej4SWUJJY+BPjxeuM9PTAM+CC630H2OCzco+7VW37Gw3tFwWWDn+BFX7fozt/B7fhpxfRWGuPv9PlcNnatWU3oEP492Zl5z+y7+yCn2k1LOx+PzplksWjLNpj7aGvX0LUy/WS64PUxny3GnFCVdZanMaDeqNFAp7bhT7blc02mt9AFaw9apxPNxIZgxIY2rcP+jwzuXwLRmB9c/jYXSJTW9Q0FoFJfWdN3aMR3sPfCo0cpS0cjFWCp+AZP74ABnwSzrUf8TLRSt1k7QfZ4JmzTTagnkjpQ/yLZe0YN4rQ6WdEUjkNzFgawcvRxOgVcR7X6N9t4jZjPgxgkN2I5xwVbCF8MRblfUiMS2amXhJAPkeRGgyfXHeDSKXI6Bl+PRwyCjBtm2V7BnknliBRnx92nNcpokZ2qOUnE+z+bzWjrX5PxsLn3kQUJfrdJUapao+mZCHGSXi5ZMgNWs2KJ2JYUbGiHnoBoXmS5rNA4YJG0s2G94sYGCUbLo8i7BKuAl1ZlXBw/aD+QBLytKtEOhtE3bNIKTK4PSSfh+RdEdBYLnQjjkUkl8Fdm3pWFORm5v0bBMUpSr+BxCcHPMLvV1pZRAJl/sQhinrItyRpIWIvRkEpC/GXdsUFSLRV+D1JQRiSH7JTkHr9HEVbUkl4oJg0t/FEpx9rQ4AWTUi542y2JB6dcNs5ssON+e3t1O3fKe3s0ghynQKkF65NC7d2fTO4f5EMlxY9BmgXya+9sU726WKCva55yUcdURSTaBIKeT3/xXUovA/4tLjm/eLMO3xxyPorl0fvWpcG/8EBN4Dj7Qi71ZPk6P1S0ezT4j+TmpGTc25UAtZqi4qBeYFPTQ8M+GtjethYNqYc9oxEh54eapcmm2DOxRiJz6V7FW0AkZ+/4PFBm2+Hna5RGjZnprEj/j/PSrm/BciCzyjEJLmvVgSa+pdkmrwSV2Z2jSfxuE8kfSAXJQ1wsfWLVUXXkA/Jf+ZPRebMPaRpSd4uWLSXlmcRu+wIxIPIz/A51fF0Y=</source>
  </file>
  <file path="Plugin/DebugKit/Lib/FireCake.php" generated-path="Plugin.DebugKit.Lib.FireCake.html" hash="7d896522efb6c48e830dd5722a2b5e84" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <function namespace="" line="25" package="Default">
      <name>firecake</name>
      <full_name>\firecake()</full_name>
      <docblock line="25">
        <description>Procedural version of FireCake::log()</description>
        <long-description></long-description>
        <tag name="package" line="25" description="Default"/>
        <tag name="param" line="25" description="" type="" variable="$message"/>
        <tag name="param" line="25" description="" type="null" variable="$label">
          <type>null</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$message</name>
        <default></default>
        <type/>
      </argument>
      <argument line="0" by_reference="false">
        <name>$label</name>
        <default>null</default>
        <type>null</type>
      </argument>
    </function>
    <class final="false" abstract="false" namespace="" line="40" package="Default">
      <extends/>
      <name>FireCake</name>
      <full_name>\FireCake</full_name>
      <docblock line="40">
        <description>FirePHP Class for CakePHP</description>
        <long-description>Provides most of the functionality offered by FirePHPCore
Interoperates with FirePHP extension for Firefox

For more information see: http://www.firephp.org/</long-description>
        <tag name="package" line="40" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="48" package="Default">
        <name>$options</name>
        <full_name>\FireCake::options</full_name>
        <default>array()</default>
        <docblock line="48">
          <description>Options for FireCake.</description>
          <long-description></long-description>
          <tag name="see" line="48" description="and setOptions();" link="\_defaultOptions"/>
          <tag name="var" line="48" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="55" package="Default">
        <name>$_defaultOptions</name>
        <full_name>\FireCake::_defaultOptions</full_name>
        <default>array('maxObjectDepth' =&gt; 10, 'maxArrayDepth' =&gt; 20, 'useNativeJsonEncode' =&gt; true, 'includeLineNumbers' =&gt; true)</default>
        <docblock line="55">
          <description>Default Options used in CakeFirePhp</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="67" package="Default">
        <name>$_levels</name>
        <full_name>\FireCake::_levels</full_name>
        <default>array('log' =&gt; 'LOG', 'info' =&gt; 'INFO', 'warn' =&gt; 'WARN', 'error' =&gt; 'ERROR', 'dump' =&gt; 'DUMP', 'trace' =&gt; 'TRACE', 'exception' =&gt; 'EXCEPTION', 'table' =&gt; 'TABLE', 'groupStart' =&gt; 'GROUP_START', 'groupEnd' =&gt; 'GROUP_END')</default>
        <docblock line="67">
          <description>Message Levels for messages sent via FirePHP</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="85" package="Default">
        <name>$_version</name>
        <full_name>\FireCake::_version</full_name>
        <default>'0.2.1'</default>
        <docblock line="85">
          <description>Version number for X-Wf-1-Plugin-1 HTML header</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="92" package="Default">
        <name>$_messageIndex</name>
        <full_name>\FireCake::_messageIndex</full_name>
        <default>1</default>
        <docblock line="92">
          <description>internal messageIndex counter</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="99" package="Default">
        <name>$_encodedObjects</name>
        <full_name>\FireCake::_encodedObjects</full_name>
        <default>array()</default>
        <docblock line="99">
          <description>stack of objects encoded by stringEncode()</description>
          <long-description></long-description>
          <tag name="var" line="99" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="106" package="Default">
        <name>$_methodIndex</name>
        <full_name>\FireCake::_methodIndex</full_name>
        <default>array('info', 'log', 'warn', 'error', 'table', 'trace')</default>
        <docblock line="106">
          <description>methodIndex to include in tracebacks when using includeLineNumbers</description>
          <long-description></long-description>
          <tag name="var" line="106" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="113" package="Default">
        <name>$_enabled</name>
        <full_name>\FireCake::_enabled</full_name>
        <default>true</default>
        <docblock line="113">
          <description>FireCake output status</description>
          <long-description></long-description>
          <tag name="var" line="113" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="121" package="Default">
        <name>getInstance</name>
        <full_name>\FireCake::getInstance()</full_name>
        <docblock line="121">
          <description>get Instance of the singleton</description>
          <long-description></long-description>
          <tag name="param" line="121" description="&lt;p&gt;Class instance to store in the singleton. Used with subclasses and Tests.&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="121" description="" type="\FireCake">
            <type>\FireCake</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="142" package="Default">
        <name>setOptions</name>
        <full_name>\FireCake::setOptions()</full_name>
        <docblock line="142">
          <description>setOptions</description>
          <long-description></long-description>
          <tag name="param" line="142" description="&lt;p&gt;Array of options to set.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="142" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="156" package="Default">
        <name>detectClientExtension</name>
        <full_name>\FireCake::detectClientExtension()</full_name>
        <docblock line="156">
          <description>Return boolean based on presence of FirePHP extension</description>
          <long-description></long-description>
          <tag name="return" line="156" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="172" package="Default">
        <name>getUserAgent</name>
        <full_name>\FireCake::getUserAgent()</full_name>
        <docblock line="172">
          <description>Get the Current UserAgent</description>
          <long-description></long-description>
          <tag name="return" line="172" description="UserAgent string of active client connection" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="182" package="Default">
        <name>disable</name>
        <full_name>\FireCake::disable()</full_name>
        <docblock line="182">
          <description>Disable FireCake output
All subsequent output calls will not be run.</description>
          <long-description></long-description>
          <tag name="return" line="182" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="192" package="Default">
        <name>enable</name>
        <full_name>\FireCake::enable()</full_name>
        <docblock line="192">
          <description>Enable FireCake output</description>
          <long-description></long-description>
          <tag name="return" line="192" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="204" package="Default">
        <name>log</name>
        <full_name>\FireCake::log()</full_name>
        <docblock line="204">
          <description>Convenience wrapper for LOG messages</description>
          <long-description></long-description>
          <tag name="param" line="204" description="&lt;p&gt;Message to log&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="204" description="&lt;p&gt;Label for message (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="return" line="204" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="215" package="Default">
        <name>warn</name>
        <full_name>\FireCake::warn()</full_name>
        <docblock line="215">
          <description>Convenience wrapper for WARN messages</description>
          <long-description></long-description>
          <tag name="param" line="215" description="&lt;p&gt;Message to log&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="215" description="&lt;p&gt;Label for message (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="return" line="215" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="226" package="Default">
        <name>info</name>
        <full_name>\FireCake::info()</full_name>
        <docblock line="226">
          <description>Convenience wrapper for INFO messages</description>
          <long-description></long-description>
          <tag name="param" line="226" description="&lt;p&gt;Message to log&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="226" description="&lt;p&gt;Label for message (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="return" line="226" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="237" package="Default">
        <name>error</name>
        <full_name>\FireCake::error()</full_name>
        <docblock line="237">
          <description>Convenience wrapper for ERROR messages</description>
          <long-description></long-description>
          <tag name="param" line="237" description="&lt;p&gt;Message to log&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="237" description="&lt;p&gt;Label for message (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="return" line="237" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="248" package="Default">
        <name>table</name>
        <full_name>\FireCake::table()</full_name>
        <docblock line="248">
          <description>Convenience wrapper for TABLE messages</description>
          <long-description></long-description>
          <tag name="param" line="248" description="&lt;p&gt;Label for message (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="param" line="248" description="&lt;p&gt;Message to log&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="248" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="259" package="Default">
        <name>dump</name>
        <full_name>\FireCake::dump()</full_name>
        <docblock line="259">
          <description>Convenience wrapper for DUMP messages</description>
          <long-description></long-description>
          <tag name="param" line="259" description="&lt;p&gt;Unique label for message&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="param" line="259" description="&lt;p&gt;Message to log&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="259" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="269" package="Default">
        <name>trace</name>
        <full_name>\FireCake::trace()</full_name>
        <docblock line="269">
          <description>Convenience wrapper for TRACE messages</description>
          <long-description></long-description>
          <tag name="param" line="269" description="&lt;p&gt;Label for message (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="return" line="269" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="280" package="Default">
        <name>group</name>
        <full_name>\FireCake::group()</full_name>
        <docblock line="280">
          <description>Convenience wrapper for GROUP messages
Messages following the group call will be nested in a group block</description>
          <long-description></long-description>
          <tag name="param" line="280" description="&lt;p&gt;Label for group (optional)&lt;/p&gt;" type="string" variable="$label">
            <type>string</type>
          </tag>
          <tag name="return" line="280" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$label</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="306" package="Default">
        <name>fb</name>
        <full_name>\FireCake::fb()</full_name>
        <docblock line="306">
          <description>fb - Send messages with FireCake to FirePHP</description>
          <long-description>Much like FirePHP's fb() this method can be called with various parameter counts
fb($message) - Just send a message defaults to LOG type
fb($message, $type) - Send a message with a specific type
fb($message, $label, $type) - Send a message with a custom label and type.</long-description>
          <tag name="param" line="306" description="&lt;p&gt;Message to output. For other parameters see usage above.&lt;/p&gt;" type="mixed" variable="$message">
            <type>mixed</type>
          </tag>
          <tag name="return" line="306" description="Success" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="424" package="Default">
        <name>_parseTrace</name>
        <full_name>\FireCake::_parseTrace()</full_name>
        <docblock line="424">
          <description>Parse a debug backtrace</description>
          <long-description></long-description>
          <tag name="param" line="424" description="&lt;p&gt;Debug backtrace output&lt;/p&gt;" type="array" variable="$trace">
            <type>array</type>
          </tag>
          <tag name="param" line="424" description="" type="" variable="$messageName"/>
          <tag name="return" line="424" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$trace</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$messageName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="" line="452" package="Default">
        <name>_escapeTrace</name>
        <full_name>\FireCake::_escapeTrace()</full_name>
        <docblock line="452">
          <description>Fix a trace for use in output</description>
          <long-description></long-description>
          <tag name="param" line="452" description="&lt;p&gt;Trace to fix&lt;/p&gt;" type="mixed" variable="$trace">
            <type>mixed</type>
          </tag>
          <tag name="return" line="452" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$trace</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="473" package="Default">
        <name>stringEncode</name>
        <full_name>\FireCake::stringEncode()</full_name>
        <docblock line="473">
          <description>Encode non string objects to string.</description>
          <long-description>Filter out recursion, so no errors are raised by json_encode or $javascript-&gt;object()</long-description>
          <tag name="param" line="473" description="&lt;p&gt;Object or variable to encode to string.&lt;/p&gt;" type="mixed" variable="$object">
            <type>mixed</type>
          </tag>
          <tag name="param" line="473" description="&lt;p&gt;Current Depth in object chains.&lt;/p&gt;" type="integer" variable="$objectDepth">
            <type>integer</type>
          </tag>
          <tag name="param" line="473" description="&lt;p&gt;Current Depth in array chains.&lt;/p&gt;" type="integer" variable="$arrayDepth">
            <type>integer</type>
          </tag>
          <tag name="return" line="473" description="" type="string|Object">
            <type>string</type>
            <type>Object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$objectDepth</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$arrayDepth</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="535" package="Default">
        <name>_sendHeader</name>
        <full_name>\FireCake::_sendHeader()</full_name>
        <docblock line="535">
          <description>Send Headers - write headers.</description>
          <long-description></long-description>
          <tag name="param" line="535" description="" type="" variable="$name"/>
          <tag name="param" line="535" description="" type="" variable="$value"/>
          <tag name="return" line="535" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/DebugKit/Lib/DebugKitDebugger.php" generated-path="Plugin.DebugKit.Lib.DebugKitDebugger.html" hash="7c1eae97c8880510cb7f1b70108adf9e" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="29" package="Default">
      <extends>\Debugger</extends>
      <name>DebugKitDebugger</name>
      <full_name>\DebugKitDebugger</full_name>
      <docblock line="29">
        <description>DebugKit Temporary Debugger Class</description>
        <long-description>Provides the future features that are planned. Yet not implemented in the 1.2 code base

This file will not be needed in future version of CakePHP.</long-description>
        <tag name="since" line="29" description="DebugKit 0.1"/>
        <tag name="package" line="29" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="39" package="Default">
        <name>__destruct</name>
        <full_name>\DebugKitDebugger::__destruct()</full_name>
        <docblock line="39">
          <description>destruct method</description>
          <long-description>Allow timer info to be displayed if the code dies or is being debugged before rendering the view
Cheat and use the debug log class for formatting</long-description>
          <tag name="return" line="39" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="77" package="Default">
        <name>startTimer</name>
        <full_name>\DebugKitDebugger::startTimer()</full_name>
        <docblock line="77">
          <description>Start an benchmarking timer.</description>
          <long-description></long-description>
          <tag name="param" line="77" description="&lt;p&gt;The name of the timer to start.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="77" description="&lt;p&gt;A message for your timer&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="77" description="true" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="deprecated" line="77" description="use DebugTimer::start()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="90" package="Default">
        <name>stopTimer</name>
        <full_name>\DebugKitDebugger::stopTimer()</full_name>
        <docblock line="90">
          <description>Stop a benchmarking timer.</description>
          <long-description>$name should be the same as the $name used in startTimer().</long-description>
          <tag name="param" line="90" description="&lt;p&gt;The name of the timer to end.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="90" description="true if timer was ended, false if timer was not started." type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="deprecated" line="90" description="use DebugTimer::stop()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="102" package="Default">
        <name>getTimers</name>
        <full_name>\DebugKitDebugger::getTimers()</full_name>
        <docblock line="102">
          <description>Get all timers that have been started and stopped.</description>
          <long-description>Calculates elapsed time for each timer. If clear is true, will delete existing timers</long-description>
          <tag name="param" line="102" description="&lt;p&gt;false&lt;/p&gt;" type="boolean" variable="$clear">
            <type>boolean</type>
          </tag>
          <tag name="return" line="102" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="102" description="use DebugTimer::getAll()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$clear</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="112" package="Default">
        <name>clearTimers</name>
        <full_name>\DebugKitDebugger::clearTimers()</full_name>
        <docblock line="112">
          <description>Clear all existing timers</description>
          <long-description></long-description>
          <tag name="return" line="112" description="true" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="deprecated" line="112" description="use DebugTimer::clear()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="124" package="Default">
        <name>elapsedTime</name>
        <full_name>\DebugKitDebugger::elapsedTime()</full_name>
        <docblock line="124">
          <description>Get the difference in time between the timer start and timer end.</description>
          <long-description></long-description>
          <tag name="param" line="124" description="&lt;p&gt;string the name of the timer you want elapsed time for.&lt;/p&gt;" type="" variable="$name"/>
          <tag name="param" line="124" description="&lt;p&gt;int the number of decimal places to return, defaults to 5.&lt;/p&gt;" type="" variable="$precision"/>
          <tag name="return" line="124" description="number of seconds elapsed for timer name, 0 on missing key" type="float">
            <type>float</type>
          </tag>
          <tag name="deprecated" line="124" description="use DebugTimer::elapsedTime()"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>'default'</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$precision</name>
          <default>5</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="134" package="Default">
        <name>requestTime</name>
        <full_name>\DebugKitDebugger::requestTime()</full_name>
        <docblock line="134">
          <description>Get the total execution time until this point</description>
          <long-description></long-description>
          <tag name="return" line="134" description="elapsed time in seconds since script start." type="float">
            <type>float</type>
          </tag>
          <tag name="deprecated" line="134" description="use DebugTimer::requestTime()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="144" package="Default">
        <name>requestStartTime</name>
        <full_name>\DebugKitDebugger::requestStartTime()</full_name>
        <docblock line="144">
          <description>get the time the current request started.</description>
          <long-description></long-description>
          <tag name="return" line="144" description="time of request start" type="float">
            <type>float</type>
          </tag>
          <tag name="deprecated" line="144" description="use DebugTimer::requestStartTime()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="154" package="Default">
        <name>getMemoryUse</name>
        <full_name>\DebugKitDebugger::getMemoryUse()</full_name>
        <docblock line="154">
          <description>get current memory usage</description>
          <long-description></long-description>
          <tag name="return" line="154" description="number of bytes ram currently in use. 0 if memory_get_usage() is not available." type="integer">
            <type>integer</type>
          </tag>
          <tag name="deprecated" line="154" description="Use DebugMemory::getCurrent() instead."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="164" package="Default">
        <name>getPeakMemoryUse</name>
        <full_name>\DebugKitDebugger::getPeakMemoryUse()</full_name>
        <docblock line="164">
          <description>Get peak memory use</description>
          <long-description></long-description>
          <tag name="return" line="164" description="peak memory use (in bytes). Returns 0 if memory_get_peak_usage() is not available" type="integer">
            <type>integer</type>
          </tag>
          <tag name="deprecated" line="164" description="Use DebugMemory::getPeak() instead."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="178" package="Default">
        <name>setMemoryPoint</name>
        <full_name>\DebugKitDebugger::setMemoryPoint()</full_name>
        <docblock line="178">
          <description>Stores a memory point in the internal tracker.</description>
          <long-description>Takes a optional message name which can be used to identify the memory point.
If no message is supplied a debug_backtrace will be done to identifty the memory point.
If you don't have memory_get_xx methods this will not work.</long-description>
          <tag name="param" line="178" description="&lt;p&gt;Message to identify this memory point.&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="178" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="deprecated" line="178" description="Use DebugMemory::getAll() instead."/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="189" package="Default">
        <name>getMemoryPoints</name>
        <full_name>\DebugKitDebugger::getMemoryPoints()</full_name>
        <docblock line="189">
          <description>Get all the stored memory points</description>
          <long-description></long-description>
          <tag name="param" line="189" description="&lt;p&gt;Whether you want to clear the memory points as well. Defaults to false.&lt;/p&gt;" type="boolean" variable="$clear">
            <type>boolean</type>
          </tag>
          <tag name="return" line="189" description="Array of memory marks stored so far." type="array">
            <type>array</type>
          </tag>
          <tag name="deprecated" line="189" description="Use DebugMemory::getAll() instead."/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$clear</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="199" package="Default">
        <name>clearMemoryPoints</name>
        <full_name>\DebugKitDebugger::clearMemoryPoints()</full_name>
        <docblock line="199">
          <description>Clear out any existing memory points</description>
          <long-description></long-description>
          <tag name="return" line="199" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="deprecated" line="199" description="Use DebugMemory::clear() instead."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="210" package="Default">
        <name>fireError</name>
        <full_name>\DebugKitDebugger::fireError()</full_name>
        <docblock line="210">
          <description>Create a FirePHP error message</description>
          <long-description></long-description>
          <tag name="param" line="210" description="&lt;p&gt;Data of the error&lt;/p&gt;" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="210" description="&lt;p&gt;Links for the error&lt;/p&gt;" type="array" variable="$links">
            <type>array</type>
          </tag>
          <tag name="return" line="210" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$links</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/DebugKit/Lib/DebugTimer.php" generated-path="Plugin.DebugKit.Lib.DebugTimer.html" hash="4e0c2e4ca5bcecc8b8ca7bd617628139" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="Default">
      <extends/>
      <name>DebugTimer</name>
      <full_name>\DebugTimer</full_name>
      <docblock line="21">
        <description>Contains methods for Profiling and creating timers.</description>
        <long-description></long-description>
        <tag name="package" line="21" description="Default"/>
      </docblock>
      <property static="true" visibility="protected" namespace="" line="28" package="Default">
        <name>$_timers</name>
        <full_name>\DebugTimer::_timers</full_name>
        <default>array()</default>
        <docblock line="28">
          <description>Internal timers array</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="37" package="Default">
        <name>start</name>
        <full_name>\DebugTimer::start()</full_name>
        <docblock line="37">
          <description>Start an benchmarking timer.</description>
          <long-description></long-description>
          <tag name="param" line="37" description="&lt;p&gt;The name of the timer to start.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="37" description="&lt;p&gt;A message for your timer&lt;/p&gt;" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="return" line="37" description="Always true" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="79" package="Default">
        <name>stop</name>
        <full_name>\DebugTimer::stop()</full_name>
        <docblock line="79">
          <description>Stop a benchmarking timer.</description>
          <long-description>$name should be the same as the $name used in startTimer().</long-description>
          <tag name="param" line="79" description="&lt;p&gt;The name of the timer to end.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="79" description="true if timer was ended, false if timer was not started." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="116" package="Default">
        <name>getAll</name>
        <full_name>\DebugTimer::getAll()</full_name>
        <docblock line="116">
          <description>Get all timers that have been started and stopped.</description>
          <long-description>Calculates elapsed time for each timer. If clear is true, will delete existing timers</long-description>
          <tag name="param" line="116" description="&lt;p&gt;false&lt;/p&gt;" type="boolean" variable="$clear">
            <type>boolean</type>
          </tag>
          <tag name="return" line="116" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$clear</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="155" package="Default">
        <name>clear</name>
        <full_name>\DebugTimer::clear()</full_name>
        <docblock line="155">
          <description>Clear all existing timers</description>
          <long-description></long-description>
          <tag name="return" line="155" description="true" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="167" package="Default">
        <name>elapsedTime</name>
        <full_name>\DebugTimer::elapsedTime()</full_name>
        <docblock line="167">
          <description>Get the difference in time between the timer start and timer end.</description>
          <long-description></long-description>
          <tag name="param" line="167" description="&lt;p&gt;string the name of the timer you want elapsed time for.&lt;/p&gt;" type="" variable="$name"/>
          <tag name="param" line="167" description="&lt;p&gt;int the number of decimal places to return, defaults to 5.&lt;/p&gt;" type="" variable="$precision"/>
          <tag name="return" line="167" description="number of seconds elapsed for timer name, 0 on missing key" type="float">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>'default'</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$precision</name>
          <default>5</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="179" package="Default">
        <name>requestTime</name>
        <full_name>\DebugTimer::requestTime()</full_name>
        <docblock line="179">
          <description>Get the total execution time until this point</description>
          <long-description></long-description>
          <tag name="return" line="179" description="elapsed time in seconds since script start." type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="" line="190" package="Default">
        <name>requestStartTime</name>
        <full_name>\DebugTimer::requestStartTime()</full_name>
        <docblock line="190">
          <description>get the time the current request started.</description>
          <long-description></long-description>
          <tag name="return" line="190" description="time of request start" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Plugin/DebugKit/Lib/Panel/IncludePanel.php" generated-path="Plugin.DebugKit.Lib.Panel.IncludePanel.html" hash="480e6697210e8f1ac8ffc0f040feb093" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="Default">
      <extends>\DebugPanel</extends>
      <name>IncludePanel</name>
      <full_name>\IncludePanel</full_name>
      <docblock line="20">
        <description>Provides a list of included files for the current request</description>
        <long-description></long-description>
        <tag name="package" line="20" description="Default"/>
        <tag name="inherited_from" description="\DebugPanel" refers="\DebugPanel" link="/classes/DebugPanel.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="" line="27" package="Default">
        <name>$_pluginPaths</name>
        <full_name>\IncludePanel::_pluginPaths</full_name>
        <default>array()</default>
        <docblock line="27">
          <description>The list of plugins within the application</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="\&lt;type&gt;" variable="">
            <type>\&lt;type&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="" line="34" package="Default">
        <name>$_fileTypes</name>
        <full_name>\IncludePanel::_fileTypes</full_name>
        <default>array('Cache', 'Config', 'Configure', 'Console', 'Component', 'Controller', 'Behavior', 'Datasource', 'Model', 'Plugin', 'Test', 'View', 'Utility', 'Network', 'Routing', 'I18n', 'Log', 'Error')</default>
        <docblock line="34">
          <description>File Types</description>
          <long-description></long-description>
          <tag name="var" line="34" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$plugin</name>
        <full_name>\DebugPanel::plugin</full_name>
        <default>'DebugKit'</default>
        <docblock line="27">
          <description>Defines which plugin this panel is from so the element can be located.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="Default">
        <name>$title</name>
        <full_name>\DebugPanel::title</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Defines the title for displaying on the toolbar. If null, the class name will be used.</description>
          <long-description>Overriding this allows you to define a custom name in the toolbar.</long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$css</name>
        <full_name>\DebugPanel::css</full_name>
        <default>array()</default>
        <docblock line="42">
          <description>Panel's css files</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$javascript</name>
        <full_name>\DebugPanel::javascript</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Panel's javascript files</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$elementName</name>
        <full_name>\DebugPanel::elementName</full_name>
        <default>null</default>
        <docblock line="57">
          <description>Provide a custom element name for this panel. If null, the underscored version of the class
name will be used.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="43" package="Default">
        <name>__construct</name>
        <full_name>\IncludePanel::__construct()</full_name>
        <docblock line="43">
          <description>Get a list of plugins on construct for later use</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\DebugPanel::__construct()" refers="\DebugPanel::__construct()" link="/classes/DebugPanel.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="57" package="Default">
        <name>beforeRender</name>
        <full_name>\IncludePanel::beforeRender()</full_name>
        <docblock line="57">
          <description>Get a list of files that were included and split them out into the various parts of the app</description>
          <long-description></long-description>
          <tag name="param" line="57" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="57" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\DebugPanel::beforeRender()" refers="\DebugPanel::beforeRender()" link="/classes/DebugPanel.html#method_beforeRender"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="84" package="Default">
        <name>_includePaths</name>
        <full_name>\IncludePanel::_includePaths()</full_name>
        <docblock line="84">
          <description>Get the possible include paths</description>
          <long-description></long-description>
          <tag name="return" line="84" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="96" package="Default">
        <name>_isCoreFile</name>
        <full_name>\IncludePanel::_isCoreFile()</full_name>
        <docblock line="96">
          <description>Check if a path is part of cake core</description>
          <long-description></long-description>
          <tag name="param" line="96" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="96" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="105" package="Default">
        <name>_isAppFile</name>
        <full_name>\IncludePanel::_isAppFile()</full_name>
        <docblock line="105">
          <description>Check if a path is from APP but not a plugin</description>
          <long-description></long-description>
          <tag name="param" line="105" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="105" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="114" package="Default">
        <name>_isPluginFile</name>
        <full_name>\IncludePanel::_isPluginFile()</full_name>
        <docblock line="114">
          <description>Check if a path is from a plugin</description>
          <long-description></long-description>
          <tag name="param" line="114" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="114" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="133" package="Default">
        <name>_niceFileName</name>
        <full_name>\IncludePanel::_niceFileName()</full_name>
        <docblock line="133">
          <description>Replace the path with APP, CORE or the plugin name</description>
          <long-description></long-description>
          <tag name="param" line="133" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="param" line="133" description="&lt;ul&gt;&#10;&lt;li&gt;app for app files&#10;&lt;ul&gt;&#10;&lt;li&gt;core for core files&lt;/li&gt;&#10;&lt;li&gt;PluginName for the name of a plugin&lt;/li&gt;&#10;&lt;/ul&gt;&lt;/li&gt;&#10;&lt;/ul&gt;" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="return" line="133" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="" line="151" package="Default">
        <name>_getFileType</name>
        <full_name>\IncludePanel::_getFileType()</full_name>
        <docblock line="151">
          <description>Get the type of file (model, controller etc)</description>
          <long-description></long-description>
          <tag name="param" line="151" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="151" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>__construct</name>
        <full_name>\DebugPanel::__construct()</full_name>
        <docblock line="62">
          <description>Empty constructor</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>startup</name>
        <full_name>\DebugPanel::startup()</full_name>
        <docblock line="73">
          <description>startup the panel</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="73" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Default">
        <name>beforeRender</name>
        <full_name>\DebugPanel::beforeRender()</full_name>
        <docblock line="82">
          <description>Prepare output vars before Controller Rendering.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
    </class>
    <source>eJytVm1v4jgQ/gy/Yk6qlFBR0H07sdvecmx7W213i1juvlQVMsEBX0Ocs52y1ar//WZsJzi89CptEYLEnhnPPM/MeN7/XqyKdv/0tA2nMGIPfPxpHJt1BwYwYYVYwEf+yDNZrHlu4EqxNd9I9QDxyphi0O8nqIEGelItO9aCLJ6UWK4MxEnH2oNvMjUbpjhcyTJfMCNk3oXrPOk1jKT1ZmWLzN2IhOeaLwA3uYLpisOX62m1TBITvhDaKDEvSVeDTCEVGdewLrUBxQ0TORjUY3P5yCGp/culQSs9f9CH7QZ93jAM+JCJ/AHqzz5wDdjHSv7DE+MVbZhNxc1m05MFrstSof+o3/dyur8W5sy/9ND4Dlb9dntYFINBiaJx9JHPy+WY5TyLuuDePgvTuxHzqPOuXWUEuvMoFggngwxxJnhFnmTlAjlxOKdSWXyTUinKEcX/Lbk2Dtd+O8mY1oQT6djjgH83PF9o2HoAP+oDieLqpCIrlwI53QizqlgsCgzQAlwx98gUvDdPBb+wB7YKJQ0iiA6ezJyFMTMrDefAlGJPcRDdFUYAU1TVoTErtm+LwrWytaV2qxWNWLLihOBI5qlYbp9KVS1rmfnHdSFzxMivGyWzjKuoS3b+4Cv2KKSyZDDDHL309kUuHEdjGww9TRFg+v9b8A39/2VEJsyTs/SVGypRWp9IrIrcOnX9629W9Uba10ul8Kx2KwDjT24ClivsZY41k2OFlYmxXGfMYCWWPqNaRTlHQiAt84RIgdmsFo87yGurhUocQYLYprk1OxhkkmEKoQTTcOLOctKtE+Ran12E1N15iXtEPjRS4GZcab9D5ec2/hSM8nAwaHiCu89HInVpbFbMwIZjfdf5zfIFaEw3Q5m3BsQS94y0eYh5ImSpAQ8ztun45KzyCNfZGrYkw0lSP1sB7Eylyhu5toPknBNyE06dLz5syUF24m1VaRklqBfB+UWV8Mg3uraz4gkOVykZAr6W3MwqMGz2a88XPVdsOTNf8V7A8yvuhHYUUX3FTtyabokU4kDFG6kiuKudur8LpPDF20WPrnwVerP3d/fBuTn2OhIgLSfQhfA4ypHWM/BMc+tJ7S72xcDXPbcIvZ/zwpo4fv4IMX/JAcvoT3pgbXgXqlrZAk91FoU2RNWycSN29D1oqUy845S1uLNT03ho04JpN3ze+p29EqWSKqTWYp7VVQnW0WMVVHfrbTtqhuHqpQjvg1maiSJ2j2uuljzm34sMe248Hk4/zb5djoeT4fR20oWgHma29XSwjlzpjIafLzu+fkq8bTFce8hd1GvGGhzpJJqdabTiyQNgbjAbKAjXYajB0MAABHnQX2jwyZeuIENM5hKvHJa/gMpuxllgvDZaxW+VNza0/3MyVXINw/EYcAyjyYq2bA68jbPN8jzuK3rwOlff1r29Zte89w7caMG1R/3XpoIvemoMzajcbtUTqqJx2s1y9nspwwbTwGHCi4wl3JUUAUEjFcGF/N5OLsHPcN6jHNvGS8iEy7QAZ3T12enA/tNV4dcpYe2Gewh2xtuLoxoh6VxK9QY7r6XhYO+nsdABpzFiR0a91EoYDte2Hw1CaDGwmXKAxRaiCH/7ODWFN5nTtS3wqDKVDo16iPCu+oKnrMzMUdWDUxC5fu+jgh5EoVGbBfv904r6IQfiNY2SXdgOEMBN0nlFEdRcHwF//0I6XALbGZoKIKDCZ73Afl9fWP0IgwyC7cAv5+cuuXeLgYQOlkJ0iyioyBbDc/s/kVayEg==</source>
  </file>
  <file path="Plugin/DebugKit/Lib/Panel/SessionPanel.php" generated-path="Plugin.DebugKit.Lib.Panel.SessionPanel.html" hash="8a644f9d21a1f6de3e0c989bb0bf0988" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="Default">
      <extends>\DebugPanel</extends>
      <name>SessionPanel</name>
      <full_name>\SessionPanel</full_name>
      <docblock line="20">
        <description>Provides debug information on the Session contents.</description>
        <long-description></long-description>
        <tag name="package" line="20" description="Default"/>
        <tag name="inherited_from" description="\DebugPanel" refers="\DebugPanel" link="/classes/DebugPanel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$plugin</name>
        <full_name>\DebugPanel::plugin</full_name>
        <default>'DebugKit'</default>
        <docblock line="27">
          <description>Defines which plugin this panel is from so the element can be located.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="Default">
        <name>$title</name>
        <full_name>\DebugPanel::title</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Defines the title for displaying on the toolbar. If null, the class name will be used.</description>
          <long-description>Overriding this allows you to define a custom name in the toolbar.</long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$css</name>
        <full_name>\DebugPanel::css</full_name>
        <default>array()</default>
        <docblock line="42">
          <description>Panel's css files</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$javascript</name>
        <full_name>\DebugPanel::javascript</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Panel's javascript files</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$elementName</name>
        <full_name>\DebugPanel::elementName</full_name>
        <default>null</default>
        <docblock line="57">
          <description>Provide a custom element name for this panel. If null, the underscored version of the class
name will be used.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="Default">
        <name>beforeRender</name>
        <full_name>\SessionPanel::beforeRender()</full_name>
        <docblock line="28">
          <description>beforeRender callback</description>
          <long-description></long-description>
          <tag name="param" line="28" description="" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="28" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\DebugPanel::beforeRender()" refers="\DebugPanel::beforeRender()" link="/classes/DebugPanel.html#method_beforeRender"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>__construct</name>
        <full_name>\DebugPanel::__construct()</full_name>
        <docblock line="62">
          <description>Empty constructor</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>startup</name>
        <full_name>\DebugPanel::startup()</full_name>
        <docblock line="73">
          <description>startup the panel</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="73" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Default">
        <name>beforeRender</name>
        <full_name>\DebugPanel::beforeRender()</full_name>
        <docblock line="82">
          <description>Prepare output vars before Controller Rendering.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
    </class>
    <source>eJytUktvm0AQPsOvmEMkgxXD3W3TVImiRk0ly/Exl2UZ7K1hZ7UP06jNf++AAdvNNZzYmfke8+1+/mp2Js7n8xjmcCf2uPq+SnyTwhLWwqgS7vGANZkGtYcHKxpsye4h2XlvlnkuGcEEGdlt2jOQebVqu/OQyLTng2eqfCsswgMFXQqvSF/Do5bZBUk1NUeuju5JSdQOS+AmWtjsEH4+bsZyN7HGUjlvVRE6rAOqoFI1OmiC82DRC6XBM04UdECQkz9NnlmyQej21Oi+D1wDbmul9zB974O7iH1l6RdKPwD7NS+BbdtmZLhOwbJ/xufDnMsb5RfDIWPy/7LK4/ibMctl4NFkdo9F2K6Exnp2DcfTD+WzJ1XM0k/x+CLYzkGVHGfZDYDSFdmm3w/omOszOtcdJWnPb8QNieaxrIVzY7sXAvzNI6WDkzb8maQKDs/iGvublqKuCyH34/UYwU8PXu5YxFJdo/1LRZcTXMmp1A/yjQerQVgrXnsbkQkFZwJV0LL3fa6TnAjPmVK2FUVX7ujdwZfz5uJmQ8Tm+GdYbnFjUZQJxxZFg/6E5dpb/Bb/A+qhH9w=</source>
  </file>
  <file path="Plugin/DebugKit/Lib/Panel/HistoryPanel.php" generated-path="Plugin.DebugKit.Lib.Panel.HistoryPanel.html" hash="37317fb6c2544e8f7610071107e8e336" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="Default">
      <extends>\DebugPanel</extends>
      <name>HistoryPanel</name>
      <full_name>\HistoryPanel</full_name>
      <docblock line="20">
        <description>Provides debug information on previous requests.</description>
        <long-description></long-description>
        <tag name="package" line="20" description="Default"/>
        <tag name="inherited_from" description="\DebugPanel" refers="\DebugPanel" link="/classes/DebugPanel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$history</name>
        <full_name>\HistoryPanel::history</full_name>
        <default>5</default>
        <docblock line="27">
          <description>Number of history elements to keep</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$plugin</name>
        <full_name>\DebugPanel::plugin</full_name>
        <default>'DebugKit'</default>
        <docblock line="27">
          <description>Defines which plugin this panel is from so the element can be located.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="Default">
        <name>$title</name>
        <full_name>\DebugPanel::title</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Defines the title for displaying on the toolbar. If null, the class name will be used.</description>
          <long-description>Overriding this allows you to define a custom name in the toolbar.</long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$css</name>
        <full_name>\DebugPanel::css</full_name>
        <default>array()</default>
        <docblock line="42">
          <description>Panel's css files</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$javascript</name>
        <full_name>\DebugPanel::javascript</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Panel's javascript files</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$elementName</name>
        <full_name>\DebugPanel::elementName</full_name>
        <default>null</default>
        <docblock line="57">
          <description>Provide a custom element name for this panel. If null, the underscored version of the class
name will be used.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="35" package="Default">
        <name>__construct</name>
        <full_name>\HistoryPanel::__construct()</full_name>
        <docblock line="35">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="35" description="&lt;p&gt;Array of settings.&lt;/p&gt;" type="array" variable="$settings">
            <type>array</type>
          </tag>
          <tag name="return" line="35" description="" type="\HistoryPanel">
            <type>\HistoryPanel</type>
          </tag>
          <tag name="inherited_from" description="\DebugPanel::__construct()" refers="\DebugPanel::__construct()" link="/classes/DebugPanel.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$settings</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="47" package="Default">
        <name>beforeRender</name>
        <full_name>\HistoryPanel::beforeRender()</full_name>
        <docblock line="47">
          <description>beforeRender callback function</description>
          <long-description></long-description>
          <tag name="param" line="47" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="47" description="contents for panel" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\DebugPanel::beforeRender()" refers="\DebugPanel::beforeRender()" link="/classes/DebugPanel.html#method_beforeRender"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>__construct</name>
        <full_name>\DebugPanel::__construct()</full_name>
        <docblock line="62">
          <description>Empty constructor</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>startup</name>
        <full_name>\DebugPanel::startup()</full_name>
        <docblock line="73">
          <description>startup the panel</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="73" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Default">
        <name>beforeRender</name>
        <full_name>\DebugPanel::beforeRender()</full_name>
        <docblock line="82">
          <description>Prepare output vars before Controller Rendering.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
    </class>
    <source>eJytVU1v20YQPUu/YgoIIenKFHroRY4VBw4CB0kKw/FNMYjlcihtRXLZ3aUUo/B/7+xy+WWnTQ4VBIGcmffm6+3q9Zt6X89XZ2dzOINrdsDbm9vQlBGs4Y7VIoN3eMRC1iVWBt4rVuJJqgOEe2Pq9WrFCUEEsVS7yDHI+lGJ3d5AyCPHB19kbk5MIbyXTZUxI2S1hA8Vjyckee/suCzdJ8Gx0pgBOVHB/R7h84f7zmwj7jAT2iiRNharQeaQiwI1lI02oNAwUYEhHEvlEYH39VXSEEvsE10NDvv5H9uAq0JUB+g/Lwc3Gfutkn8iNx7o2pwCT6dTLGuyy0ZR/YRf+Ti9KoU59y8xkT+b1Wo+f1vX63VDoWHwDtNmd8sqLIIltG8fhYk/iTSILuadIqico8honJkNAFHlUpWuP6BvrfAoZKNpzn81qI3241zNecG0hhtajVSPLgvgN4NVpmFIDH/3ef5oypQWTNvbtxjAAq3mNBgJB8S6W9SRKbALr3Yu0axuUmoZFh3uEn4fyr8mSRjVcPJ0+JqRiIEpxR5hodEYYtLw1r1T+s4Su2DST6Mq+DpuZJI2byruppEkvMsV9rQRdTibiRxCock2OLaBLzd4iNqg2cKQ6XwztPG94AuKfJrTt2swJcUpvEN3PDgripTxQ1/VtGcahlGyKChywfvncZ/tVKzPTZ6oof73lse5w++Tt70tOON7/Iiuq8F5vrmXkgqmhy7A9rcwrfWmn8S19a7XClkW9lwkWqfJ5CCMVSwB/Zi+GGZIsZdtO6HztTtIWsuzDBG8egW/YFmbl65uOaT0XHybcjrSDjduy5+G842bO+2vRQ+77vi2Pwd7oLw5KzS6rE/2x06eBgHPCwamYSHgckPysWPoErpSOxFaxzbw6YKHbeA3bh8bVYzqnFmPqJo2c5uaFiRMgU6hP2RqcQvyu01e/TfEhXWg0bFx9he1NdVL57jO8Xpc0AD1LcSXELwJIAYCZ8hlhu4uT9JGFFniMD10MoGJ0rYPvS5a9sCxB24L7nHp7bZGa3XBSYlqh6GXwnLCMAvqotmJykWPdL7s3INu2hCvgoRxjloPccwd1TbGF524FfQhpJZf4bcocq9Rr7Anf2g4/aHRkCcNR7Ch5U/uKz/ZtrFa1s8R/uKa+Ytm6r2wN9rT/B8KJLDH</source>
  </file>
  <file path="Plugin/DebugKit/Lib/Panel/TimerPanel.php" generated-path="Plugin.DebugKit.Lib.Panel.TimerPanel.html" hash="f6ecfc86e863abcfee5332339222bb8b" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="Default">
      <extends>\DebugPanel</extends>
      <name>TimerPanel</name>
      <full_name>\TimerPanel</full_name>
      <docblock line="20">
        <description>Provides debug information on all timers used in a request.</description>
        <long-description></long-description>
        <tag name="package" line="20" description="Default"/>
        <tag name="inherited_from" description="\DebugPanel" refers="\DebugPanel" link="/classes/DebugPanel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$plugin</name>
        <full_name>\DebugPanel::plugin</full_name>
        <default>'DebugKit'</default>
        <docblock line="27">
          <description>Defines which plugin this panel is from so the element can be located.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="Default">
        <name>$title</name>
        <full_name>\DebugPanel::title</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Defines the title for displaying on the toolbar. If null, the class name will be used.</description>
          <long-description>Overriding this allows you to define a custom name in the toolbar.</long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$css</name>
        <full_name>\DebugPanel::css</full_name>
        <default>array()</default>
        <docblock line="42">
          <description>Panel's css files</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$javascript</name>
        <full_name>\DebugPanel::javascript</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Panel's javascript files</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$elementName</name>
        <full_name>\DebugPanel::elementName</full_name>
        <default>null</default>
        <docblock line="57">
          <description>Provide a custom element name for this panel. If null, the underscored version of the class
name will be used.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="Default">
        <name>startup</name>
        <full_name>\TimerPanel::startup()</full_name>
        <docblock line="28">
          <description>startup - add in necessary helpers</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="28" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="28" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\DebugPanel::startup()" refers="\DebugPanel::startup()" link="/classes/DebugPanel.html#method_startup"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>__construct</name>
        <full_name>\DebugPanel::__construct()</full_name>
        <docblock line="62">
          <description>Empty constructor</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>startup</name>
        <full_name>\DebugPanel::startup()</full_name>
        <docblock line="73">
          <description>startup the panel</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="73" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Default">
        <name>beforeRender</name>
        <full_name>\DebugPanel::beforeRender()</full_name>
        <docblock line="82">
          <description>Prepare output vars before Controller Rendering.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
    </class>
    <source>eJy9Uk1v2zAMPce/ggMGxA4a++6uW4sWXYt1W9DmNgyFbNOxFlnS9JEsHfLfR6u226w9DhN8sES+x8dHvvugGx1ls1kEMzhna1xcLWLXJpDDLdO8ggvcoFC6Reng0rAWt8qsIW6c03mWlYQgglSZVRIYlN4ZvmocxGUS+OBO1W7LDMKl8rJijit5BNeyTA9I6jE4cHV0N7xEabECCqKBZYPw+Xo5PHcZt1hx6wwvfIe1oGqouUALrbcODDrGJTjCsUJtEMpRn1SOWNK+0OlToDv/sA04FVyuYTwvjTuwfWHUDyxdDwxtHgK3222qNL0rb0g/4bM+z2Ytd/P+khL5X15lUXSmdZ57So2nF1j41YJJFNMjeLx94i694cU0OY6GjSA5G16RnVWXAFzWyrShP6CPCQGOt2gs+G5KZDUjz396tK53NotKwayFZZcWygH+cigrC08K4PdY0DpmnNcwB1YFQoklWsvMDhoUmkoNE9OMtpEmJZ1RQtB2vC3H/5BAw/dGwkbxKgiZaF+QO1B7WYYO+lrx6xwJqZpMeA3xGy7vmTFsF0+/+LZAQ46F+/0adza+CrrOO1DgzXPZmST4A34tumGeBewz6vn7vpeETigzeS367TucwFDymLL2LwXd8VYL/GiYbv6rqnFhngvoNe6jffQHrwJxaA==</source>
  </file>
  <file path="Plugin/DebugKit/Lib/Panel/LogPanel.php" generated-path="Plugin.DebugKit.Lib.Panel.LogPanel.html" hash="49cd23cca8ed467472ddad9ccbac0e0a" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="Default">
      <extends>\DebugPanel</extends>
      <name>LogPanel</name>
      <full_name>\LogPanel</full_name>
      <docblock line="20">
        <description>Log Panel - Reads log entries made this request.</description>
        <long-description></long-description>
        <tag name="package" line="20" description="Default"/>
        <tag name="inherited_from" description="\DebugPanel" refers="\DebugPanel" link="/classes/DebugPanel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$plugin</name>
        <full_name>\DebugPanel::plugin</full_name>
        <default>'DebugKit'</default>
        <docblock line="27">
          <description>Defines which plugin this panel is from so the element can be located.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="Default">
        <name>$title</name>
        <full_name>\DebugPanel::title</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Defines the title for displaying on the toolbar. If null, the class name will be used.</description>
          <long-description>Overriding this allows you to define a custom name in the toolbar.</long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$css</name>
        <full_name>\DebugPanel::css</full_name>
        <default>array()</default>
        <docblock line="42">
          <description>Panel's css files</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$javascript</name>
        <full_name>\DebugPanel::javascript</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Panel's javascript files</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$elementName</name>
        <full_name>\DebugPanel::elementName</full_name>
        <default>null</default>
        <docblock line="57">
          <description>Provide a custom element name for this panel. If null, the underscored version of the class
name will be used.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="27" package="Default">
        <name>__construct</name>
        <full_name>\LogPanel::__construct()</full_name>
        <docblock line="27">
          <description>Constructor - sets up the log listener.</description>
          <long-description></long-description>
          <tag name="return" line="27" description="" type="\LogPanel">
            <type>\LogPanel</type>
          </tag>
          <tag name="inherited_from" description="\DebugPanel::__construct()" refers="\DebugPanel::__construct()" link="/classes/DebugPanel.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="47" package="Default">
        <name>beforeRender</name>
        <full_name>\LogPanel::beforeRender()</full_name>
        <docblock line="47">
          <description>beforeRender Callback</description>
          <long-description></long-description>
          <tag name="param" line="47" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="47" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\DebugPanel::beforeRender()" refers="\DebugPanel::beforeRender()" link="/classes/DebugPanel.html#method_beforeRender"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>__construct</name>
        <full_name>\DebugPanel::__construct()</full_name>
        <docblock line="62">
          <description>Empty constructor</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>startup</name>
        <full_name>\DebugPanel::startup()</full_name>
        <docblock line="73">
          <description>startup the panel</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="73" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Default">
        <name>beforeRender</name>
        <full_name>\DebugPanel::beforeRender()</full_name>
        <docblock line="82">
          <description>Prepare output vars before Controller Rendering.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
    </class>
    <source>eJytU01P3DAQPW9+xRxWSoJgcw+FUoFQUam0ohwrrZxkknU3sV17zIKq/e8d5wuWcmxOied92O85nz6brYmyk5MITuBa7HD9dZ1Ql0IOD8LICm7wCVttOlQEt1Z0uNd2B8mWyORZVjKDBVbaNmmvoM2Llc2WICnTXg9+6Jr2wiLcaq8qQVKrU7hT5epIpJ6Hk1aQu5clKocV8BAtPG4Rvt89TssB8YCVdGRl4QPXga6hli066LwjsEhCKiDmiUI/IZTz/pQmVlmNRlevg/D8x2PAVSvVDubn3+COYl9b/QtLGon9MY+J+/1+pQ2va295/8zPRpzLOkln48eKxd9llUXRF2Py3DM0iW+w8M1aKGzjUxi+vkla3csiTs+j6Ubc6wZ6EJxx1KJy0PIK3wUrQ8aiQg5XOg76t0dHY5xZVLbCucAeyPhMqJj8agp/Zo9r7o2sL0lbdnFIDrzpOwteLdeLCu3cFHfqrYKfk3jvtzC+4JND7VUZ0ofNppxkk5TNFgvD5SnK86PJOQ+W+MweUjVw0VfBwnnOmFo23mI1gGQNCXaGXpIZng66i3ecJK6wFr4lzlVYK16SAFrEqBqpMIaLS4hv+YoyJQ6TtNc/RB8KcVybnaQNJ7ExY1mvokeac4XTSzA47WEDM6CWoa1oND3MFRR8cS0+YP+XXYu2LUS5mwLn4EQXWiKr25YBy3J+f9tIv6+P23irn3ysNIS55IM2PLgYdnp2OXyHhEaX5bxyiA7RX8f3gpk=</source>
  </file>
  <file path="Plugin/DebugKit/Lib/Panel/EnvironmentPanel.php" generated-path="Plugin.DebugKit.Lib.Panel.EnvironmentPanel.html" hash="34acf5e5a504fa2df1bf84b4cd9cd74a" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="21" package="Default">
      <extends>\DebugPanel</extends>
      <name>EnvironmentPanel</name>
      <full_name>\EnvironmentPanel</full_name>
      <docblock line="21">
        <description>Provides information about your PHP and CakePHP environment to assist with debugging.</description>
        <long-description></long-description>
        <tag name="package" line="21" description="Default"/>
        <tag name="inherited_from" description="\DebugPanel" refers="\DebugPanel" link="/classes/DebugPanel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$plugin</name>
        <full_name>\DebugPanel::plugin</full_name>
        <default>'DebugKit'</default>
        <docblock line="27">
          <description>Defines which plugin this panel is from so the element can be located.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="Default">
        <name>$title</name>
        <full_name>\DebugPanel::title</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Defines the title for displaying on the toolbar. If null, the class name will be used.</description>
          <long-description>Overriding this allows you to define a custom name in the toolbar.</long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$css</name>
        <full_name>\DebugPanel::css</full_name>
        <default>array()</default>
        <docblock line="42">
          <description>Panel's css files</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$javascript</name>
        <full_name>\DebugPanel::javascript</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Panel's javascript files</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$elementName</name>
        <full_name>\DebugPanel::elementName</full_name>
        <default>null</default>
        <docblock line="57">
          <description>Provide a custom element name for this panel. If null, the underscored version of the class
name will be used.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="29" package="Default">
        <name>beforeRender</name>
        <full_name>\EnvironmentPanel::beforeRender()</full_name>
        <docblock line="29">
          <description>beforeRender - Get necessary data about environment to pass back to controller</description>
          <long-description></long-description>
          <tag name="param" line="29" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="29" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\DebugPanel::beforeRender()" refers="\DebugPanel::beforeRender()" link="/classes/DebugPanel.html#method_beforeRender"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>__construct</name>
        <full_name>\DebugPanel::__construct()</full_name>
        <docblock line="62">
          <description>Empty constructor</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>startup</name>
        <full_name>\DebugPanel::startup()</full_name>
        <docblock line="73">
          <description>startup the panel</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="73" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Default">
        <name>beforeRender</name>
        <full_name>\DebugPanel::beforeRender()</full_name>
        <docblock line="82">
          <description>Prepare output vars before Controller Rendering.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
    </class>
    <source>eJytVd9v4jgQfoa/Yh4qJVRdeOeue6WQtrRAUAKtVlUVmcQBH+BEjgOLVv3fd2zHgWzv8SIkj7/55qfH5u9/8k3e7l1ft+EahmRL509zV+470IeA5CyBET3QXZbvKZfwIMieHjOxBXcjZd7v9WK0QAfdTKw72kOWnwRbbyS4cUf7gzBL5ZEICg9ZyRMiWcZvYMzjbsNJWiutL+VuwmLKC5oAKqmAxYbCdLywsGIENGGFFGxVKtsCshRStqMF7MtCgqCSMA4S7cgqO1CI6/x4JtFLtwp0d1ao738sA+52jG+h/r42rtH2ucj+pbGsDHWZTcPj8djNcsSzUmD+aN+reEVvz+S3atNF53/0Cn+9dnuQ5/1+iWzXGdFVuZ4TTnfODZjdC5PdCVs5nb/adigwowNLsKOMp5nY6+JUN0sJJ8wBMHMgPLFVAOUHJjKuB0ZmQIoCDwiOTG4gUSHWjK+7Np14h3rwziY6HaA/JeVJAecM4Ved0Aq7LGhA9Uh8g0eKh0ljWhREnACbT6rs/kgkV5FWJN6qTZxxKbLdjgo7ADnB4caDtzhcNThwh7NUCqxcCHLSubfycoXdhrTksW7KZWLuf3vqYB2tFsbCpPr9hsElC7vfal1VEW9NTNegvZ7u+AjrVBw85lcMcQsoHKgoMA9FrK3fHVQ4H9ZJtKdiTV3j0EFH0asXhGN/5sDtd6i8dW7gKgq9AFXaVYnzI92mw3eHiPXB+aiTssdvE7NsNejn+C6qWs5gPtfxcL2xQDQaBxZUcq2YjO9Dq1CyUQwHwydPw1qy4IvFXi6gaOgHXjSeDSfLkRfNB4unmvRVVZkp+My0uwufl33Ds07ZuhS036/PoKKGJndcayBaBhMLKtkoRoY4qngPy8kkuh+EXs1uIIY0ng4ePWNnxEu4NjxvjfrZWDyHdlszny9YE//R8JRgoMD3FxpSgoEWXrgwNC1V4NQcL64GePVmIz8wvEo2ijfvXvmqz/5iXxHe3qI6rN2gprohariw+YUkXBb1jOMfwC7a0lOhp+08d7rJ+NJph7g2e4zAYjz1onAxCLQ69Ib+bKSk6Xi2XHhKevKXgX4sBz/U8uZ5L5rgz3BUUPjhDVBvgmHjIi8I/OBrLEXAW+Y4phSs5EDUJV5TGSU0ZZwmUWzrcqUoafNOk/zyTicsTVW9rvLy7uDjLpwPvMPNK4hAo12mhSwFlxX6fmvjDT71KV5r81CdI1Y4xmzwVFafyk/1VlV8hD/bn+3f61JsXQ==</source>
  </file>
  <file path="Plugin/DebugKit/Lib/Panel/RequestPanel.php" generated-path="Plugin.DebugKit.Lib.Panel.RequestPanel.html" hash="56f7ff079defaa5a887fb491e939360b" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="Default">
      <extends>\DebugPanel</extends>
      <name>RequestPanel</name>
      <full_name>\RequestPanel</full_name>
      <docblock line="20">
        <description>Provides debug information on the Current request params.</description>
        <long-description></long-description>
        <tag name="package" line="20" description="Default"/>
        <tag name="inherited_from" description="\DebugPanel" refers="\DebugPanel" link="/classes/DebugPanel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$plugin</name>
        <full_name>\DebugPanel::plugin</full_name>
        <default>'DebugKit'</default>
        <docblock line="27">
          <description>Defines which plugin this panel is from so the element can be located.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="Default">
        <name>$title</name>
        <full_name>\DebugPanel::title</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Defines the title for displaying on the toolbar. If null, the class name will be used.</description>
          <long-description>Overriding this allows you to define a custom name in the toolbar.</long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$css</name>
        <full_name>\DebugPanel::css</full_name>
        <default>array()</default>
        <docblock line="42">
          <description>Panel's css files</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$javascript</name>
        <full_name>\DebugPanel::javascript</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Panel's javascript files</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$elementName</name>
        <full_name>\DebugPanel::elementName</full_name>
        <default>null</default>
        <docblock line="57">
          <description>Provide a custom element name for this panel. If null, the underscored version of the class
name will be used.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="Default">
        <name>beforeRender</name>
        <full_name>\RequestPanel::beforeRender()</full_name>
        <docblock line="28">
          <description>beforeRender callback - grabs request params</description>
          <long-description></long-description>
          <tag name="param" line="28" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="28" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\DebugPanel::beforeRender()" refers="\DebugPanel::beforeRender()" link="/classes/DebugPanel.html#method_beforeRender"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>__construct</name>
        <full_name>\DebugPanel::__construct()</full_name>
        <docblock line="62">
          <description>Empty constructor</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>startup</name>
        <full_name>\DebugPanel::startup()</full_name>
        <docblock line="73">
          <description>startup the panel</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="73" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Default">
        <name>beforeRender</name>
        <full_name>\DebugPanel::beforeRender()</full_name>
        <docblock line="82">
          <description>Prepare output vars before Controller Rendering.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
    </class>
    <source>eJytUk1v00AQPce/Yg6VYkeNfQ9QilIKFUWKQm4IofV6nCyxd81+JFQo/73jXcdOWpQTPnln3nsz82bevm82TZRNJhFMYM62uPi8iG2dwAyWrBEF3OEOK9XUKC3ca1bjXuktxBtrm1mWcWKQQKr0OvEKqnnSYr2xEPPE68E3Vdo90wj3ysmCWaHkNTxInp6JlH3yqNXKPQqO0mABlEQNqw3C14fVMdwillgIY7XIXcs1oEooRYUGamcsaLRMSLDEY7naIfC+P6ksqaRdodsh0X7/cQy4rYTcQv+9Nu7M9oVWv5DbjujHPCfu9/tUNRRXTlP/xM86nMlqYafdIyXxF15lUfShaWYzR9B4fIe5Wy+YxGp8DeH1Rdj0UeTj5E10vAhqZycKsrNoASBkqXTt5wMVfJ07rdvb0PjbIVneMDoS0/maRbxixtCWfNKXA/xjURYGhg7gb18wJws1LtHvm7OqyhnfwhTWmuXmRZHj7vyLdiatVlVFvCve/3sAnYHTEpjW7Ml3NWpcTkZB6ST3w5yWjf+tlFCXo9GVchbeBamYjAqR7+PQ0fgH5U4405uu4+lNAAwEp6sLaMoOUIrppwtgnx/gdH/sArpNt2BRQiyMQRuf4eZKbQUmYdpOkfvYa82AbbVZEcw49F2s0QbCz08fV0NzPJzLkh5B0P/p2ew0EbS6rbU8eh6iQ/QMBWuIDQ==</source>
  </file>
  <file path="Plugin/DebugKit/Lib/Panel/VariablesPanel.php" generated-path="Plugin.DebugKit.Lib.Panel.VariablesPanel.html" hash="ef25e86cd8bd683064097f75189f6c0b" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="Default">
      <extends>\DebugPanel</extends>
      <name>VariablesPanel</name>
      <full_name>\VariablesPanel</full_name>
      <docblock line="20">
        <description>Provides debug information on the View variables.</description>
        <long-description></long-description>
        <tag name="package" line="20" description="Default"/>
        <tag name="inherited_from" description="\DebugPanel" refers="\DebugPanel" link="/classes/DebugPanel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$plugin</name>
        <full_name>\DebugPanel::plugin</full_name>
        <default>'DebugKit'</default>
        <docblock line="27">
          <description>Defines which plugin this panel is from so the element can be located.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="Default">
        <name>$title</name>
        <full_name>\DebugPanel::title</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Defines the title for displaying on the toolbar. If null, the class name will be used.</description>
          <long-description>Overriding this allows you to define a custom name in the toolbar.</long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$css</name>
        <full_name>\DebugPanel::css</full_name>
        <default>array()</default>
        <docblock line="42">
          <description>Panel's css files</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$javascript</name>
        <full_name>\DebugPanel::javascript</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Panel's javascript files</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$elementName</name>
        <full_name>\DebugPanel::elementName</full_name>
        <default>null</default>
        <docblock line="57">
          <description>Provide a custom element name for this panel. If null, the underscored version of the class
name will be used.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="28" package="Default">
        <name>beforeRender</name>
        <full_name>\VariablesPanel::beforeRender()</full_name>
        <docblock line="28">
          <description>beforeRender callback</description>
          <long-description></long-description>
          <tag name="param" line="28" description="" type="\Controller" variable="$controller">
            <type>\Controller</type>
          </tag>
          <tag name="return" line="28" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\DebugPanel::beforeRender()" refers="\DebugPanel::beforeRender()" link="/classes/DebugPanel.html#method_beforeRender"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>__construct</name>
        <full_name>\DebugPanel::__construct()</full_name>
        <docblock line="62">
          <description>Empty constructor</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>startup</name>
        <full_name>\DebugPanel::startup()</full_name>
        <docblock line="73">
          <description>startup the panel</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="73" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Default">
        <name>beforeRender</name>
        <full_name>\DebugPanel::beforeRender()</full_name>
        <docblock line="82">
          <description>Prepare output vars before Controller Rendering.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
    </class>
    <source>eJytUk1v2zAMPce/gocCtoPEvmdb2mFFsWIdEGRFr4Ms04kWWdL0Ya8Y+t9HO7Ybbz1OJ4l875F81PtrczRRvlxGsIRP7IS7z7vE1ylsYM+MKOEWG5Ta1Kg83FlWY6vtCZKj92aT55wYJJBpe0h7BW2erTgcPSQ87fXgm658yyzCnQ6qZF5otYJ7xbOZSDUlR61O7kFwVA5LoCRaeDwifL1/HMMdYo+lcN6KInRcB7qCSkh0UAfnwaJnQoEnHit0g8Cn/pT2pJINhW5eE935j2PAjRTqBNP517iZ7TurfyD3A7Efc05s2zbThuI6WOqf+PmAc3kt/Hp4ZCT+l1d5FH00ZrMJBE3iWyzCYccUyngF59cX4bMHUcTpu2j8EdROI0qys+wAIFSlbd3PB/rs65PAFhpmBSvI9sHPPOKSOQdPY7wvBPjLoyodvNaG31OpgsyzuMd+05xJWTB+GtdjGH09WovyVktJgCs+3XsAbTpYBcxa9tw3sDChIC+gCor3/V7qJ28rpdTOYnEp9b1Ge8DkArPeNjQxDeZWZ0gSX1n8GdD59ZZWz2L4sIUZYZZOyd3FS/QS/QFGMSbO</source>
  </file>
  <file path="Plugin/DebugKit/Lib/Panel/SqlLogPanel.php" generated-path="Plugin.DebugKit.Lib.Panel.SqlLogPanel.html" hash="e648ab2ebb2d659def3bb5db95afb1a2" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="Default">
      <extends>\DebugPanel</extends>
      <name>SqlLogPanel</name>
      <full_name>\SqlLogPanel</full_name>
      <docblock line="20">
        <description>Provides debug information on the SQL logs and provides links to an ajax explain interface.</description>
        <long-description></long-description>
        <tag name="package" line="20" description="Default"/>
        <tag name="inherited_from" description="\DebugPanel" refers="\DebugPanel" link="/classes/DebugPanel.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="28" package="Default">
        <name>$slowRate</name>
        <full_name>\SqlLogPanel::slowRate</full_name>
        <default>20</default>
        <docblock line="28">
          <description>Minimum number of Rows Per Millisecond that must be returned by a query before an explain
is done.</description>
          <long-description></long-description>
          <tag name="var" line="28" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$plugin</name>
        <full_name>\DebugPanel::plugin</full_name>
        <default>'DebugKit'</default>
        <docblock line="27">
          <description>Defines which plugin this panel is from so the element can be located.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="Default">
        <name>$title</name>
        <full_name>\DebugPanel::title</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Defines the title for displaying on the toolbar. If null, the class name will be used.</description>
          <long-description>Overriding this allows you to define a custom name in the toolbar.</long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$css</name>
        <full_name>\DebugPanel::css</full_name>
        <default>array()</default>
        <docblock line="42">
          <description>Panel's css files</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$javascript</name>
        <full_name>\DebugPanel::javascript</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Panel's javascript files</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$elementName</name>
        <full_name>\DebugPanel::elementName</full_name>
        <default>null</default>
        <docblock line="57">
          <description>Provide a custom element name for this panel. If null, the underscored version of the class
name will be used.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="36" package="Default">
        <name>beforeRender</name>
        <full_name>\SqlLogPanel::beforeRender()</full_name>
        <docblock line="36">
          <description>Gets the connection names that should have logs + dumps generated.</description>
          <long-description></long-description>
          <tag name="param" line="36" description="" type="\Controller|string" variable="$controller">
            <type>\Controller</type>
            <type>string</type>
          </tag>
          <tag name="return" line="36" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\DebugPanel::beforeRender()" refers="\DebugPanel::beforeRender()" link="/classes/DebugPanel.html#method_beforeRender"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>__construct</name>
        <full_name>\DebugPanel::__construct()</full_name>
        <docblock line="62">
          <description>Empty constructor</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>startup</name>
        <full_name>\DebugPanel::startup()</full_name>
        <docblock line="73">
          <description>startup the panel</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="73" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Default">
        <name>beforeRender</name>
        <full_name>\DebugPanel::beforeRender()</full_name>
        <docblock line="82">
          <description>Prepare output vars before Controller Rendering.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
        <inherited_from>\DebugPanel</inherited_from>
      </method>
    </class>
    <source>eJytVE1v2zgQPdu/YgoYlZRtrGKPbpNtkbS7Re2F1+mtWxSUNJLYUKRCUnaMJv99h6K+3HZ7qgHDEmfmzZvHN375R13W8/jsbA5ncMVucfvXNrRVBCvYsZpncI17FKquUFp4q1mFB6VvISytrVdxnFIFASyVLqIWQdVHzYvSQphGLR7cqNwemEZ4qxqZMcuVfAbvZLo8AcmHYI/l4NY8RWkwAwqihg8lwubdh/7YZeww48ZqnjSu1oDKIecCDVSNsaDRMi7BUh1L1B4hHfhJZQll2TV6NQbc5xeOAa8El7cwfL4X7kT2rVZfMLVdYTvmaeHhcFiqms5Vo4k/1cddnokrbs+7lyWBf6NVPJ+/ruvVqqHUMLjGpCm2TKIInoF/e8/tcs2TIHox7x1BdPY8IzkzlwBc5kpX7XygvK43/6xBqMIAkxnUfbqb2YBVdArsC7sHvK+FuwouLeqcDcrH81QwY+DmTqyV50O5FmVmYKQIXwdGGy551VQgmyohS9B979TBwJaeN1wIbjBVxMSWzHoPJOhs0GhJNkqOwOCuQX2kYxoFHb+OmgPnNKiSoyv2TLeMC9Qt11ndJCQwLIxQhx2zCBfw+/NRrj/RmlYV4iDpGp1OknbGeD6mVI3IoGTkxFaz3yBrqtpAgRI1wWVD55rRrsG/V0parYRA/eBcLgtYpMNRm+hnA6Y1O55wzBvpCfhJd+hWKBwBp0gRCTyb8RzCJ+11fMZ72ipyydUwx4ZJRjIEkc+dTfuG5JjZ7JG+i3FwQ9oMURfKEkLLeeEC3+GuVt7Qa+rr4RxplpYQTgqZaVnT89+kasdkkWm+p3kuyBNCvPBHyY+bFGivmWU3ba9witXWOQXc7yzEqrZH1/r80id9DHyb4FMET5/Cj+IE7IegnAgeHlqkJxXaUmW9olRB60Y0yO1B5DK6KWbuNrhssCXy2LPhxqD9aR9fPYrwv7kj8KLfxgvImTC+5YKbN/6YJcIZO6w1Fp9p29MyDOJwczR34mGrjC00mmgR0/9G1zUa1TtFGdiNDa2ejjj1y8fJdXxyg3RFvbdOHBdMCgO4uIQpEilsSyJZKpH5oC25Ob/st9bRfZw/zv8D6/s9dA==</source>
  </file>
  <file path="Plugin/DebugKit/Lib/DebugPanel.php" generated-path="Plugin.DebugKit.Lib.DebugPanel.html" hash="20892b1abe12f715e0adbde44f986475" package="Default">
    <docblock line="0">
      <description>CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)</description>
      <long-description>Licensed under The MIT License
Redistributions of files must retain the above copyright notice.</long-description>
      <tag name="copyright" line="0" description="Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)"/>
      <tag name="link" line="0" description="CakePHP(tm) Project" link="http://cakephp.org"/>
      <tag name="since" line="0" description="DebugKit 0.1"/>
      <tag name="license" line="0" description="MIT License" link="http://www.opensource.org/licenses/mit-license.php"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="" line="20" package="Default">
      <extends/>
      <name>DebugPanel</name>
      <full_name>\DebugPanel</full_name>
      <docblock line="20">
        <description>Base class for debug panels.</description>
        <long-description></long-description>
        <tag name="since" line="20" description="DebugKit 0.1"/>
        <tag name="package" line="20" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="" line="27" package="Default">
        <name>$plugin</name>
        <full_name>\DebugPanel::plugin</full_name>
        <default>'DebugKit'</default>
        <docblock line="27">
          <description>Defines which plugin this panel is from so the element can be located.</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="35" package="Default">
        <name>$title</name>
        <full_name>\DebugPanel::title</full_name>
        <default>null</default>
        <docblock line="35">
          <description>Defines the title for displaying on the toolbar. If null, the class name will be used.</description>
          <long-description>Overriding this allows you to define a custom name in the toolbar.</long-description>
          <tag name="var" line="35" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="42" package="Default">
        <name>$css</name>
        <full_name>\DebugPanel::css</full_name>
        <default>array()</default>
        <docblock line="42">
          <description>Panel's css files</description>
          <long-description></long-description>
          <tag name="var" line="42" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="49" package="Default">
        <name>$javascript</name>
        <full_name>\DebugPanel::javascript</full_name>
        <default>array()</default>
        <docblock line="49">
          <description>Panel's javascript files</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="" line="57" package="Default">
        <name>$elementName</name>
        <full_name>\DebugPanel::elementName</full_name>
        <default>null</default>
        <docblock line="57">
          <description>Provide a custom element name for this panel. If null, the underscored version of the class
name will be used.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="62" package="Default">
        <name>__construct</name>
        <full_name>\DebugPanel::__construct()</full_name>
        <docblock line="62">
          <description>Empty constructor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="73" package="Default">
        <name>startup</name>
        <full_name>\DebugPanel::startup()</full_name>
        <docblock line="73">
          <description>startup the panel</description>
          <long-description>Pull information from the controller / request</long-description>
          <tag name="param" line="73" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="73" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="82" package="Default">
        <name>beforeRender</name>
        <full_name>\DebugPanel::beforeRender()</full_name>
        <docblock line="82">
          <description>Prepare output vars before Controller Rendering.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="&lt;p&gt;Controller reference.&lt;/p&gt;" type="\Controller|object" variable="$controller">
            <type>\Controller</type>
            <type>object</type>
          </tag>
          <tag name="return" line="82" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$controller</name>
          <default></default>
          <type>\Controller|object</type>
        </argument>
      </method>
    </class>
    <source>eJy9VE1vEzEQPZNfMQekJlXZhWuhoqKlouIrKj0iVY53NnHr9Rh/ZBVB/ztj72bz0apwQOwpsWfevPdmPG/e2oUdlYeHIziEM3GH0w/TcWgmcAxXwqoKznGJmmyDJsCFEw225O5gvAjBHpel5AwGKMjNJxmB7Mqp+SLAWE4yHnyjOrTCIVxQNJUIiswRXBpZ7IDUw+UaK8F9UhKNxwr4Eh1cLxA+X16vj1PEFVbKB6dmMeV6oBpqpdFDE30Ah0EoA4HzxIyWCHLgZygwStEXOt1cpO8fyoBTrcwdDN9D43Zsnzq6RRlyoldG4pB4jrM4/6gCvCxe9bjZhV3ctm0LsnxO0bE8hi/7OF82Krzo/xRce8/KcrQeg3eCUaUW3kNNDqpUGKwwqP3g15PcylGXnY+nKRF+DujnWCvDDWoXSi7A6jjPHVK+KwH8o3bUgKfcN9SYZ08KAzMETVIErAYeS+Eg9d/Mc91nNs5YIjzvcU/gYM3t4PUDCgk/qKCx06m81WLFUEDdzAQiPROugMsaTNT6KJ922gw/BWiV1olV9B0l+LpE51SVMLIkoTW1HlYUGYydTHVBgOThZIkZQ+3W+pOwju9J5rNRlE0+8CBTz9L8b8MI58RqFyXFnXQX48lDmFuxFF46ZcNfoW2FPwbqaKmqLdnrlmb5yflN9/eszs/eS3K8AthZz+8qvfChCwn+0UY8aWFf/0tK3DfyfWPDiteE4cQoA7md1DoamR433NwMIeMJD/ez+wHBB+FCtJlk1tTTmXIdbjbrbfKC6KY8SyETHGnNG67klfUjog9rDVbwzoXvZ0PIL5qlBcEt3GRtbjm9Roem22xwygswOgNLUtXjQnq24y2ILeQ9aVOHNq1AisHGAOyvZ9NZEW5TuMLUNXa9+F8iOg5d3aeV3I9+AzBNPZs=</source>
  </file>
  <package name="Croogo.Croogo.Model.Behavior" full_name="Croogo.Croogo.Model.Behavior"/>
  <package name="Default" full_name="Default"/>
  <package name="NetCommons" full_name="NetCommons">
    <package name="NetCommons" full_name="NetCommons\NetCommons">
      <package name="Controller" full_name="NetCommons\NetCommons\Controller">
        <package name="Component" full_name="NetCommons\NetCommons\Controller\Component"/>
      </package>
      <package name="Error" full_name="NetCommons\NetCommons\Error"/>
      <package name="Model" full_name="NetCommons\NetCommons\Model">
        <package name="Befavior" full_name="NetCommons\NetCommons\Model\Befavior"/>
        <package name="Behavior" full_name="NetCommons\NetCommons\Model\Behavior"/>
      </package>
      <package name="TestSuite" full_name="NetCommons\NetCommons\TestSuite"/>
      <package name="Test" full_name="NetCommons\NetCommons\Test">
        <package name="Case" full_name="NetCommons\NetCommons\Test\Case">
          <package name="Controller" full_name="NetCommons\NetCommons\Test\Case\Controller"/>
        </package>
        <package name="View" full_name="NetCommons\NetCommons\Test\View">
          <package name="Helper" full_name="NetCommons\NetCommons\Test\View\Helper"/>
        </package>
        <package name="test_app" full_name="NetCommons\NetCommons\Test\test_app">
          <package name="TestNetCommons" full_name="NetCommons\NetCommons\Test\test_app\TestNetCommons">
            <package name="Controller" full_name="NetCommons\NetCommons\Test\test_app\TestNetCommons\Controller"/>
          </package>
          <package name="TestPlugin" full_name="NetCommons\NetCommons\Test\test_app\TestPlugin">
            <package name="Controller" full_name="NetCommons\NetCommons\Test\test_app\TestPlugin\Controller"/>
          </package>
        </package>
      </package>
      <package name="Utility" full_name="NetCommons\NetCommons\Utility"/>
      <package name="View" full_name="NetCommons\NetCommons\View">
        <package name="Helper" full_name="NetCommons\NetCommons\View\Helper"/>
      </package>
    </package>
    <package name="TestSuite" full_name="NetCommons\TestSuite"/>
  </package>
  <package name="app.Controller" full_name="app.Controller"/>
  <package name="app.Model" full_name="app.Model"/>
  <package name="global" full_name="global"/>
  <namespace name="global" full_name="global"/>
  <deprecated count="12"/>
</project>
